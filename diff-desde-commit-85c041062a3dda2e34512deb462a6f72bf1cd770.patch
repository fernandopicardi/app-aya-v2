diff --git a/estrutura.mmd b/estrutura.mmd
index fb0409a..06b0a9a 100644
--- a/estrutura.mmd
+++ b/estrutura.mmd
@@ -7,7 +7,9 @@ graph TD
     . --> ._.gitignore[".gitignore"]
     . --> ._.metadata[".metadata"]
     . --> ._analysis_options.yaml["analysis_options.yaml"]
+    . --> ._analyze_output.json["analyze_output.json"]
     . --> ._app_aya_v2.iml["app_aya_v2.iml"]
+    . --> ._estrutura.mmd["estrutura.mmd"]
     . --> ._estrutura.txt["estrutura.txt"]
     . --> ._LICENSE["LICENSE"]
     . --> ._pubspec.lock["pubspec.lock"]
@@ -25,10 +27,10 @@ graph TD
     . --> ._web["web"]
     .dart_tool --> .dart_tool_package_config.json["package_config.json"]
     .dart_tool --> .dart_tool_package_config_subset["package_config_subset"]
+    .dart_tool --> .dart_tool_package_graph.json["package_graph.json"]
     .dart_tool --> .dart_tool_version["version"]
     .dart_tool --> .dart_tool_chrome-device["chrome-device"]
     .dart_tool --> .dart_tool_dartpad["dartpad"]
-    .dart_tool --> .dart_tool_extension_discovery["extension_discovery"]
     .dart_tool_chrome-device --> .dart_tool_chrome-device_Default["Default"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Account Web Data["Account Web Data"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Account Web Data-journal["Account Web Data-journal"]
@@ -46,12 +48,14 @@ graph TD
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_History-journal["History-journal"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_LOCK["LOCK"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_LOG["LOG"]
+    .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Login Data["Login Data"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Login Data For Account["Login Data For Account"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Login Data For Account-journal["Login Data For Account-journal"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Login Data-journal["Login Data-journal"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Network Action Predictor["Network Action Predictor"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Network Action Predictor-journal["Network Action Predictor-journal"]
+    .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_passkey_enclave_state["passkey_enclave_state"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Preferences["Preferences"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_PreferredApps["PreferredApps"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_README["README"]
@@ -91,24 +95,43 @@ graph TD
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_shared_proto_db["shared_proto_db"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Site Characteristics Database["Site Characteristics Database"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_Sync Data["Sync Data"]
+    .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_VideoDecodeStats["VideoDecodeStats"]
     .dart_tool_chrome-device_Default --> .dart_tool_chrome-device_Default_WebStorage["WebStorage"]
     .dart_tool_chrome-device_Default_AutofillStrikeDatabase --> .dart_tool_chrome-device_Default_AutofillStrikeDatabase_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_AutofillStrikeDatabase --> .dart_tool_chrome-device_Default_AutofillStrikeDatabase_LOG["LOG"]
-    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_1f632b88-25b6-486a-a41b-0ad231ec2613["1f632b88-25b6-486a-a41b-0ad231ec2613"]
+    .dart_tool_chrome-device_Default_AutofillStrikeDatabase --> .dart_tool_chrome-device_Default_AutofillStrikeDatabase_LOG.old["LOG.old"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_028430dc-d5a0-4ad5-b4f7-d3b65ddd7215["028430dc-d5a0-4ad5-b4f7-d3b65ddd7215"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_266f71f6-3c39-432d-ad69-52e3bbc51a55["266f71f6-3c39-432d-ad69-52e3bbc51a55"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_296bdefd-395a-4e87-873b-f484f31c7a38["296bdefd-395a-4e87-873b-f484f31c7a38"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_3191710e-f4c3-4dc5-a3d3-2defd709a830["3191710e-f4c3-4dc5-a3d3-2defd709a830"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_4a6ff43d-df2b-4b9b-b3c2-b73d9c901104["4a6ff43d-df2b-4b9b-b3c2-b73d9c901104"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_4ee6190f-1ff6-4bd7-a932-7bbb652d6646["4ee6190f-1ff6-4bd7-a932-7bbb652d6646"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_72cd55ad-a9e4-4465-9b2f-38273cb45885["72cd55ad-a9e4-4465-9b2f-38273cb45885"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_7f2895b1-5b62-4e60-9b0d-c4e99958cf73["7f2895b1-5b62-4e60-9b0d-c4e99958cf73"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_85bb01fa-6266-47dc-9d98-07bb0e8df1e5["85bb01fa-6266-47dc-9d98-07bb0e8df1e5"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_9b6de896-0173-4eae-9aba-a3cd843aeb02["9b6de896-0173-4eae-9aba-a3cd843aeb02"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_bcbb3ba4-358a-4440-9e72-5901f0d3d484["bcbb3ba4-358a-4440-9e72-5901f0d3d484"]
+    .dart_tool_chrome-device_Default_blob_storage --> .dart_tool_chrome-device_Default_blob_storage_da724768-fd0c-4cd8-8b86-c2bb5c3fce8a["da724768-fd0c-4cd8-8b86-c2bb5c3fce8a"]
     .dart_tool_chrome-device_Default_BudgetDatabase --> .dart_tool_chrome-device_Default_BudgetDatabase_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_BudgetDatabase --> .dart_tool_chrome-device_Default_BudgetDatabase_LOG["LOG"]
+    .dart_tool_chrome-device_Default_BudgetDatabase --> .dart_tool_chrome-device_Default_BudgetDatabase_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_chrome_cart_db --> .dart_tool_chrome-device_Default_chrome_cart_db_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_chrome_cart_db --> .dart_tool_chrome-device_Default_chrome_cart_db_LOG["LOG"]
+    .dart_tool_chrome-device_Default_chrome_cart_db --> .dart_tool_chrome-device_Default_chrome_cart_db_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_ClientCertificates --> .dart_tool_chrome-device_Default_ClientCertificates_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_ClientCertificates --> .dart_tool_chrome-device_Default_ClientCertificates_LOG["LOG"]
+    .dart_tool_chrome-device_Default_ClientCertificates --> .dart_tool_chrome-device_Default_ClientCertificates_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_commerce_subscription_db --> .dart_tool_chrome-device_Default_commerce_subscription_db_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_commerce_subscription_db --> .dart_tool_chrome-device_Default_commerce_subscription_db_LOG["LOG"]
+    .dart_tool_chrome-device_Default_commerce_subscription_db --> .dart_tool_chrome-device_Default_commerce_subscription_db_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_discounts_db --> .dart_tool_chrome-device_Default_discounts_db_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_discounts_db --> .dart_tool_chrome-device_Default_discounts_db_LOG["LOG"]
+    .dart_tool_chrome-device_Default_discounts_db --> .dart_tool_chrome-device_Default_discounts_db_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Download Service --> .dart_tool_chrome-device_Default_Download Service_EntryDB["EntryDB"]
     .dart_tool_chrome-device_Default_Download Service --> .dart_tool_chrome-device_Default_Download Service_Files["Files"]
     .dart_tool_chrome-device_Default_Download Service_EntryDB --> .dart_tool_chrome-device_Default_Download Service_EntryDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Download Service_EntryDB --> .dart_tool_chrome-device_Default_Download Service_EntryDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Download Service_EntryDB --> .dart_tool_chrome-device_Default_Download Service_EntryDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Extension Rules --> .dart_tool_chrome-device_Default_Extension Rules_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_Extension Rules --> .dart_tool_chrome-device_Default_Extension Rules_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Extension Rules --> .dart_tool_chrome-device_Default_Extension Rules_LOCK["LOCK"]
@@ -123,24 +146,29 @@ graph TD
     .dart_tool_chrome-device_Default_Extension State --> .dart_tool_chrome-device_Default_Extension State_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Extension State --> .dart_tool_chrome-device_Default_Extension State_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Extension State --> .dart_tool_chrome-device_Default_Extension State_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Extension State --> .dart_tool_chrome-device_Default_Extension State_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Extension State --> .dart_tool_chrome-device_Default_Extension State_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB["AvailabilityDB"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB["EventDB"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_AvailabilityDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB --> .dart_tool_chrome-device_Default_Feature Engagement Tracker_EventDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_GCM Store --> .dart_tool_chrome-device_Default_GCM Store_Encryption["Encryption"]
     .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_LOG["LOG"]
+    .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_GCM Store_Encryption --> .dart_tool_chrome-device_Default_GCM Store_Encryption_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_Local Storage --> .dart_tool_chrome-device_Default_Local Storage_leveldb["leveldb"]
     .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Local Storage_leveldb --> .dart_tool_chrome-device_Default_Local Storage_leveldb_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_Network --> .dart_tool_chrome-device_Default_Network_Cookies["Cookies"]
     .dart_tool_chrome-device_Default_Network --> .dart_tool_chrome-device_Default_Network_Cookies-journal["Cookies-journal"]
@@ -153,10 +181,13 @@ graph TD
     .dart_tool_chrome-device_Default_Network --> .dart_tool_chrome-device_Default_Network_Trust Tokens-journal["Trust Tokens-journal"]
     .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store --> .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store --> .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store_LOG["LOG"]
+    .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store --> .dart_tool_chrome-device_Default_optimization_guide_hint_cache_store_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_parcel_tracking_db --> .dart_tool_chrome-device_Default_parcel_tracking_db_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_parcel_tracking_db --> .dart_tool_chrome-device_Default_parcel_tracking_db_LOG["LOG"]
+    .dart_tool_chrome-device_Default_parcel_tracking_db --> .dart_tool_chrome-device_Default_parcel_tracking_db_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_PersistentOriginTrials --> .dart_tool_chrome-device_Default_PersistentOriginTrials_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_PersistentOriginTrials --> .dart_tool_chrome-device_Default_PersistentOriginTrials_LOG["LOG"]
+    .dart_tool_chrome-device_Default_PersistentOriginTrials --> .dart_tool_chrome-device_Default_PersistentOriginTrials_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Safe Browsing Network --> .dart_tool_chrome-device_Default_Safe Browsing Network_NetworkDataMigrated["NetworkDataMigrated"]
     .dart_tool_chrome-device_Default_Safe Browsing Network --> .dart_tool_chrome-device_Default_Safe Browsing Network_Safe Browsing Cookies["Safe Browsing Cookies"]
     .dart_tool_chrome-device_Default_Safe Browsing Network --> .dart_tool_chrome-device_Default_Safe Browsing Network_Safe Browsing Cookies-journal["Safe Browsing Cookies-journal"]
@@ -165,18 +196,33 @@ graph TD
     .dart_tool_chrome-device_Default_Segmentation Platform --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB["SignalStorageConfigDB"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SegmentInfoDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB --> .dart_tool_chrome-device_Default_Segmentation Platform_SignalStorageConfigDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Service Worker --> .dart_tool_chrome-device_Default_Service Worker_Database["Database"]
     .dart_tool_chrome-device_Default_Service Worker --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache["ScriptCache"]
     .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Service Worker_Database --> .dart_tool_chrome-device_Default_Service Worker_Database_MANIFEST-000001["MANIFEST-000001"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_013888a1cda32b90_0["013888a1cda32b90_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_08b99d499107ba17_0["08b99d499107ba17_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_297ecea5cebb5dfe_0["297ecea5cebb5dfe_0"]
     .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_2cc80dabc69f58b6_0["2cc80dabc69f58b6_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_4cb013792b196a35_0["4cb013792b196a35_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_67a473248953641b_0["67a473248953641b_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_7b4fd8111178d5b1_0["7b4fd8111178d5b1_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_b6c28cea6ed9dfc1_0["b6c28cea6ed9dfc1_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_ba23d8ecda68de77_0["ba23d8ecda68de77_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_d0757ff92c7cde0a_0["d0757ff92c7cde0a_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_f1cdccba37924bda_0["f1cdccba37924bda_0"]
+    .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_fa813c9ad67834ac_0["fa813c9ad67834ac_0"]
     .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_index["index"]
     .dart_tool_chrome-device_Default_Service Worker_ScriptCache --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_index-dir["index-dir"]
     .dart_tool_chrome-device_Default_Service Worker_ScriptCache_index-dir --> .dart_tool_chrome-device_Default_Service Worker_ScriptCache_index-dir_the-real-index["the-real-index"]
@@ -184,9 +230,35 @@ graph TD
     .dart_tool_chrome-device_Default_Session Storage --> .dart_tool_chrome-device_Default_Session Storage_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Session Storage --> .dart_tool_chrome-device_Default_Session Storage_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Session Storage --> .dart_tool_chrome-device_Default_Session Storage_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Session Storage --> .dart_tool_chrome-device_Default_Session Storage_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Session Storage --> .dart_tool_chrome-device_Default_Session Storage_MANIFEST-000001["MANIFEST-000001"]
-    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392094771126397["Session_13392094771126397"]
-    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392094810453966["Tabs_13392094810453966"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392526974237441["Session_13392526974237441"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392528931720844["Session_13392528931720844"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392530336265371["Session_13392530336265371"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392531158327443["Session_13392531158327443"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392531305976457["Session_13392531305976457"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392531474942521["Session_13392531474942521"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392534580106322["Session_13392534580106322"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392535903575181["Session_13392535903575181"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392536789888448["Session_13392536789888448"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392536918341446["Session_13392536918341446"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392540457327634["Session_13392540457327634"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392540759473369["Session_13392540759473369"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392542504405908["Session_13392542504405908"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392542633237922["Session_13392542633237922"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Session_13392543154102828["Session_13392543154102828"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392529896709730["Tabs_13392529896709730"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392530336469305["Tabs_13392530336469305"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392531158697488["Tabs_13392531158697488"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392531306157586["Tabs_13392531306157586"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392531475174884["Tabs_13392531475174884"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392534580369323["Tabs_13392534580369323"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392535903812803["Tabs_13392535903812803"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392536790087387["Tabs_13392536790087387"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392536918556098["Tabs_13392536918556098"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392537298321301["Tabs_13392537298321301"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392542504635933["Tabs_13392542504635933"]
+    .dart_tool_chrome-device_Default_Sessions --> .dart_tool_chrome-device_Default_Sessions_Tabs_13392543154315377["Tabs_13392543154315377"]
     .dart_tool_chrome-device_Default_Shared Dictionary --> .dart_tool_chrome-device_Default_Shared Dictionary_db["db"]
     .dart_tool_chrome-device_Default_Shared Dictionary --> .dart_tool_chrome-device_Default_Shared Dictionary_db-journal["db-journal"]
     .dart_tool_chrome-device_Default_Shared Dictionary --> .dart_tool_chrome-device_Default_Shared Dictionary_cache["cache"]
@@ -194,31 +266,40 @@ graph TD
     .dart_tool_chrome-device_Default_Shared Dictionary_cache --> .dart_tool_chrome-device_Default_Shared Dictionary_cache_index-dir["index-dir"]
     .dart_tool_chrome-device_Default_Shared Dictionary_cache_index-dir --> .dart_tool_chrome-device_Default_Shared Dictionary_cache_index-dir_the-real-index["the-real-index"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_000003.log["000003.log"]
+    .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_000004.log["000004.log"]
+    .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_000005.ldb["000005.ldb"]
+    .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_000007.log["000007.log"]
+    .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_000008.ldb["000008.ldb"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_LOG["LOG"]
+    .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_shared_proto_db --> .dart_tool_chrome-device_Default_shared_proto_db_metadata["metadata"]
     .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_LOG["LOG"]
+    .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_shared_proto_db_metadata --> .dart_tool_chrome-device_Default_shared_proto_db_metadata_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Site Characteristics Database --> .dart_tool_chrome-device_Default_Site Characteristics Database_MANIFEST-000001["MANIFEST-000001"]
     .dart_tool_chrome-device_Default_Sync Data --> .dart_tool_chrome-device_Default_Sync Data_LevelDB["LevelDB"]
     .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_000003.log["000003.log"]
     .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_CURRENT["CURRENT"]
     .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_LOCK["LOCK"]
     .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_LOG["LOG"]
+    .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_LOG.old["LOG.old"]
     .dart_tool_chrome-device_Default_Sync Data_LevelDB --> .dart_tool_chrome-device_Default_Sync Data_LevelDB_MANIFEST-000001["MANIFEST-000001"]
+    .dart_tool_chrome-device_Default_VideoDecodeStats --> .dart_tool_chrome-device_Default_VideoDecodeStats_LOCK["LOCK"]
+    .dart_tool_chrome-device_Default_VideoDecodeStats --> .dart_tool_chrome-device_Default_VideoDecodeStats_LOG["LOG"]
     .dart_tool_chrome-device_Default_WebStorage --> .dart_tool_chrome-device_Default_WebStorage_QuotaManager["QuotaManager"]
     .dart_tool_chrome-device_Default_WebStorage --> .dart_tool_chrome-device_Default_WebStorage_QuotaManager-journal["QuotaManager-journal"]
     .dart_tool_dartpad --> .dart_tool_dartpad_web_plugin_registrant.dart["web_plugin_registrant.dart"]
-    .dart_tool_extension_discovery --> .dart_tool_extension_discovery_vs_code.json["vs_code.json"]
     .idea --> .idea_modules.xml["modules.xml"]
     .idea --> .idea_workspace.xml["workspace.xml"]
     .idea --> .idea_libraries["libraries"]
@@ -311,6 +392,9 @@ graph TD
     ios_Flutter --> ios_Flutter_flutter_export_environment.sh["flutter_export_environment.sh"]
     ios_Flutter --> ios_Flutter_Generated.xcconfig["Generated.xcconfig"]
     ios_Flutter --> ios_Flutter_Release.xcconfig["Release.xcconfig"]
+    ios_Flutter --> ios_Flutter_ephemeral["ephemeral"]
+    ios_Flutter_ephemeral --> ios_Flutter_ephemeral_flutter_lldbinit["flutter_lldbinit"]
+    ios_Flutter_ephemeral --> ios_Flutter_ephemeral_flutter_lldb_helper.py["flutter_lldb_helper.py"]
     ios_Runner --> ios_Runner_AppDelegate.swift["AppDelegate.swift"]
     ios_Runner --> ios_Runner_GeneratedPluginRegistrant.h["GeneratedPluginRegistrant.h"]
     ios_Runner --> ios_Runner_GeneratedPluginRegistrant.m["GeneratedPluginRegistrant.m"]
@@ -364,21 +448,25 @@ graph TD
     lib --> lib_features["features"]
     lib --> lib_services["services"]
     lib --> lib_shared["shared"]
-    lib --> lib_test["test"]
-    lib --> lib_theme["theme"]
     lib --> lib_widgets["widgets"]
     lib_config --> lib_config_env.dart["env.dart"]
     lib_config --> lib_config_routes.dart["routes.dart"]
     lib_config --> lib_config_supabase_config.dart["supabase_config.dart"]
-    lib_config --> lib_config_theme.dart["theme.dart"]
     lib_core --> lib_core_supabase_config.dart["supabase_config.dart"]
     lib_core --> lib_core_supabase_init.dart["supabase_init.dart"]
+    lib_core --> lib_core_routes["routes"]
     lib_core --> lib_core_services["services"]
     lib_core --> lib_core_theme["theme"]
+    lib_core --> lib_core_widgets["widgets"]
+    lib_core_routes --> lib_core_routes_app_router.dart["app_router.dart"]
     lib_core_services --> lib_core_services_animations_service.dart["animations_service.dart"]
     lib_core_services --> lib_core_services_logging_service.dart["logging_service.dart"]
     lib_core_theme --> lib_core_theme_app_constants.dart["app_constants.dart"]
     lib_core_theme --> lib_core_theme_app_theme.dart["app_theme.dart"]
+    lib_core_theme --> lib_core_theme_aya_icons.dart["aya_icons.dart"]
+    lib_core_theme --> lib_core_theme_glassmorphism.dart["glassmorphism.dart"]
+    lib_core_widgets --> lib_core_widgets_aya_app_bar.dart["aya_app_bar.dart"]
+    lib_core_widgets --> lib_core_widgets_aya_bottom_sheet.dart["aya_bottom_sheet.dart"]
     lib_features --> lib_features_admin["admin"]
     lib_features --> lib_features_auth["auth"]
     lib_features --> lib_features_content["content"]
@@ -387,6 +475,7 @@ graph TD
     lib_features --> lib_features_home["home"]
     lib_features --> lib_features_landing["landing"]
     lib_features --> lib_features_legal["legal"]
+    lib_features --> lib_features_lessons["lessons"]
     lib_features --> lib_features_notes["notes"]
     lib_features --> lib_features_playlists["playlists"]
     lib_features --> lib_features_subscription["subscription"]
@@ -451,8 +540,13 @@ graph TD
     lib_features_dashboard --> lib_features_dashboard_services["services"]
     lib_features_dashboard --> lib_features_dashboard_widgets["widgets"]
     lib_features_dashboard_models --> lib_features_dashboard_models_dashboard_models.dart["dashboard_models.dart"]
+    lib_features_dashboard_models --> lib_features_dashboard_models_mock_models.dart["mock_models.dart"]
     lib_features_dashboard_screens --> lib_features_dashboard_screens_dashboard_screen.dart["dashboard_screen.dart"]
     lib_features_dashboard_services --> lib_features_dashboard_services_dashboard_service.dart["dashboard_service.dart"]
+    lib_features_dashboard_widgets --> lib_features_dashboard_widgets_aya_app_bar.dart["aya_app_bar.dart"]
+    lib_features_dashboard_widgets --> lib_features_dashboard_widgets_aya_bottom_nav.dart["aya_bottom_nav.dart"]
+    lib_features_dashboard_widgets --> lib_features_dashboard_widgets_aya_cards.dart["aya_cards.dart"]
+    lib_features_dashboard_widgets --> lib_features_dashboard_widgets_aya_drawer.dart["aya_drawer.dart"]
     lib_features_dashboard_widgets --> lib_features_dashboard_widgets_dashboard_widgets.dart["dashboard_widgets.dart"]
     lib_features_favorites --> lib_features_favorites_user_favorites_screen.dart["user_favorites_screen.dart"]
     lib_features_home --> lib_features_home_home_page.dart["home_page.dart"]
@@ -461,6 +555,16 @@ graph TD
     lib_features_legal --> lib_features_legal_legal_page.dart["legal_page.dart"]
     lib_features_legal --> lib_features_legal_privacy_page.dart["privacy_page.dart"]
     lib_features_legal --> lib_features_legal_terms_page.dart["terms_page.dart"]
+    lib_features_lessons --> lib_features_lessons_models["models"]
+    lib_features_lessons --> lib_features_lessons_screens["screens"]
+    lib_features_lessons --> lib_features_lessons_widgets["widgets"]
+    lib_features_lessons_models --> lib_features_lessons_models_lesson.dart["lesson.dart"]
+    lib_features_lessons_screens --> lib_features_lessons_screens_lessons_list_screen.dart["lessons_list_screen.dart"]
+    lib_features_lessons_screens --> lib_features_lessons_screens_lesson_page.dart["lesson_page.dart"]
+    lib_features_lessons_widgets --> lib_features_lessons_widgets_aya_audio_player.dart["aya_audio_player.dart"]
+    lib_features_lessons_widgets --> lib_features_lessons_widgets_aya_pdf_viewer.dart["aya_pdf_viewer.dart"]
+    lib_features_lessons_widgets --> lib_features_lessons_widgets_aya_rich_text_viewer.dart["aya_rich_text_viewer.dart"]
+    lib_features_lessons_widgets --> lib_features_lessons_widgets_aya_video_player.dart["aya_video_player.dart"]
     lib_features_notes --> lib_features_notes_user_notes_screen.dart["user_notes_screen.dart"]
     lib_features_playlists --> lib_features_playlists_user_playlists_screen.dart["user_playlists_screen.dart"]
     lib_features_subscription --> lib_features_subscription_payment_page.dart["payment_page.dart"]
@@ -485,7 +589,6 @@ graph TD
     lib_services --> lib_services_upload_service.dart["upload_service.dart"]
     lib_shared --> lib_shared_widgets["widgets"]
     lib_shared_widgets --> lib_shared_widgets_gradient_button.dart["gradient_button.dart"]
-    lib_theme --> lib_theme_aya_theme.dart["aya_theme.dart"]
     lib_widgets --> lib_widgets_aya_app_bar.dart["aya_app_bar.dart"]
     lib_widgets --> lib_widgets_aya_avatar.dart["aya_avatar.dart"]
     lib_widgets --> lib_widgets_aya_bottom_nav.dart["aya_bottom_nav.dart"]
@@ -493,8 +596,14 @@ graph TD
     lib_widgets --> lib_widgets_aya_button.dart["aya_button.dart"]
     lib_widgets --> lib_widgets_aya_card.dart["aya_card.dart"]
     lib_widgets --> lib_widgets_aya_dialog.dart["aya_dialog.dart"]
+    lib_widgets --> lib_widgets_aya_glass_card.dart["aya_glass_card.dart"]
+    lib_widgets --> lib_widgets_aya_glass_container.dart["aya_glass_container.dart"]
+    lib_widgets --> lib_widgets_aya_glass_dialog.dart["aya_glass_dialog.dart"]
+    lib_widgets --> lib_widgets_aya_glass_input.dart["aya_glass_input.dart"]
+    lib_widgets --> lib_widgets_aya_image.dart["aya_image.dart"]
     lib_widgets --> lib_widgets_aya_input.dart["aya_input.dart"]
     lib_widgets --> lib_widgets_aya_loading.dart["aya_loading.dart"]
+    lib_widgets --> lib_widgets_aya_premium_icon.dart["aya_premium_icon.dart"]
     lib_widgets --> lib_widgets_aya_snackbar.dart["aya_snackbar.dart"]
     supabase --> supabase_migrations["migrations"]
     supabase_migrations --> supabase_migrations_20240320000000_initial_schema.sql["20240320000000_initial_schema.sql"]
@@ -502,10 +611,6 @@ graph TD
     test --> test_run_test.bat["run_test.bat"]
     test --> test_run_test.sh["run_test.sh"]
     test --> test_widget_test.dart["widget_test.dart"]
-    test --> test_features["features"]
-    test --> test_integration["integration"]
-    test_features --> test_features_content["content"]
-    test_features_content --> test_features_content_services["services"]
     web --> web_favicon.png["favicon.png"]
     web --> web_index.html["index.html"]
     web --> web_manifest.json["manifest.json"]
diff --git a/lib/core/routes/app_router.dart b/lib/core/routes/app_router.dart
index ffce40b..6538446 100644
--- a/lib/core/routes/app_router.dart
+++ b/lib/core/routes/app_router.dart
@@ -3,6 +3,7 @@ import '../../features/dashboard/screens/dashboard_screen.dart';
 import '../../features/lessons/screens/lessons_list_screen.dart';
 import '../../features/lessons/screens/lesson_page.dart';
 import '../../features/lessons/models/lesson.dart';
+import '../../features/auth/services/auth_service.dart';
 
 class AppRouter {
   static const String dashboard = '/dashboard';
@@ -13,7 +14,9 @@ class AppRouter {
     switch (settings.name) {
       case dashboard:
         return MaterialPageRoute(
-          builder: (_) => const DashboardScreen(),
+          builder: (_) => DashboardScreen(
+            authService: AuthService(),
+          ),
         );
       case lessons:
         return MaterialPageRoute(
diff --git a/lib/core/theme/app_theme.dart b/lib/core/theme/app_theme.dart
index dbc4784..9308202 100644
--- a/lib/core/theme/app_theme.dart
+++ b/lib/core/theme/app_theme.dart
@@ -1,5 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:google_fonts/google_fonts.dart';
+import 'dart:ui';
 
 class AyaColors {
   // Base Colors
@@ -36,6 +37,19 @@ class AyaColors {
   static const Color overlayDark = Color(0x66000000); // 40% opacity
   static const Color overlayLight = Color(0x66FFFFFF); // 40% opacity
 
+  // New Colors with Opacity
+  static const Color surface70 = Color(0xB3474C72); // 70% opacity
+  static const Color surface50 = Color(0x80474C72); // 50% opacity
+  static const Color surface20 = Color(0x33474C72); // 20% opacity
+  static const Color lavenderVibrant30 = Color(0x4DACA1EF); // 30% opacity
+  static const Color turquoise30 = Color(0x4D78C7B4); // 30% opacity
+  static const Color black60 = Color(0x99000000); // 60% opacity
+  static const Color black70 = Color(0xB3000000); // 70% opacity
+  static const Color black50 = Color(0x80000000);
+  static const Color white30 = Color(0x4DFFFFFF); // 30% opacity
+  static const Color white85 = Color(0xD9FFFFFF); // 85% opacity
+  static const Color white40 = Color(0x66FFFFFF);
+
   // Gradients
   static const LinearGradient backgroundGradient = LinearGradient(
     colors: [background, backgroundGradientEnd],
@@ -48,6 +62,178 @@ class AyaColors {
     begin: Alignment.topLeft,
     end: Alignment.bottomRight,
   );
+
+  // Glassmorphism-specific colors
+  static const Color glassBackground = Color(0x1A474C72); // 10% opacity
+  static const Color glassBorder = Color(0x1AF8F8FF); // 10% opacity
+  static const Color glassHighlight = Color(0x1AFFFFFF); // 10% opacity
+  static const Color glassShadow = Color(0x40000000); // 25% opacity
+  static const Color glassInnerBorder = Color(0x0DFFFFFF); // 5% opacity
+}
+
+class AyaTypography {
+  // Scale factors for different screen sizes
+  static const double _mobileScale = 1.0;
+  static const double _tabletScale = 1.2;
+  static const double _desktopScale = 1.4;
+
+  // Line Heights
+  static const double _tightLineHeight = 1.2;
+  static const double _normalLineHeight = 1.5;
+  static const double _relaxedLineHeight = 1.75;
+
+  // Letter Spacing
+  static const double _tightLetterSpacing = -0.5;
+  static const double _normalLetterSpacing = 0.0;
+  static const double _wideLetterSpacing = 0.5;
+
+  // Font Weights
+  static const FontWeight _regular = FontWeight.w400;
+  static const FontWeight _medium = FontWeight.w500;
+  static const FontWeight _semibold = FontWeight.w600;
+  static const FontWeight _bold = FontWeight.w700;
+
+  static double _getScaledFontSize(double size, BuildContext context) {
+    final width = MediaQuery.of(context).size.width;
+    double scale = _mobileScale;
+
+    if (width >= 1200) {
+      scale = _desktopScale;
+    } else if (width >= 768) {
+      scale = _tabletScale;
+    }
+
+    return size * scale;
+  }
+
+  static TextTheme getTextTheme(BuildContext context) {
+    final baseTextTheme =
+        GoogleFonts.interTextTheme(ThemeData.dark().textTheme);
+
+    return baseTextTheme.copyWith(
+      // Display styles (largest text, used for hero sections)
+      displayLarge: TextStyle(
+        fontSize: _getScaledFontSize(48, context),
+        fontWeight: _bold,
+        height: _tightLineHeight,
+        letterSpacing: _tightLetterSpacing,
+        color: AyaColors.textPrimary,
+        shadows: [
+          Shadow(
+            color: AyaColors.black60,
+            blurRadius: 4,
+            offset: const Offset(0, 2),
+          ),
+        ],
+      ),
+      displayMedium: TextStyle(
+        fontSize: _getScaledFontSize(40, context),
+        fontWeight: _bold,
+        height: _tightLineHeight,
+        letterSpacing: _tightLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      displaySmall: TextStyle(
+        fontSize: _getScaledFontSize(36, context),
+        fontWeight: _semibold,
+        height: _tightLineHeight,
+        letterSpacing: _tightLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+
+      // Headline styles (used for section titles)
+      headlineLarge: TextStyle(
+        fontSize: _getScaledFontSize(32, context),
+        fontWeight: _semibold,
+        height: _tightLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      headlineMedium: TextStyle(
+        fontSize: _getScaledFontSize(28, context),
+        fontWeight: _semibold,
+        height: _tightLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      headlineSmall: TextStyle(
+        fontSize: _getScaledFontSize(24, context),
+        fontWeight: _semibold,
+        height: _tightLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+
+      // Title styles (used for card titles, list items)
+      titleLarge: TextStyle(
+        fontSize: _getScaledFontSize(20, context),
+        fontWeight: _semibold,
+        height: _normalLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      titleMedium: TextStyle(
+        fontSize: _getScaledFontSize(18, context),
+        fontWeight: _medium,
+        height: _normalLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      titleSmall: TextStyle(
+        fontSize: _getScaledFontSize(16, context),
+        fontWeight: _medium,
+        height: _normalLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+
+      // Body styles (used for main content)
+      bodyLarge: TextStyle(
+        fontSize: _getScaledFontSize(16, context),
+        fontWeight: _regular,
+        height: _relaxedLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      bodyMedium: TextStyle(
+        fontSize: _getScaledFontSize(14, context),
+        fontWeight: _regular,
+        height: _relaxedLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary80,
+      ),
+      bodySmall: TextStyle(
+        fontSize: _getScaledFontSize(12, context),
+        fontWeight: _regular,
+        height: _relaxedLineHeight,
+        letterSpacing: _normalLetterSpacing,
+        color: AyaColors.textPrimary60,
+      ),
+
+      // Label styles (used for buttons, form fields)
+      labelLarge: TextStyle(
+        fontSize: _getScaledFontSize(16, context),
+        fontWeight: _medium,
+        height: _normalLineHeight,
+        letterSpacing: _wideLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      labelMedium: TextStyle(
+        fontSize: _getScaledFontSize(14, context),
+        fontWeight: _medium,
+        height: _normalLineHeight,
+        letterSpacing: _wideLetterSpacing,
+        color: AyaColors.textPrimary,
+      ),
+      labelSmall: TextStyle(
+        fontSize: _getScaledFontSize(12, context),
+        fontWeight: _medium,
+        height: _normalLineHeight,
+        letterSpacing: _wideLetterSpacing,
+        color: AyaColors.textPrimary60,
+      ),
+    );
+  }
 }
 
 class AyaTheme {
@@ -65,87 +251,56 @@ class AyaTheme {
         onError: AyaColors.textPrimary,
       ),
 
-      // Scaffold
+      // Enhanced Scaffold
       scaffoldBackgroundColor: AyaColors.background,
 
-      // Typography
-      textTheme: TextTheme(
-        displayLarge: GoogleFonts.playfairDisplay(
-          color: AyaColors.textPrimary,
-          fontSize: 32,
-          fontWeight: FontWeight.bold,
-        ),
-        displayMedium: GoogleFonts.playfairDisplay(
-          color: AyaColors.textPrimary,
-          fontSize: 28,
-          fontWeight: FontWeight.bold,
-        ),
-        headlineLarge: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 24,
-          fontWeight: FontWeight.bold,
-        ),
-        headlineMedium: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 20,
-          fontWeight: FontWeight.w600,
-        ),
-        titleLarge: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 18,
-          fontWeight: FontWeight.w500,
-        ),
-        bodyLarge: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 16,
-          fontWeight: FontWeight.normal,
-        ),
-        bodyMedium: GoogleFonts.roboto(
-          color: AyaColors.textPrimary80,
-          fontSize: 14,
-          fontWeight: FontWeight.normal,
-        ),
-        labelLarge: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 14,
-          fontWeight: FontWeight.w500,
-        ),
-        labelMedium: GoogleFonts.roboto(
-          color: AyaColors.textPrimary60,
-          fontSize: 12,
-          fontWeight: FontWeight.normal,
-        ),
-      ),
+      // Enhanced Typography
+      textTheme: GoogleFonts.interTextTheme(ThemeData.dark().textTheme),
 
-      // AppBar Theme
+      // Enhanced AppBar Theme
       appBarTheme: AppBarTheme(
         backgroundColor: Colors.transparent,
         elevation: 0,
         centerTitle: true,
-        titleTextStyle: GoogleFonts.roboto(
+        titleTextStyle: GoogleFonts.inter(
           color: AyaColors.textPrimary,
           fontSize: 20,
           fontWeight: FontWeight.w600,
+          letterSpacing: 0.15,
+          shadows: [
+            Shadow(
+              color: AyaColors.black60,
+              blurRadius: 4,
+              offset: const Offset(0, 2),
+            ),
+          ],
         ),
         iconTheme: IconThemeData(
           color: AyaColors.textPrimary,
+          shadows: [
+            Shadow(
+              color: AyaColors.black60,
+              blurRadius: 4,
+              offset: const Offset(0, 2),
+            ),
+          ],
         ),
       ),
 
-      // Card Theme
-      cardTheme: CardTheme(
-        color: AyaColors.lavenderSoft,
-        elevation: 2,
-        shape: RoundedRectangleBorder(
-          borderRadius: BorderRadius.circular(16),
-        ),
-        margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
-      ),
+      // Enhanced Card Theme
+      cardTheme: ThemeData.dark().cardTheme.copyWith(
+            color: AyaColors.glassBackground,
+            elevation: 0,
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(16),
+            ),
+            margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+          ),
 
-      // Button Theme
+      // Enhanced Button Theme
       elevatedButtonTheme: ElevatedButtonThemeData(
         style: ElevatedButton.styleFrom(
-          backgroundColor: AyaColors.turquoise,
+          backgroundColor: AyaColors.turquoise.withOpacity(0.9),
           foregroundColor: AyaColors.textPrimary,
           elevation: 0,
           padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
@@ -155,21 +310,28 @@ class AyaTheme {
           textStyle: GoogleFonts.roboto(
             fontSize: 16,
             fontWeight: FontWeight.w500,
+            shadows: [
+              Shadow(
+                color: AyaColors.black60,
+                blurRadius: 4,
+                offset: const Offset(0, 2),
+              ),
+            ],
           ),
         ),
       ),
 
-      // Input Decoration Theme
+      // Enhanced Input Decoration Theme
       inputDecorationTheme: InputDecorationTheme(
         filled: true,
-        fillColor: AyaColors.backgroundGradientEnd,
+        fillColor: AyaColors.glassBackground,
         border: OutlineInputBorder(
           borderRadius: BorderRadius.circular(12),
-          borderSide: BorderSide(color: AyaColors.lavenderSoft),
+          borderSide: BorderSide(color: AyaColors.glassBorder),
         ),
         enabledBorder: OutlineInputBorder(
           borderRadius: BorderRadius.circular(12),
-          borderSide: BorderSide(color: AyaColors.lavenderSoft),
+          borderSide: BorderSide(color: AyaColors.glassBorder),
         ),
         focusedBorder: OutlineInputBorder(
           borderRadius: BorderRadius.circular(12),
@@ -187,38 +349,65 @@ class AyaTheme {
         ),
       ),
 
-      // Bottom Navigation Bar Theme
+      // Enhanced Bottom Navigation Bar Theme
       bottomNavigationBarTheme: BottomNavigationBarThemeData(
-        backgroundColor: AyaColors.background,
+        backgroundColor: AyaColors.glassBackground,
         selectedItemColor: AyaColors.turquoise,
         unselectedItemColor: AyaColors.textPrimary50,
         type: BottomNavigationBarType.fixed,
-        elevation: 8,
+        elevation: 0,
       ),
 
-      // Dialog Theme
-      dialogTheme: DialogTheme(
-        backgroundColor: AyaColors.backgroundGradientEnd,
-        shape: RoundedRectangleBorder(
-          borderRadius: BorderRadius.circular(16),
-        ),
-        titleTextStyle: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 20,
-          fontWeight: FontWeight.w600,
-        ),
-        contentTextStyle: GoogleFonts.roboto(
-          color: AyaColors.textPrimary,
-          fontSize: 16,
-        ),
-      ),
+      // Enhanced Dialog Theme
+      dialogTheme: ThemeData.dark().dialogTheme.copyWith(
+            backgroundColor: AyaColors.glassBackground,
+            elevation: 0,
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(16),
+            ),
+            titleTextStyle: GoogleFonts.inter(
+              color: AyaColors.textPrimary,
+              fontSize: 20,
+              fontWeight: FontWeight.w600,
+              shadows: [
+                Shadow(
+                  color: AyaColors.black60,
+                  blurRadius: 4,
+                  offset: const Offset(0, 2),
+                ),
+              ],
+            ),
+            contentTextStyle: GoogleFonts.inter(
+              color: AyaColors.textPrimary,
+              fontSize: 16,
+              shadows: [
+                Shadow(
+                  color: AyaColors.black60,
+                  blurRadius: 4,
+                  offset: const Offset(0, 2),
+                ),
+              ],
+            ),
+          ),
 
-      // Divider Theme
+      // Enhanced Divider Theme
       dividerTheme: DividerThemeData(
-        color: AyaColors.lavenderSoft30,
+        color: AyaColors.glassBorder,
         thickness: 1,
         space: 24,
       ),
+
+      // Enhanced Icon Theme
+      iconTheme: IconThemeData(
+        color: AyaColors.textPrimary,
+        shadows: [
+          Shadow(
+            color: AyaColors.black60,
+            blurRadius: 4,
+            offset: const Offset(0, 2),
+          ),
+        ],
+      ),
     );
   }
 }
diff --git a/lib/core/theme/glassmorphism.dart b/lib/core/theme/glassmorphism.dart
new file mode 100644
index 0000000..dd62ca5
--- /dev/null
+++ b/lib/core/theme/glassmorphism.dart
@@ -0,0 +1,217 @@
+import 'dart:ui';
+import 'package:flutter/material.dart';
+import 'package:app_aya_v2/core/theme/app_theme.dart';
+import 'package:app_aya_v2/core/theme/app_constants.dart';
+
+/// A simplified Glassmorphism widget that will be refined later.
+/// Currently provides a basic frosted glass effect using the Aya theme colors.
+class Glassmorphism extends StatelessWidget {
+  final Widget child;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry? padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+  final Color? borderColor;
+
+  const Glassmorphism({
+    super.key,
+    required this.child,
+    this.borderRadius = 16,
+    this.blurRadius = 10,
+    this.padding,
+    this.margin = EdgeInsets.zero,
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.animate = false,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+    this.borderColor,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final container = ClipRRect(
+      borderRadius: BorderRadius.circular(borderRadius),
+      child: BackdropFilter(
+        filter: ImageFilter.blur(sigmaX: blurRadius, sigmaY: blurRadius),
+        child: Container(
+          margin: margin,
+          decoration: BoxDecoration(
+            color: backgroundColor ?? AyaColors.glassBackground,
+            borderRadius: BorderRadius.circular(borderRadius),
+            border: Border.all(
+              color: borderColor ?? AyaColors.glassBorder,
+            ),
+            boxShadow: [
+              BoxShadow(
+                color: AyaColors.glassShadow,
+                blurRadius: 10,
+                offset: const Offset(0, 4),
+              ),
+            ],
+          ),
+          child: Stack(
+            children: [
+              if (showTopHighlight)
+                Positioned(
+                  top: 0,
+                  left: 0,
+                  right: 0,
+                  child: Container(
+                    height: 1,
+                    decoration: BoxDecoration(
+                      gradient: LinearGradient(
+                        colors: [
+                          AyaColors.glassHighlight.withOpacity(0.5),
+                          AyaColors.glassHighlight.withOpacity(0.0),
+                        ],
+                      ),
+                    ),
+                  ),
+                ),
+              if (showInnerBorder)
+                Positioned.fill(
+                  child: Container(
+                    decoration: BoxDecoration(
+                      borderRadius: BorderRadius.circular(borderRadius),
+                      border: Border.all(
+                        color: AyaColors.glassInnerBorder,
+                      ),
+                    ),
+                  ),
+                ),
+              padding != null
+                  ? Padding(
+                      padding: padding!,
+                      child: child,
+                    )
+                  : child,
+            ],
+          ),
+        ),
+      ),
+    );
+
+    if (animate) {
+      return AnimatedContainer(
+        duration: animationDuration,
+        curve: animationCurve,
+        child: container,
+      );
+    }
+
+    return container;
+  }
+}
+
+class GlassmorphicButton extends StatelessWidget {
+  final Widget child;
+  final VoidCallback? onPressed;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+
+  const GlassmorphicButton({
+    super.key,
+    required this.child,
+    this.onPressed,
+    this.borderRadius = 16,
+    this.blurRadius = 10,
+    this.padding = const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
+    this.margin = EdgeInsets.zero,
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.animate = false,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Glassmorphism(
+      borderRadius: borderRadius,
+      blurRadius: blurRadius,
+      padding: padding,
+      margin: margin,
+      backgroundColor: backgroundColor,
+      showInnerBorder: showInnerBorder,
+      showTopHighlight: showTopHighlight,
+      animate: animate,
+      animationDuration: animationDuration,
+      animationCurve: animationCurve,
+      child: Material(
+        color: Colors.transparent,
+        child: InkWell(
+          onTap: onPressed,
+          borderRadius: BorderRadius.circular(borderRadius),
+          child: child,
+        ),
+      ),
+    );
+  }
+}
+
+class GlassmorphicCard extends StatelessWidget {
+  final Widget child;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+
+  const GlassmorphicCard({
+    super.key,
+    required this.child,
+    this.borderRadius = 16,
+    this.blurRadius = 10,
+    this.padding = const EdgeInsets.all(16),
+    this.margin = EdgeInsets.zero,
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.animate = false,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Glassmorphism(
+      borderRadius: borderRadius,
+      blurRadius: blurRadius,
+      padding: padding,
+      margin: margin,
+      backgroundColor: backgroundColor,
+      showInnerBorder: showInnerBorder,
+      showTopHighlight: showTopHighlight,
+      animate: animate,
+      animationDuration: animationDuration,
+      animationCurve: animationCurve,
+      child: child,
+    );
+  }
+}
+
+// TODO: Reimplement with proper glassmorphism effect using BackdropFilter
+// The current implementation is a simplified version that will be enhanced later
+// with proper blur effects and more sophisticated styling.
diff --git a/lib/core/widgets/aya_app_bar.dart b/lib/core/widgets/aya_app_bar.dart
new file mode 100644
index 0000000..b416ef5
--- /dev/null
+++ b/lib/core/widgets/aya_app_bar.dart
@@ -0,0 +1,47 @@
+import 'package:flutter/material.dart';
+import 'package:app_aya_v2/core/theme/app_theme.dart';
+
+class AyaAppBar extends StatelessWidget implements PreferredSizeWidget {
+  final String title;
+  final bool showBackButton;
+  final List<Widget> actions;
+  final Color? backgroundColor;
+  final double elevation;
+
+  const AyaAppBar({
+    super.key,
+    required this.title,
+    this.showBackButton = true,
+    this.actions = const [],
+    this.backgroundColor,
+    this.elevation = 0,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return AppBar(
+      backgroundColor: backgroundColor ?? AyaColors.surface,
+      elevation: elevation,
+      scrolledUnderElevation: elevation,
+      centerTitle: true,
+      leading: showBackButton
+          ? IconButton(
+              icon: const Icon(Icons.arrow_back, color: AyaColors.primary),
+              onPressed: () => Navigator.of(context).pop(),
+            )
+          : null,
+      title: Text(
+        title,
+        style: const TextStyle(
+          color: AyaColors.textPrimary,
+          fontWeight: FontWeight.bold,
+          fontSize: 18,
+        ),
+      ),
+      actions: actions,
+    );
+  }
+
+  @override
+  Size get preferredSize => const Size.fromHeight(kToolbarHeight);
+}
diff --git a/lib/core/widgets/aya_bottom_sheet.dart b/lib/core/widgets/aya_bottom_sheet.dart
new file mode 100644
index 0000000..a3ffcef
--- /dev/null
+++ b/lib/core/widgets/aya_bottom_sheet.dart
@@ -0,0 +1,94 @@
+import 'package:flutter/material.dart';
+import 'package:app_aya_v2/core/theme/app_theme.dart';
+
+class BottomSheetItem {
+  final IconData icon;
+  final String label;
+  final VoidCallback onTap;
+
+  const BottomSheetItem({
+    required this.icon,
+    required this.label,
+    required this.onTap,
+  });
+}
+
+class AyaBottomSheet extends StatelessWidget {
+  final String title;
+  final List<BottomSheetItem> items;
+  final Widget? child;
+
+  const AyaBottomSheet({
+    super.key,
+    required this.title,
+    this.items = const [],
+    this.child,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      decoration: BoxDecoration(
+        color: AyaColors.surface.withValues(alpha: 0.5),
+        borderRadius: const BorderRadius.vertical(top: Radius.circular(24)),
+      ),
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          const SizedBox(height: 8),
+          Container(
+            width: 40,
+            height: 4,
+            decoration: BoxDecoration(
+              color: AyaColors.textSecondary.withValues(alpha: 0.3),
+              borderRadius: BorderRadius.circular(2),
+            ),
+          ),
+          const SizedBox(height: 16),
+          Text(
+            title,
+            style: const TextStyle(
+              color: AyaColors.textPrimary,
+              fontSize: 18,
+              fontWeight: FontWeight.bold,
+            ),
+          ),
+          const SizedBox(height: 16),
+          if (child != null) ...[
+            child!,
+            const SizedBox(height: 16),
+          ],
+          if (items.isNotEmpty) ...[
+            ...items.map((item) => _buildItem(item)),
+            const SizedBox(height: 16),
+          ],
+        ],
+      ),
+    );
+  }
+
+  Widget _buildItem(BottomSheetItem item) {
+    return InkWell(
+      onTap: item.onTap,
+      child: Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
+        child: Row(
+          children: [
+            Icon(item.icon, color: AyaColors.primary, size: 24),
+            const SizedBox(width: 16),
+            Text(
+              item.label,
+              style: const TextStyle(
+                color: AyaColors.textPrimary,
+                fontSize: 16,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+// TODO: Criar este componente/página futuramente
+// import '../../features/content/widgets/bottom_sheet_custom.dart';
diff --git a/lib/features/admin/admin_dashboard_page.dart b/lib/features/admin/admin_dashboard_page.dart
index 3bff656..32afb7b 100644
--- a/lib/features/admin/admin_dashboard_page.dart
+++ b/lib/features/admin/admin_dashboard_page.dart
@@ -5,17 +5,78 @@ import 'package:app_aya_v2/config/routes.dart';
 import 'package:app_aya_v2/widgets/aya_bottom_nav.dart';
 import 'package:supabase_flutter/supabase_flutter.dart';
 import 'admin_menu.dart';
+import 'package:app_aya_v2/features/auth/services/auth_service.dart';
+import 'package:app_aya_v2/widgets/aya_glass_container.dart';
+import 'package:app_aya_v2/widgets/aya_glass_dialog.dart';
+import 'package:iconoir_flutter/iconoir_flutter.dart' as iconoir;
 
 import 'sections/admin_dashboard_overview.dart';
+// TODO: Criar este componente/página
+// import 'sections/admin_analytics_screen.dart';
+// TODO: Criar este componente/página
+// import 'sections/admin_settings_screen.dart';
 import 'sections/admin_users_section.dart';
 import 'sections/admin_content_section.dart';
-import 'sections/admin_moderation_section.dart';
-import 'sections/admin_gamification_section.dart';
-import 'sections/admin_logs_section.dart';
+// TODO: Criar este componente/página
+// import 'sections/admin_moderation_section.dart';
+// TODO: Criar este componente/página
+// import 'sections/admin_gamification_section.dart';
+// TODO: Criar este componente/página
+// import 'sections/admin_logs_section.dart';
 import 'sections/admin_settings_section.dart';
 
+class GlassmorphicAppBar extends StatelessWidget
+    implements PreferredSizeWidget {
+  final String title;
+  final List<Widget>? actions;
+  final Widget? leading;
+  final bool centerTitle;
+  final double elevation;
+
+  const GlassmorphicAppBar({
+    super.key,
+    required this.title,
+    this.actions,
+    this.leading,
+    this.centerTitle = true,
+    this.elevation = 0,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return AyaGlassContainer(
+      borderRadius: 0,
+      blurRadius: 15,
+      padding: EdgeInsets.zero,
+      child: AppBar(
+        title: Text(
+          title,
+          style: Theme.of(context).textTheme.titleLarge?.copyWith(
+            color: AyaColors.textPrimary,
+            shadows: [
+              Shadow(
+                color: AyaColors.black60,
+                blurRadius: 4,
+                offset: const Offset(0, 2),
+              ),
+            ],
+          ),
+        ),
+        backgroundColor: Colors.transparent,
+        centerTitle: centerTitle,
+        leading: leading,
+        actions: actions,
+        elevation: elevation,
+      ),
+    );
+  }
+
+  @override
+  Size get preferredSize => const Size.fromHeight(kToolbarHeight);
+}
+
 class AdminDashboardPage extends StatefulWidget {
-  const AdminDashboardPage({Key? key}) : super(key: key);
+  const AdminDashboardPage({super.key});
 
   @override
   State<AdminDashboardPage> createState() => _AdminDashboardPageState();
@@ -27,20 +88,20 @@ class _AdminDashboardPageState extends State<AdminDashboardPage> {
   int _selectedIndex = 0;
 
   final List<AyaBottomNavItem> _navItems = [
-    const AyaBottomNavItem(
+    AyaBottomNavItem(
       label: 'Dashboard',
-      icon: Icons.dashboard_outlined,
-      selectedIcon: Icons.dashboard,
+      iconoirIcon: const iconoir.Dashboard(),
+      selectedIconoirIcon: const iconoir.Dashboard(),
     ),
-    const AyaBottomNavItem(
+    AyaBottomNavItem(
       label: 'Users',
-      icon: Icons.people_outline,
-      selectedIcon: Icons.people,
+      iconoirIcon: const iconoir.Group(),
+      selectedIconoirIcon: const iconoir.Group(),
     ),
-    const AyaBottomNavItem(
+    AyaBottomNavItem(
       label: 'Settings',
-      icon: Icons.settings_outlined,
-      selectedIcon: Icons.settings,
+      iconoirIcon: const iconoir.Settings(),
+      selectedIconoirIcon: const iconoir.Settings(),
     ),
   ];
 
@@ -52,7 +113,6 @@ class _AdminDashboardPageState extends State<AdminDashboardPage> {
 
   Future<void> _loadData() async {
     try {
-      // Simular carregamento
       await Future.delayed(const Duration(seconds: 1));
       if (mounted) {
         setState(() {
@@ -68,6 +128,26 @@ class _AdminDashboardPageState extends State<AdminDashboardPage> {
     }
   }
 
+  Future<void> _handleSignOut() async {
+    try {
+      final navigator = Navigator.of(context);
+      await Supabase.instance.client.auth.signOut();
+      if (mounted) {
+        navigator.pushReplacementNamed('/login');
+      }
+    } catch (e) {
+      if (mounted) {
+        showDialog(
+          context: context,
+          builder: (context) => AyaGlassAlertDialog(
+            title: 'Erro',
+            message: e.toString(),
+          ),
+        );
+      }
+    }
+  }
+
   Widget _getSection(int index) {
     switch (index) {
       case 0:
@@ -76,12 +156,15 @@ class _AdminDashboardPageState extends State<AdminDashboardPage> {
         return const AdminUsersSection();
       case 2:
         return const AdminContentSection();
-      case 3:
-        return const AdminModerationSection();
-      case 4:
-        return const AdminGamificationSection();
-      case 5:
-        return const AdminLogsSection();
+      // TODO: Criar este componente/página
+      // case 3:
+      //   return const AdminModerationSection();
+      // TODO: Criar este componente/página
+      // case 4:
+      //   return const AdminGamificationSection();
+      // TODO: Criar este componente/página
+      // case 5:
+      //   return const AdminLogsSection();
       case 6:
         return const AdminSettingsSection();
       default:
@@ -92,59 +175,103 @@ class _AdminDashboardPageState extends State<AdminDashboardPage> {
   @override
   Widget build(BuildContext context) {
     if (_isLoading) {
-      return const Scaffold(
+      return Scaffold(
+        backgroundColor: AyaColors.background,
         body: Center(
-          child: CircularProgressIndicator(),
+          child: AyaGlassContainer(
+            borderRadius: 16,
+            blurRadius: 15,
+            padding: const EdgeInsets.all(24),
+            child: const CircularProgressIndicator(),
+          ),
         ),
       );
     }
+
     if (!_isAdmin) {
       return Scaffold(
-        appBar: AppBar(title: const Text('Admin')),
-        body: const Center(
-            child: Text('Acesso restrito apenas para administradores.')),
+        backgroundColor: AyaColors.background,
+        appBar: GlassmorphicAppBar(title: 'Admin'),
+        body: Center(
+          child: AyaGlassContainer(
+            borderRadius: 16,
+            blurRadius: 15,
+            padding: const EdgeInsets.all(24),
+            child: const Text(
+              'Acesso restrito apenas para administradores.',
+              style: TextStyle(
+                color: AyaColors.textPrimary,
+                fontSize: 16,
+              ),
+            ),
+          ),
+        ),
       );
     }
+
     return Scaffold(
-      appBar: AppBar(
-        title: const Text('Painel de Administração'),
-        backgroundColor: AyaColors.turquoise,
+      backgroundColor: AyaColors.background,
+      appBar: GlassmorphicAppBar(
+        title: 'Painel de Administração',
         actions: [
           IconButton(
             icon: const Icon(Icons.logout),
-            onPressed: () async {
-              await Supabase.instance.client.auth.signOut();
-              if (mounted) {
-                context.go(AppRouter.login);
-              }
+            onPressed: () {
+              showDialog(
+                context: context,
+                builder: (context) => AyaGlassConfirmDialog(
+                  title: 'Sair',
+                  message: 'Tem certeza que deseja sair?',
+                  onConfirm: _handleSignOut,
+                ),
+              );
             },
           ),
         ],
       ),
-      drawer: AdminMenu(
-        selectedIndex: _selectedIndex,
-        onItemSelected: (i) => setState(() => _selectedIndex = i),
+      drawer: AyaGlassContainer(
+        borderRadius: 0,
+        blurRadius: 15,
+        padding: EdgeInsets.zero,
+        child: AdminMenu(
+          selectedIndex: _selectedIndex,
+          onItemSelected: (i) => setState(() => _selectedIndex = i),
+        ),
       ),
-      bottomNavigationBar: AyaBottomNav(
-        currentIndex: _selectedIndex,
-        items: _navItems,
-        onTap: (index) => setState(() => _selectedIndex = index),
+      bottomNavigationBar: AyaGlassContainer(
+        borderRadius: 0,
+        blurRadius: 15,
+        padding: EdgeInsets.zero,
+        child: AyaBottomNav(
+          currentIndex: _selectedIndex,
+          items: _navItems,
+          onTap: (index) => setState(() => _selectedIndex = index),
+        ),
       ),
-      backgroundColor: AyaColors.background,
       body: Row(
         children: [
           if (MediaQuery.of(context).size.width > 900)
             SizedBox(
               width: 240,
-              child: AdminMenu(
-                selectedIndex: _selectedIndex,
-                onItemSelected: (i) => setState(() => _selectedIndex = i),
+              child: AyaGlassContainer(
+                borderRadius: 0,
+                blurRadius: 15,
+                padding: EdgeInsets.zero,
+                child: AdminMenu(
+                  selectedIndex: _selectedIndex,
+                  onItemSelected: (i) => setState(() => _selectedIndex = i),
+                ),
               ),
             ),
           Expanded(
             child: Padding(
               padding: const EdgeInsets.all(24),
-              child: _getSection(_selectedIndex),
+              child: AyaGlassContainer(
+                borderRadius: 16,
+                blurRadius: 15,
+                padding: const EdgeInsets.all(24),
+                child: _getSection(_selectedIndex),
+              ),
             ),
           ),
         ],
diff --git a/lib/features/admin/admin_menu.dart b/lib/features/admin/admin_menu.dart
index 00ec396..9e3ac53 100644
--- a/lib/features/admin/admin_menu.dart
+++ b/lib/features/admin/admin_menu.dart
@@ -1,41 +1,124 @@
 import 'package:flutter/material.dart';
+import 'package:app_aya_v2/core/theme/app_theme.dart';
+import 'package:app_aya_v2/core/theme/aya_icons.dart';
+import 'package:app_aya_v2/widgets/aya_glass_container.dart';
+import 'package:app_aya_v2/widgets/aya_premium_icon.dart';
 
 class AdminMenu extends StatelessWidget {
   final int selectedIndex;
-  final ValueChanged<int> onItemSelected;
-  const AdminMenu({super.key, required this.selectedIndex, required this.onItemSelected});
+  final Function(int) onItemSelected;
+
+  const AdminMenu({
+    super.key,
+    required this.selectedIndex,
+    required this.onItemSelected,
+  });
 
   @override
   Widget build(BuildContext context) {
-    final items = [
-      {'icon': Icons.dashboard, 'label': 'Dashboard'},
-      {'icon': Icons.people, 'label': 'Usuários'},
-      {'icon': Icons.menu_book, 'label': 'Conteúdo'},
-      {'icon': Icons.comment, 'label': 'Moderação'},
-      {'icon': Icons.emoji_events, 'label': 'Gamificação'},
-      {'icon': Icons.list_alt, 'label': 'Logs'},
-      {'icon': Icons.settings, 'label': 'Configurações'},
-    ];
     return Drawer(
+      backgroundColor: Colors.transparent,
+      elevation: 0,
       child: Column(
         children: [
-          const SizedBox(height: 48),
-          const Text('Painel Admin', style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20)),
-          const SizedBox(height: 24),
-          ...List.generate(items.length, (i) => ListTile(
-            leading: Icon(items[i]['icon'] as IconData),
-            title: Text(items[i]['label'] as String),
-            selected: i == selectedIndex,
-            onTap: () => onItemSelected(i),
-          )),
-          const Spacer(),
-          const Divider(),
-          Padding(
-            padding: const EdgeInsets.all(8.0),
-            child: Text('© 2024 App Aya', style: TextStyle(fontSize: 12, color: Colors.grey)),
+          AyaGlassContainer(
+            borderRadius: 0,
+            blurRadius: 15,
+            padding: const EdgeInsets.symmetric(vertical: 48, horizontal: 16),
+            child: Center(
+              child: Text(
+                'Aya Admin',
+                style: Theme.of(context).textTheme.headlineMedium?.copyWith(
+                  color: AyaColors.textPrimary,
+                  shadows: [
+                    Shadow(
+                      color: AyaColors.black60,
+                      blurRadius: 4,
+                      offset: const Offset(0, 2),
+                    ),
+                  ],
+                ),
+              ),
+            ),
+          ),
+          Expanded(
+            child: ListView(
+              padding: EdgeInsets.zero,
+              children: [
+                _buildMenuItem(
+                  context,
+                  icon: AyaIcons.homeOutlined,
+                  selectedIcon: AyaIcons.home,
+                  label: 'Dashboard',
+                  index: 0,
+                ),
+                _buildMenuItem(
+                  context,
+                  icon: AyaIcons.communityOutlined,
+                  selectedIcon: AyaIcons.community,
+                  label: 'Usuários',
+                  index: 1,
+                ),
+                _buildMenuItem(
+                  context,
+                  icon: AyaIcons.articleOutlined,
+                  selectedIcon: AyaIcons.article,
+                  label: 'Conteúdo',
+                  index: 2,
+                ),
+                const Divider(color: AyaColors.glassBorder),
+                _buildMenuItem(
+                  context,
+                  icon: AyaIcons.settings,
+                  selectedIcon: AyaIcons.settings,
+                  label: 'Configurações',
+                  index: 3,
+                ),
+              ],
+            ),
           ),
         ],
       ),
     );
   }
-} 
\ No newline at end of file
+
+  Widget _buildMenuItem(
+    BuildContext context, {
+    required IconData icon,
+    required IconData selectedIcon,
+    required String label,
+    required int index,
+  }) {
+    final isSelected = selectedIndex == index;
+
+    return AyaGlassContainer(
+      borderRadius: 12,
+      blurRadius: 10,
+      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),
+      backgroundColor: isSelected ? AyaColors.turquoise.withOpacity(0.1) : null,
+      showInnerBorder: isSelected,
+      showTopHighlight: isSelected,
+      child: ListTile(
+        leading: AyaPremiumIcon(
+          icon: isSelected ? selectedIcon : icon,
+          isActive: isSelected,
+          size: 22,
+          borderRadius: 8,
+          padding: const EdgeInsets.all(4),
+        ),
+        title: Text(
+          label,
+          style: TextStyle(
+            color: isSelected ? AyaColors.turquoise : AyaColors.textPrimary,
+            fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,
+          ),
+        ),
+        onTap: () => onItemSelected(index),
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(12),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/features/admin/screens/admin_analytics_screen.dart b/lib/features/admin/screens/admin_analytics_screen.dart
index 205373c..049d79a 100644
--- a/lib/features/admin/screens/admin_analytics_screen.dart
+++ b/lib/features/admin/screens/admin_analytics_screen.dart
@@ -196,10 +196,16 @@ class _AdminAnalyticsScreenState extends State<AdminAnalyticsScreen> {
                       belowBarData: BarAreaData(
                         show: true,
                         color: Color.fromRGBO(
-                          Theme.of(context).colorScheme.primary.red,
-                          Theme.of(context).colorScheme.primary.green,
-                          Theme.of(context).colorScheme.primary.blue,
-                          0.1,
+                          (Theme.of(context).colorScheme.primary.r * 255.0)
+                                  .round() &
+                              0xff,
+                          (Theme.of(context).colorScheme.primary.g * 255.0)
+                                  .round() &
+                              0xff,
+                          (Theme.of(context).colorScheme.primary.b * 255.0)
+                                  .round() &
+                              0xff,
+                          Theme.of(context).colorScheme.primary.a,
                         ),
                       ),
                     ),
diff --git a/lib/features/admin/screens/admin_settings_screen.dart b/lib/features/admin/screens/admin_settings_screen.dart
index 5015738..c122443 100644
--- a/lib/features/admin/screens/admin_settings_screen.dart
+++ b/lib/features/admin/screens/admin_settings_screen.dart
@@ -77,6 +77,29 @@ class _AdminSettingsScreenState extends State<AdminSettingsScreen> {
     }
   }
 
+  Future<void> _handleSave() async {
+    setState(() => _isLoading = true);
+    try {
+      await _saveSettings();
+      if (mounted) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          const SnackBar(content: Text('Configurações salvas com sucesso!')),
+        );
+        return;
+      }
+    } catch (e) {
+      if (mounted) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(content: Text('Erro ao salvar configurações: $e')),
+        );
+      }
+    } finally {
+      if (mounted) {
+        setState(() => _isLoading = false);
+      }
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     return Scaffold(
@@ -85,7 +108,7 @@ class _AdminSettingsScreenState extends State<AdminSettingsScreen> {
         actions: [
           IconButton(
             icon: const Icon(Icons.save),
-            onPressed: _saveSettings,
+            onPressed: _handleSave,
           ),
         ],
       ),
diff --git a/lib/features/admin/sections/admin_gamification_section.dart b/lib/features/admin/sections/admin_gamification_section.dart
index ef6137e..ddabab8 100644
--- a/lib/features/admin/sections/admin_gamification_section.dart
+++ b/lib/features/admin/sections/admin_gamification_section.dart
@@ -368,7 +368,7 @@ class _AdminGamificationSectionState extends State<AdminGamificationSection>
       builder: (context) => AlertDialog(
         title:
             Text('Confirmar Exclusão de ${isChallenge ? "Desafio" : "Badge"}'),
-        content: Text('Tem certeza que deseja excluir "${title}"?'),
+        content: Text('Tem certeza que deseja excluir "$title"?'),
         actions: [
           TextButton(
             onPressed: () => Navigator.of(context).pop(),
diff --git a/lib/features/admin/widgets/admin_widgets.dart b/lib/features/admin/widgets/admin_widgets.dart
index 58a0b88..884339f 100644
--- a/lib/features/admin/widgets/admin_widgets.dart
+++ b/lib/features/admin/widgets/admin_widgets.dart
@@ -1,5 +1,8 @@
 import 'package:flutter/material.dart';
 import '../models/admin_models.dart';
+import '../../../core/theme/app_theme.dart';
+import '../../../core/theme/aya_icons.dart';
+import '../../../widgets/aya_premium_icon.dart';
 
 class AdminStatsCard extends StatelessWidget {
   final AdminStats stats;
@@ -212,13 +215,15 @@ class AdminContentListTile extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return ListTile(
-      leading: Icon(
-        content.type == 'module'
-            ? Icons.folder
+      leading: AyaPremiumIcon(
+        icon: content.type == 'module'
+            ? AyaIcons.folder
             : content.type == 'folder'
-                ? Icons.folder_open
-                : Icons.article,
-        color: Theme.of(context).colorScheme.primary,
+                ? AyaIcons.folderOpen
+                : AyaIcons.article,
+        size: 22,
+        borderRadius: 8,
+        padding: const EdgeInsets.all(4),
       ),
       title: Text(content.title),
       subtitle: Text(
@@ -229,12 +234,20 @@ class AdminContentListTile extends StatelessWidget {
         children: [
           if (onEdit != null)
             IconButton(
-              icon: const Icon(Icons.edit),
+              icon: AyaPremiumIcon(
+                  icon: AyaIcons.edit,
+                  size: 20,
+                  borderRadius: 6,
+                  padding: EdgeInsets.all(2)),
               onPressed: onEdit,
             ),
           if (onDelete != null)
             IconButton(
-              icon: const Icon(Icons.delete),
+              icon: AyaPremiumIcon(
+                  icon: AyaIcons.delete,
+                  size: 20,
+                  borderRadius: 6,
+                  padding: EdgeInsets.all(2)),
               onPressed: onDelete,
             ),
         ],
diff --git a/lib/features/auth/auth_service.dart b/lib/features/auth/auth_service.dart
index a70ea97..a08b239 100644
--- a/lib/features/auth/auth_service.dart
+++ b/lib/features/auth/auth_service.dart
@@ -11,7 +11,7 @@ class AuthService extends ChangeNotifier {
   // ignore: unused_field
   final _googleSignIn = GoogleSignIn();
   User? _user;
-  bool _isLoading = false;
+  final bool _isLoading = false;
   String? _error;
 
   AuthService() {
diff --git a/lib/features/auth/register_page.dart b/lib/features/auth/register_page.dart
index dd4a219..db4b9ea 100644
--- a/lib/features/auth/register_page.dart
+++ b/lib/features/auth/register_page.dart
@@ -41,23 +41,22 @@ class _RegisterPageState extends State<RegisterPage> {
           email: _emailController.text.trim(),
           password: _passwordController.text.trim(),
         );
-        if (mounted) {
-          GoRouter.of(context).go(AppRouter.login);
-          ScaffoldMessenger.of(context).showSnackBar(
-            const SnackBar(
-                content: Text('Registro realizado com sucesso! Faça o login.')),
-          );
-        }
+        if (!mounted) return;
+        GoRouter.of(context).go(AppRouter.login);
+        ScaffoldMessenger.of(context).showSnackBar(
+          const SnackBar(
+              content: Text('Registro realizado com sucesso! Faça o login.')),
+        );
       } catch (e) {
+        if (!mounted) return;
         setState(() {
           _errorMessage = e.toString().replaceFirst('Exception: ', '');
         });
       } finally {
-        if (mounted) {
-          setState(() {
-            _isLoading = false;
-          });
-        }
+        if (!mounted) return;
+        setState(() {
+          _isLoading = false;
+        });
       }
     }
   }
@@ -108,7 +107,7 @@ class _RegisterPageState extends State<RegisterPage> {
                     const SizedBox(height: 32),
                     // Name field (Optional, can be added)
                     // TextField(
-                    //   style: const TextStyle(color: AppTheme.textPrimary),
+                    //   style: const TextStyle(color: AyaColors.textPrimary),
                     //   decoration: InputDecoration(
                     //     hintText: 'Seu nome',
                     //     hintStyle: TextStyle(color: AyaColors.textPrimary60),
diff --git a/lib/features/auth/screens/forgot_password_page.dart b/lib/features/auth/screens/forgot_password_page.dart
index 0c328e3..8042c97 100644
--- a/lib/features/auth/screens/forgot_password_page.dart
+++ b/lib/features/auth/screens/forgot_password_page.dart
@@ -10,7 +10,7 @@ class ForgotPasswordPage extends StatefulWidget {
 
 class _ForgotPasswordPageState extends State<ForgotPasswordPage> {
   final _emailController = TextEditingController();
-  bool _sent = false;
+  final bool _sent = false;
   bool _isLoading = false;
   String? _errorMessage;
   final AuthService _authService = AuthService();
@@ -45,9 +45,8 @@ class _ForgotPasswordPageState extends State<ForgotPasswordPage> {
         ),
       );
     } finally {
-      if (mounted) {
-        setState(() => _isLoading = false);
-      }
+      if (!mounted) return;
+      setState(() => _isLoading = false);
     }
   }
 
diff --git a/lib/features/auth/screens/login_screen.dart b/lib/features/auth/screens/login_screen.dart
index 1ed13f1..4958a4a 100644
--- a/lib/features/auth/screens/login_screen.dart
+++ b/lib/features/auth/screens/login_screen.dart
@@ -3,13 +3,22 @@ import 'package:flutter/foundation.dart'
     show kIsWeb, defaultTargetPlatform, TargetPlatform;
 import '../services/auth_service.dart';
 
-class LoginScreen extends StatelessWidget {
+class LoginScreen extends StatefulWidget {
   const LoginScreen({super.key});
 
   @override
-  Widget build(BuildContext context) {
-    final authService = AuthService();
+  State<LoginScreen> createState() => _LoginScreenState();
+}
+
+class _LoginScreenState extends State<LoginScreen> {
+  final _formKey = GlobalKey<FormState>();
+  final _emailController = TextEditingController();
+  final _passwordController = TextEditingController();
+  final _authService = AuthService();
+  bool _isLoading = false;
 
+  @override
+  Widget build(BuildContext context) {
     return Scaffold(
       body: Center(
         child: Column(
@@ -17,19 +26,7 @@ class LoginScreen extends StatelessWidget {
           children: [
             // Google Sign In Button
             ElevatedButton(
-              onPressed: () async {
-                try {
-                  final user = await authService.signInWithGoogle();
-                  if (user != null) {
-                    // Navigate to dashboard or home screen
-                    Navigator.pushReplacementNamed(context, '/dashboard');
-                  }
-                } catch (e) {
-                  ScaffoldMessenger.of(context).showSnackBar(
-                    SnackBar(content: Text('Erro no login: $e')),
-                  );
-                }
-              },
+              onPressed: _handleGoogleSignIn,
               child: const Text('Entrar com Google'),
             ),
             const SizedBox(height: 16),
@@ -40,7 +37,7 @@ class LoginScreen extends StatelessWidget {
               ElevatedButton(
                 onPressed: () async {
                   try {
-                    final user = await authService.signInWithApple();
+                    final user = await _authService.signInWithApple();
                     if (user != null) {
                       // Navigate to dashboard or home screen
                       Navigator.pushReplacementNamed(context, '/dashboard');
@@ -56,9 +53,9 @@ class LoginScreen extends StatelessWidget {
             const SizedBox(height: 16),
             // Show current user ID if logged in
             StreamBuilder(
-              stream: authService.authStateChanges,
+              stream: _authService.authStateChanges,
               builder: (context, snapshot) {
-                final user = authService.getCurrentUser();
+                final user = _authService.getCurrentUser();
                 if (user != null) {
                   return Text('Usuário logado: ${user.id}');
                 }
@@ -70,4 +67,51 @@ class LoginScreen extends StatelessWidget {
       ),
     );
   }
+
+  Future<void> _handleLogin() async {
+    if (_formKey.currentState?.validate() ?? false) {
+      setState(() => _isLoading = true);
+      try {
+        final navigator = Navigator.of(context);
+        await _authService.signInWithEmailAndPassword(
+          email: _emailController.text,
+          password: _passwordController.text,
+        );
+        if (mounted) {
+          navigator.pushReplacementNamed('/home');
+        }
+      } catch (e) {
+        if (mounted) {
+          ScaffoldMessenger.of(context).showSnackBar(
+            SnackBar(content: Text(e.toString())),
+          );
+        }
+      } finally {
+        if (mounted) {
+          setState(() => _isLoading = false);
+        }
+      }
+    }
+  }
+
+  Future<void> _handleGoogleSignIn() async {
+    setState(() => _isLoading = true);
+    try {
+      final navigator = Navigator.of(context);
+      await _authService.signInWithGoogle();
+      if (mounted) {
+        navigator.pushReplacementNamed('/dashboard');
+      }
+    } catch (e) {
+      if (mounted) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(content: Text(e.toString())),
+        );
+      }
+    } finally {
+      if (mounted) {
+        setState(() => _isLoading = false);
+      }
+    }
+  }
 }
diff --git a/lib/features/auth/screens/register_screen.dart b/lib/features/auth/screens/register_screen.dart
index ac8623a..02ed373 100644
--- a/lib/features/auth/screens/register_screen.dart
+++ b/lib/features/auth/screens/register_screen.dart
@@ -28,22 +28,19 @@ class _RegisterScreenState extends State<RegisterScreen> {
         password: _password,
         name: _name,
       );
-      if (mounted) {
-        Navigator.pushReplacementNamed(context, '/dashboard');
-      }
+      if (!mounted) return;
+      Navigator.pushReplacementNamed(context, '/dashboard');
     } catch (e) {
-      if (mounted) {
-        ScaffoldMessenger.of(context).showSnackBar(
-          SnackBar(
-            content: Text('Erro ao registrar: $e'),
-            backgroundColor: Colors.red,
-          ),
-        );
-      }
+      if (!mounted) return;
+      ScaffoldMessenger.of(context).showSnackBar(
+        SnackBar(
+          content: Text('Erro ao registrar: $e'),
+          backgroundColor: Colors.red,
+        ),
+      );
     } finally {
-      if (mounted) {
-        setState(() => _isLoading = false);
-      }
+      if (!mounted) return;
+      setState(() => _isLoading = false);
     }
   }
 
diff --git a/lib/features/auth/services/auth_service.dart b/lib/features/auth/services/auth_service.dart
index d25f684..da8e3ff 100644
--- a/lib/features/auth/services/auth_service.dart
+++ b/lib/features/auth/services/auth_service.dart
@@ -44,19 +44,17 @@ class AuthService {
   User? getCurrentUser() {
     _logger.debug('AuthService: getCurrentUser called');
     if (_mockIsAuthenticated) {
-      if (_mockUser == null) {
-        _mockUser = User(
-          id: 'default_mock_user_id',
-          appMetadata: {'provider': 'email'},
-          userMetadata: {
-            'username': 'mockUser',
-            'role': 'user',
-            'email': 'mock@example.com',
-          },
-          aud: 'authenticated',
-          createdAt: DateTime.now().toIso8601String(),
-        );
-      }
+      _mockUser ??= User(
+        id: 'default_mock_user_id',
+        appMetadata: {'provider': 'email'},
+        userMetadata: {
+          'username': 'mockUser',
+          'role': 'user',
+          'email': 'mock@example.com',
+        },
+        aud: 'authenticated',
+        createdAt: DateTime.now().toIso8601String(),
+      );
       return _mockUser;
     }
     return _auth.currentUser;
@@ -241,6 +239,7 @@ class AuthService {
           OAuthProvider.google,
           redirectTo: redirectUrl,
         );
+        return null; // OAuth flow will handle the redirect
       } else {
         // TODO: Reativar e utilizar para implementação OAuth
         // final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();
@@ -263,6 +262,7 @@ class AuthService {
         // );
 
         // return response.user;
+        return null; // Temporary return for mocked implementation
       }
     } on AuthException catch (e) {
       _logger.error('AuthService signInWithGoogle Error', e);
@@ -304,6 +304,7 @@ class AuthService {
           OAuthProvider.apple,
           redirectTo: redirectUrl,
         );
+        return null; // OAuth flow will handle the redirect
       } else {
         final credential = await SignInWithApple.getAppleIDCredential(
           scopes: [
diff --git a/lib/features/auth/simple_register_page.dart b/lib/features/auth/simple_register_page.dart
index 79a3899..6ba8bf6 100644
--- a/lib/features/auth/simple_register_page.dart
+++ b/lib/features/auth/simple_register_page.dart
@@ -52,19 +52,18 @@ class _SimpleRegisterPageState extends State<SimpleRegisterPage> {
             'name': _nameController.text.trim(),
           },
         );
-        if (mounted) {
-          context.go(AppRouter.dashboard);
-        }
+        if (!mounted) return;
+        context.go(AppRouter.dashboard);
       } catch (e) {
+        if (!mounted) return;
         setState(() {
           _errorMessage = e.toString().replaceFirst('Exception: ', '');
         });
       } finally {
-        if (mounted) {
-          setState(() {
-            _isLoading = false;
-          });
-        }
+        if (!mounted) return;
+        setState(() {
+          _isLoading = false;
+        });
       }
     }
   }
diff --git a/lib/features/content/pages/lesson_page.dart b/lib/features/content/pages/lesson_page.dart
index 4d536ed..f786511 100644
--- a/lib/features/content/pages/lesson_page.dart
+++ b/lib/features/content/pages/lesson_page.dart
@@ -1,6 +1,8 @@
 import 'package:flutter/material.dart';
 import 'package:app_aya_v2/core/theme/app_theme.dart';
 import 'package:app_aya_v2/features/content/services/lesson_service.dart';
+import 'package:app_aya_v2/core/widgets/aya_bottom_sheet.dart';
+import 'package:app_aya_v2/core/widgets/aya_app_bar.dart';
 
 class LessonPage extends StatefulWidget {
   final String lessonId;
@@ -71,112 +73,387 @@ class _LessonPageState extends State<LessonPage> {
         decoration: const BoxDecoration(
           gradient: AyaColors.backgroundGradient,
         ),
-        child: SafeArea(
-          child: Column(
-            children: [
-              _buildHeader(context),
-              Expanded(
-                child: SingleChildScrollView(
-                  padding: const EdgeInsets.all(16),
-                  child: Column(
-                    crossAxisAlignment: CrossAxisAlignment.start,
-                    children: [
-                      _buildLessonTitle(),
-                      const SizedBox(height: 16),
-                      _buildLessonContent(),
-                      const SizedBox(height: 24),
-                      _buildNavigationButtons(context),
-                    ],
-                  ),
+        child: CustomScrollView(
+          slivers: [
+            AyaAppBar(
+              title: 'Aula',
+              showBackButton: true,
+              actions: [
+                StreamBuilder<bool>(
+                  stream: _lessonService.favoriteStream,
+                  initialData: false,
+                  builder: (context, snapshot) {
+                    final isFavorite = snapshot.data ?? false;
+                    return IconButton(
+                      icon: Icon(
+                        isFavorite ? Icons.favorite : Icons.favorite_border,
+                        color: isFavorite
+                            ? AyaColors.primary
+                            : AyaColors.textPrimary,
+                      ),
+                      onPressed: () =>
+                          _lessonService.toggleFavorite(widget.lessonId),
+                    );
+                  },
                 ),
+                IconButton(
+                  icon:
+                      const Icon(Icons.more_vert, color: AyaColors.textPrimary),
+                  onPressed: () => _showMoreOptions(),
+                ),
+              ],
+            ),
+            SliverToBoxAdapter(
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  _buildMediaPlayer(),
+                  Padding(
+                    padding: const EdgeInsets.all(16),
+                    child: Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        _buildLessonTitle(),
+                        const SizedBox(height: 16),
+                        _buildLessonActions(),
+                        const SizedBox(height: 24),
+                        _buildLessonContent(),
+                        const SizedBox(height: 24),
+                        _buildDownloadableMaterials(),
+                        const SizedBox(height: 24),
+                        _buildCommentsSection(),
+                        const SizedBox(height: 32),
+                        _buildNavigationButtons(context),
+                      ],
+                    ),
+                  ),
+                ],
               ),
-            ],
-          ),
+            ),
+          ],
         ),
       ),
     );
   }
 
-  Widget _buildHeader(BuildContext context) {
-    return StreamBuilder<bool>(
-      stream: _lessonService.favoriteStream,
-      initialData: false,
+  Widget _buildMediaPlayer() {
+    return StreamBuilder<PlaybackState>(
+      stream: _lessonService.playbackStream,
+      initialData: PlaybackState(),
       builder: (context, snapshot) {
-        final isFavorite = snapshot.data ?? false;
-        return AppBar(
-          backgroundColor: Colors.transparent,
-          elevation: 0,
-          leading: IconButton(
-            icon: const Icon(Icons.arrow_back, color: AyaColors.primary),
-            onPressed: () => Navigator.of(context).pop(),
-          ),
-          title: const Text(
-            'Aula',
-            style: TextStyle(
-              color: AyaColors.textPrimary,
-              fontWeight: FontWeight.bold,
-              fontSize: 18,
+        final playbackState = snapshot.data!;
+        return Container(
+          height:
+              MediaQuery.of(context).size.width * 0.5625, // 16:9 aspect ratio
+          width: double.infinity,
+          decoration: BoxDecoration(
+            color: AyaColors.surface.withValues(alpha: 0.5),
+            borderRadius: const BorderRadius.only(
+              bottomLeft: Radius.circular(32),
+              bottomRight: Radius.circular(32),
             ),
           ),
-          centerTitle: true,
-          actions: [
-            IconButton(
-              icon: Icon(
-                isFavorite ? Icons.favorite : Icons.favorite_border,
-                color: isFavorite ? AyaColors.primary : AyaColors.textPrimary,
+          child: Stack(
+            fit: StackFit.expand,
+            children: [
+              // Thumbnail or video content
+              ClipRRect(
+                borderRadius: const BorderRadius.only(
+                  bottomLeft: Radius.circular(32),
+                  bottomRight: Radius.circular(32),
+                ),
+                child: Image.asset(
+                  'assets/images/lesson1.jpg',
+                  fit: BoxFit.cover,
+                ),
               ),
-              onPressed: () => _lessonService.toggleFavorite(widget.lessonId),
-            ),
-          ],
+              // Overlay gradient
+              Container(
+                decoration: BoxDecoration(
+                  gradient: LinearGradient(
+                    begin: Alignment.topCenter,
+                    end: Alignment.bottomCenter,
+                    colors: [
+                      Colors.transparent,
+                      AyaColors.black70,
+                    ],
+                  ),
+                ),
+              ),
+              // Playback controls
+              Center(
+                child: Column(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    IconButton(
+                      icon: Icon(
+                        playbackState.isPlaying
+                            ? Icons.pause
+                            : Icons.play_circle_fill,
+                        color: AyaColors.primary,
+                        size: 64,
+                      ),
+                      onPressed: () {
+                        if (playbackState.isPlaying) {
+                          _lessonService.pause(widget.lessonId);
+                        } else {
+                          _lessonService.play(widget.lessonId);
+                        }
+                      },
+                    ),
+                    const SizedBox(height: 16),
+                    // Progress bar
+                    Padding(
+                      padding: const EdgeInsets.symmetric(horizontal: 32),
+                      child: Column(
+                        children: [
+                          Slider(
+                            value: playbackState.currentPosition.inSeconds
+                                .toDouble(),
+                            min: 0,
+                            max: playbackState.duration.inSeconds.toDouble(),
+                            activeColor: AyaColors.primary,
+                            inactiveColor: AyaColors.white30,
+                            onChanged: (value) {
+                              _lessonService.seekTo(
+                                widget.lessonId,
+                                Duration(seconds: value.toInt()),
+                              );
+                            },
+                          ),
+                          Padding(
+                            padding: const EdgeInsets.symmetric(horizontal: 16),
+                            child: Row(
+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                              children: [
+                                Text(
+                                  _formatDuration(
+                                      playbackState.currentPosition),
+                                  style: const TextStyle(
+                                    color: Colors.white,
+                                    fontSize: 12,
+                                  ),
+                                ),
+                                Text(
+                                  _formatDuration(playbackState.duration),
+                                  style: const TextStyle(
+                                    color: Colors.white,
+                                    fontSize: 12,
+                                  ),
+                                ),
+                              ],
+                            ),
+                          ),
+                        ],
+                      ),
+                    ),
+                  ],
+                ),
+              ),
+            ],
+          ),
         );
       },
     );
   }
 
   Widget _buildLessonTitle() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Text(
+          widget.lessonTitle,
+          style: const TextStyle(
+            color: AyaColors.textPrimary,
+            fontWeight: FontWeight.bold,
+            fontSize: 24,
+          ),
+        ),
+        const SizedBox(height: 12),
+        Row(
+          children: [
+            const Icon(Icons.play_circle_outline,
+                color: AyaColors.primary, size: 18),
+            const SizedBox(width: 4),
+            const Text('Vídeo • 5 min',
+                style: TextStyle(color: AyaColors.textPrimary, fontSize: 14)),
+            const SizedBox(width: 12),
+            const Icon(Icons.auto_awesome, color: AyaColors.accent, size: 18),
+            const SizedBox(width: 2),
+            const Text('1 Ponto Aya',
+                style: TextStyle(
+                    color: AyaColors.accent,
+                    fontSize: 14,
+                    fontWeight: FontWeight.bold)),
+          ],
+        ),
+        const SizedBox(height: 16),
+        _ExpandableDescription(
+          text:
+              'Descubra como a gratidão pode transformar sua vida. Nesta aula, você aprenderá práticas simples e poderosas para cultivar gratidão diariamente. Aprofunde-se no tema e veja exemplos reais de transformação.',
+        ),
+      ],
+    );
+  }
+
+  Widget _buildLessonActions() {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+      children: [
+        _buildActionButton(Icons.favorite_border, 'Curtir'),
+        _buildActionButton(Icons.bookmark_border, 'Salvar'),
+        _buildActionButton(Icons.edit_note, 'Anotações'),
+        _buildActionButton(Icons.check_circle_outline, 'Concluir'),
+      ],
+    );
+  }
+
+  Widget _buildDownloadableMaterials() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        const Text(
+          'Materiais para Download',
+          style: TextStyle(
+            color: AyaColors.textPrimary,
+            fontSize: 18,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        const SizedBox(height: 16),
+        _buildMaterialItem(
+          icon: Icons.picture_as_pdf,
+          title: 'Slides da Aula',
+          onDownload: () => _downloadMaterial('slides'),
+        ),
+        _buildMaterialItem(
+          icon: Icons.description,
+          title: 'Exercícios',
+          onDownload: () => _downloadMaterial('exercises'),
+        ),
+      ],
+    );
+  }
+
+  Widget _buildMaterialItem({
+    required IconData icon,
+    required String title,
+    required VoidCallback onDownload,
+  }) {
     return Padding(
-      padding: const EdgeInsets.symmetric(horizontal: 24),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
+      padding: const EdgeInsets.only(bottom: 12),
+      child: Row(
         children: [
-          Text(
-            widget.lessonTitle,
-            style: const TextStyle(
-              color: AyaColors.textPrimary,
-              fontWeight: FontWeight.bold,
-              fontSize: 22,
+          Icon(icon, color: AyaColors.primary, size: 24),
+          const SizedBox(width: 12),
+          Expanded(
+            child: Text(
+              title,
+              style: const TextStyle(
+                color: AyaColors.textPrimary,
+                fontSize: 16,
+              ),
             ),
           ),
-          const SizedBox(height: 10),
-          Row(
-            children: [
-              const Icon(Icons.play_circle_outline,
-                  color: AyaColors.primary, size: 18),
-              const SizedBox(width: 4),
-              const Text('Vídeo • 5 min',
-                  style: TextStyle(color: AyaColors.textPrimary, fontSize: 14)),
-              const SizedBox(width: 12),
-              const Icon(Icons.auto_awesome,
-                  color: Color(0xFF78C7B4), size: 18),
-              const SizedBox(width: 2),
-              const Text('1 Ponto Aya',
-                  style: TextStyle(
-                      color: Color(0xFF78C7B4),
-                      fontSize: 14,
-                      fontWeight: FontWeight.bold)),
-            ],
+          IconButton(
+            icon: const Icon(Icons.download, color: AyaColors.primary),
+            onPressed: onDownload,
           ),
-          const SizedBox(height: 16),
-          _ExpandableDescription(
-            text:
-                'Descubra como a gratidão pode transformar sua vida. Nesta aula, você aprenderá práticas simples e poderosas para cultivar gratidão diariamente. Aprofunde-se no tema e veja exemplos reais de transformação. ' *
-                    2,
+        ],
+      ),
+    );
+  }
+
+  Widget _buildCommentsSection() {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        const Text(
+          'Comentários',
+          style: TextStyle(
+            color: AyaColors.textPrimary,
+            fontSize: 18,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        const SizedBox(height: 16),
+        Container(
+          padding: const EdgeInsets.all(16),
+          decoration: BoxDecoration(
+            color: AyaColors.surface.withValues(alpha: 0.5),
+            borderRadius: BorderRadius.circular(16),
+          ),
+          child: const Center(
+            child: Text(
+              'Comentários em desenvolvimento',
+              style: TextStyle(
+                color: AyaColors.textSecondary,
+                fontSize: 16,
+              ),
+            ),
+          ),
+        ),
+      ],
+    );
+  }
+
+  void _showMoreOptions() {
+    showModalBottomSheet(
+      context: context,
+      backgroundColor: Colors.transparent,
+      builder: (context) => AyaBottomSheet(
+        title: 'Opções',
+        items: [
+          BottomSheetItem(
+            icon: Icons.share,
+            label: 'Compartilhar',
+            onTap: () {
+              Navigator.pop(context);
+              _shareLesson();
+            },
+          ),
+          BottomSheetItem(
+            icon: Icons.download,
+            label: 'Baixar Aula',
+            onTap: () {
+              Navigator.pop(context);
+              _downloadLesson();
+            },
+          ),
+          BottomSheetItem(
+            icon: Icons.report,
+            label: 'Reportar Problema',
+            onTap: () {
+              Navigator.pop(context);
+              // TODO: Implement report functionality
+            },
           ),
         ],
       ),
     );
   }
 
+  Future<void> _downloadMaterial(String type) async {
+    try {
+      await _lessonService.downloadMaterial(widget.lessonId, type);
+      if (!mounted) return;
+      ScaffoldMessenger.of(context).showSnackBar(
+        const SnackBar(
+          content: Text('Material baixado com sucesso!'),
+          backgroundColor: Colors.green,
+        ),
+      );
+    } catch (e) {
+      if (!mounted) return;
+      ScaffoldMessenger.of(context).showSnackBar(
+        SnackBar(
+          content: Text('Erro ao baixar material: $e'),
+          backgroundColor: Colors.red,
+        ),
+      );
+    }
+  }
+
   Widget _buildLessonContent() {
     return Builder(
       builder: (context) {
@@ -195,7 +472,7 @@ class _LessonPageState extends State<LessonPage> {
                   margin:
                       const EdgeInsets.symmetric(horizontal: 0, vertical: 0),
                   decoration: BoxDecoration(
-                    color: const Color(0xFF474C72),
+                    color: AyaColors.black50,
                     borderRadius: const BorderRadius.only(
                       bottomLeft: Radius.circular(32),
                       bottomRight: Radius.circular(32),
@@ -211,7 +488,7 @@ class _LessonPageState extends State<LessonPage> {
                       Positioned.fill(
                         child: Container(
                           decoration: BoxDecoration(
-                            color: Colors.black.withAlpha(80),
+                            color: Colors.black.withValues(alpha: 0.5),
                             borderRadius: const BorderRadius.only(
                               bottomLeft: Radius.circular(32),
                               bottomRight: Radius.circular(32),
@@ -255,7 +532,7 @@ class _LessonPageState extends State<LessonPage> {
                                     max: playbackState.duration.inSeconds
                                         .toDouble(),
                                     activeColor: const Color(0xFFACA1EF),
-                                    inactiveColor: Colors.white.withAlpha(40),
+                                    inactiveColor: AyaColors.white40,
                                     onChanged: (value) {
                                       _lessonService.seekTo(
                                         widget.lessonId,
@@ -413,7 +690,7 @@ class _LessonPageState extends State<LessonPage> {
                     Container(
                       padding: const EdgeInsets.all(10),
                       decoration: BoxDecoration(
-                        color: AyaColors.primary.withAlpha(30),
+                        color: AyaColors.primary.withValues(alpha: 30),
                         borderRadius: BorderRadius.circular(12),
                       ),
                       child: SizedBox(
@@ -450,7 +727,7 @@ class _LessonPageState extends State<LessonPage> {
                     Container(
                       padding: const EdgeInsets.all(10),
                       decoration: BoxDecoration(
-                        color: Colors.green.withAlpha(30),
+                        color: Colors.green.withValues(alpha: 30),
                         borderRadius: BorderRadius.circular(12),
                       ),
                       child: IconButton(
@@ -472,7 +749,7 @@ class _LessonPageState extends State<LessonPage> {
                     Container(
                       padding: const EdgeInsets.all(10),
                       decoration: BoxDecoration(
-                        color: AyaColors.primary.withAlpha(30),
+                        color: AyaColors.primary.withValues(alpha: 30),
                         borderRadius: BorderRadius.circular(12),
                       ),
                       child: IconButton(
@@ -500,7 +777,7 @@ class _LessonPageState extends State<LessonPage> {
         Container(
           padding: const EdgeInsets.all(10),
           decoration: BoxDecoration(
-            color: AyaColors.primary.withAlpha(30),
+            color: AyaColors.primary.withValues(alpha: 30),
             borderRadius: BorderRadius.circular(12),
           ),
           child: IconButton(
diff --git a/lib/features/content/services/lesson_service.dart b/lib/features/content/services/lesson_service.dart
index 34263f6..a3ed22c 100644
--- a/lib/features/content/services/lesson_service.dart
+++ b/lib/features/content/services/lesson_service.dart
@@ -377,6 +377,15 @@ class LessonService {
       rethrow;
     }
   }
+
+  Future<void> downloadMaterial(String lessonId, String type) async {
+    try {
+      // TODO: Implement actual download logic
+      await Future.delayed(const Duration(seconds: 2)); // Simulated download
+    } catch (e) {
+      throw Exception('Failed to download material: $e');
+    }
+  }
 }
 
 class PlaybackState {
diff --git a/lib/features/dashboard/dashboard_screen.dart b/lib/features/dashboard/dashboard_screen.dart
index f188303..1dfaccb 100644
--- a/lib/features/dashboard/dashboard_screen.dart
+++ b/lib/features/dashboard/dashboard_screen.dart
@@ -76,35 +76,15 @@ class _DashboardScreenState extends State<DashboardScreen> {
               child: ListView(
                 padding: const EdgeInsets.all(16),
                 children: [
-                  WelcomeCard(
-                    userName: _data.userName,
-                    tipOfTheDay: _data.tipOfTheDay,
-                  ),
                   const SizedBox(height: 24),
                   ContinueJourneyCard(
-                    lastLesson: _data.lastLesson,
-                  ),
+                      // lastLesson: _data.lastLesson,
+                      ),
                   const SizedBox(height: 24),
                   RecommendedLessonsCard(
                     lessons: _data.recommendedLessons,
                   ),
                   const SizedBox(height: 24),
-                  ExploreModulesCard(
-                    modules: _data.exploreModules,
-                  ),
-                  const SizedBox(height: 24),
-                  if (_data.favoriteLessons.isNotEmpty) ...[
-                    FavoriteLessonsCard(
-                      lessons: _data.favoriteLessons,
-                    ),
-                    const SizedBox(height: 24),
-                  ],
-                  if (_data.activeChallenge != null) ...[
-                    ActiveChallengeCard(
-                      challenge: _data.activeChallenge!,
-                    ),
-                    const SizedBox(height: 24),
-                  ],
                   ConnectWithAyaCard(),
                 ],
               ),
diff --git a/lib/features/dashboard/models/dashboard_models.dart b/lib/features/dashboard/models/dashboard_models.dart
index dcde394..9f3f6a5 100644
--- a/lib/features/dashboard/models/dashboard_models.dart
+++ b/lib/features/dashboard/models/dashboard_models.dart
@@ -93,21 +93,19 @@ class DailyTip {
 }
 
 class DashboardData {
-  final String userName;
-  final String tipOfTheDay;
-  final Lesson? lastLesson;
+  final List<Lesson> continueLearning;
   final List<Lesson> recommendedLessons;
-  final List<Module> exploreModules;
-  final List<Lesson> favoriteLessons;
-  final Challenge? activeChallenge;
+  final List<Module> modules;
+  final List<Challenge> challenges;
+  final DailyTip dailyTip;
+  final UserProgress userProgress;
 
   const DashboardData({
-    required this.userName,
-    required this.tipOfTheDay,
-    this.lastLesson,
+    required this.continueLearning,
     required this.recommendedLessons,
-    required this.exploreModules,
-    required this.favoriteLessons,
-    this.activeChallenge,
+    required this.modules,
+    required this.challenges,
+    required this.dailyTip,
+    required this.userProgress,
   });
 }
diff --git a/lib/features/dashboard/models/mock_models.dart b/lib/features/dashboard/models/mock_models.dart
new file mode 100644
index 0000000..a4ba7de
--- /dev/null
+++ b/lib/features/dashboard/models/mock_models.dart
@@ -0,0 +1,160 @@
+class MockModule {
+  final String id;
+  final String title;
+  final String description;
+  final String thumbnailUrl;
+  final List<MockFolder>? folders;
+  final List<MockLesson>? lessons;
+
+  MockModule({
+    required this.id,
+    required this.title,
+    required this.description,
+    required this.thumbnailUrl,
+    this.folders,
+    this.lessons,
+  });
+}
+
+class MockFolder {
+  final String id;
+  final String title;
+  final String thumbnailUrl;
+  final List<MockLesson>? lessons;
+  final List<MockSubFolder>? subFolders;
+
+  MockFolder({
+    required this.id,
+    required this.title,
+    required this.thumbnailUrl,
+    this.lessons,
+    this.subFolders,
+  });
+}
+
+class MockSubFolder {
+  final String id;
+  final String title;
+  final String thumbnailUrl;
+  final List<MockLesson> lessons;
+
+  MockSubFolder({
+    required this.id,
+    required this.title,
+    required this.thumbnailUrl,
+    required this.lessons,
+  });
+}
+
+class MockLesson {
+  final String id;
+  final String title;
+  final String description;
+  final String thumbnailUrl;
+  final int durationMinutes;
+  final bool isPremium;
+
+  MockLesson({
+    required this.id,
+    required this.title,
+    required this.description,
+    required this.thumbnailUrl,
+    required this.durationMinutes,
+    this.isPremium = false,
+  });
+}
+
+// Mock data
+final List<MockModule> mockModules = [
+  MockModule(
+    id: '1',
+    title: 'Meditação para Iniciantes',
+    description:
+        'Aprenda técnicas básicas de meditação para começar sua jornada',
+    thumbnailUrl: 'https://picsum.photos/seed/meditation1/800/400',
+    folders: [
+      MockFolder(
+        id: '1-1',
+        title: 'Fundamentos da Meditação',
+        thumbnailUrl: 'https://picsum.photos/seed/meditation2/400/300',
+        lessons: [
+          MockLesson(
+            id: '1-1-1',
+            title: 'Introdução à Meditação',
+            description: 'Conheça os princípios básicos da meditação',
+            thumbnailUrl: 'https://picsum.photos/seed/meditation3/400/300',
+            durationMinutes: 15,
+          ),
+          MockLesson(
+            id: '1-1-2',
+            title: 'Técnicas de Respiração',
+            description: 'Aprenda a respirar corretamente durante a meditação',
+            thumbnailUrl: 'https://picsum.photos/seed/meditation4/400/300',
+            durationMinutes: 20,
+          ),
+        ],
+      ),
+      MockFolder(
+        id: '1-2',
+        title: 'Meditações Guiadas',
+        thumbnailUrl: 'https://picsum.photos/seed/meditation5/400/300',
+        lessons: [
+          MockLesson(
+            id: '1-2-1',
+            title: 'Meditação para Ansiedade',
+            description: 'Técnicas específicas para reduzir a ansiedade',
+            thumbnailUrl: 'https://picsum.photos/seed/meditation6/400/300',
+            durationMinutes: 25,
+            isPremium: true,
+          ),
+        ],
+      ),
+    ],
+  ),
+  MockModule(
+    id: '2',
+    title: 'Yoga para o Dia a Dia',
+    description: 'Pratique yoga em casa com aulas para todos os níveis',
+    thumbnailUrl: 'https://picsum.photos/seed/yoga1/800/400',
+    lessons: [
+      MockLesson(
+        id: '2-1',
+        title: 'Yoga Matinal',
+        description: 'Sequência de poses para começar o dia com energia',
+        thumbnailUrl: 'https://picsum.photos/seed/yoga2/400/300',
+        durationMinutes: 30,
+      ),
+      MockLesson(
+        id: '2-2',
+        title: 'Yoga para Relaxamento',
+        description: 'Poses suaves para relaxar no final do dia',
+        thumbnailUrl: 'https://picsum.photos/seed/yoga3/400/300',
+        durationMinutes: 45,
+        isPremium: true,
+      ),
+    ],
+  ),
+  MockModule(
+    id: '3',
+    title: 'Mindfulness no Trabalho',
+    description:
+        'Aprenda a praticar mindfulness durante sua jornada de trabalho',
+    thumbnailUrl: 'https://picsum.photos/seed/mindfulness1/800/400',
+    folders: [
+      MockFolder(
+        id: '3-1',
+        title: 'Exercícios Rápidos',
+        thumbnailUrl: 'https://picsum.photos/seed/mindfulness2/400/300',
+        lessons: [
+          MockLesson(
+            id: '3-1-1',
+            title: 'Respiração Consciente',
+            description: 'Técnica de 2 minutos para acalmar a mente',
+            thumbnailUrl: 'https://picsum.photos/seed/mindfulness3/400/300',
+            durationMinutes: 5,
+          ),
+        ],
+      ),
+    ],
+  ),
+];
diff --git a/lib/features/dashboard/screens/dashboard_screen.dart b/lib/features/dashboard/screens/dashboard_screen.dart
index 9bb5b05..61c815e 100644
--- a/lib/features/dashboard/screens/dashboard_screen.dart
+++ b/lib/features/dashboard/screens/dashboard_screen.dart
@@ -1,178 +1,606 @@
 import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:flutter/services.dart';
+import 'dart:ui';
 import '../../../core/theme/app_theme.dart';
 import '../../../features/auth/services/auth_service.dart';
-import '../widgets/dashboard_widgets.dart';
 import '../widgets/aya_app_bar.dart';
 import '../widgets/aya_bottom_nav.dart';
 import '../widgets/aya_drawer.dart';
-import '../widgets/aya_cards.dart';
-import '../../../core/routes/app_router.dart';
 import '../../lessons/screens/lessons_list_screen.dart';
+import '../../../core/theme/app_constants.dart';
+import 'package:shimmer/shimmer.dart';
+import '../../../widgets/aya_button.dart';
+import 'package:cached_network_image/cached_network_image.dart';
+import 'package:flutter/rendering.dart';
+import '../../../core/widgets/aya_bottom_sheet.dart';
+import '../../../features/dashboard/services/dashboard_service.dart';
+import 'package:go_router/go_router.dart';
+import '../../../widgets/aya_glass_container.dart';
+
+class GlassmorphicAppBar extends StatelessWidget
+    implements PreferredSizeWidget {
+  final String title;
+  final List<Widget>? actions;
+  final Widget? leading;
+  final bool centerTitle;
+  final double elevation;
+
+  const GlassmorphicAppBar({
+    super.key,
+    required this.title,
+    this.actions,
+    this.leading,
+    this.centerTitle = true,
+    this.elevation = 0,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return AyaGlassContainer(
+      borderRadius: 0,
+      blurRadius: 15,
+      padding: EdgeInsets.zero,
+      child: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: elevation,
+        title: Text(
+          title,
+          style: const TextStyle(
+            color: AyaColors.textPrimary,
+            fontSize: 24,
+            fontWeight: FontWeight.bold,
+            shadows: [
+              Shadow(
+                color: AyaColors.black60,
+                blurRadius: 4,
+                offset: Offset(0, 2),
+              ),
+            ],
+          ),
+        ),
+        centerTitle: centerTitle,
+        actions: actions,
+        leading: leading,
+      ),
+    );
+  }
+
+  @override
+  Size get preferredSize => const Size.fromHeight(kToolbarHeight);
+}
 
 class DashboardScreen extends StatefulWidget {
-  const DashboardScreen({super.key});
+  final AuthService authService;
+
+  const DashboardScreen({
+    super.key,
+    required this.authService,
+  });
 
   @override
   State<DashboardScreen> createState() => _DashboardScreenState();
 }
 
 class _DashboardScreenState extends State<DashboardScreen> {
-  final _authService = AuthService();
   int _selectedIndex = 0;
   final _scaffoldKey = GlobalKey<ScaffoldState>();
+  int _heroPage = 0;
+
+  final List<Map<String, String>> _heroSlides = [
+    {
+      'title': 'Bem-vindo(a) ao AYA',
+      'desc':
+          'Explore nosso conteúdo e comece sua jornada de autoconhecimento.',
+      'img':
+          'https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80',
+      'cta': 'Começar Agora',
+    },
+    {
+      'title': 'Medite com a gente',
+      'desc': 'Práticas guiadas para o seu equilíbrio diário.',
+      'img':
+          'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=800&q=80',
+      'cta': 'Meditar',
+    },
+    {
+      'title': 'Descubra Novos Conteúdos',
+      'desc': 'Aulas, artigos e trilhas para seu desenvolvimento.',
+      'img':
+          'https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?auto=format&fit=crop&w=800&q=80',
+      'cta': 'Explorar',
+    },
+  ];
+
+  void _onItemSelected(int index) {
+    setState(() {
+      _selectedIndex = index;
+    });
+  }
 
   @override
   Widget build(BuildContext context) {
     return Scaffold(
+      backgroundColor: AyaColors.background,
+      extendBody: true,
+      extendBodyBehindAppBar: true,
       key: _scaffoldKey,
-      appBar: AyaAppBar(
-        onMenuPressed: () => _scaffoldKey.currentState?.openDrawer(),
-        notificationCount: 3, // TODO: Get from notification service
-      ),
-      drawer: AyaDrawer(authService: _authService),
-      body: IndexedStack(
-        index: _selectedIndex,
-        children: [
-          _buildHomeTab(),
-          _buildLibraryTab(),
-          _buildCommunityTab(),
-          _buildChatTab(),
-          _buildProfileTab(),
+      appBar: GlassmorphicAppBar(
+        title: 'Aya',
+        leading: IconButton(
+          icon: const Icon(
+            Icons.menu,
+            color: AyaColors.textPrimary,
+          ),
+          onPressed: () => _scaffoldKey.currentState?.openDrawer(),
+        ),
+        actions: [
+          IconButton(
+            icon: const Icon(
+              Icons.notifications_outlined,
+              color: AyaColors.textPrimary,
+            ),
+            onPressed: () {
+              context.go('/notifications');
+            },
+          ),
         ],
       ),
-      bottomNavigationBar: AyaBottomNav(
+      drawer: AyaDrawer(
+        authService: widget.authService,
         selectedIndex: _selectedIndex,
-        onDestinationSelected: (index) {
-          setState(() => _selectedIndex = index);
-        },
+        onItemSelected: _onItemSelected,
       ),
-    );
-  }
-
-  Widget _buildHomeTab() {
-    return CustomScrollView(
-      slivers: [
-        const SliverAppBar(
-          title: Text('AYA'),
-          floating: true,
-          snap: true,
-          backgroundColor: AyaColors.surface,
-          foregroundColor: AyaColors.textPrimary,
-        ),
-        SliverPadding(
-          padding: const EdgeInsets.all(16),
-          sliver: SliverList(
-            delegate: SliverChildListDelegate([
-              _buildWelcomeCard(),
-              const SizedBox(height: 24),
-              _buildContinueLearningSection(),
-              const SizedBox(height: 24),
-              _buildRecommendedSection(),
-            ]),
+      body: Stack(
+        children: [
+          Padding(
+            padding: const EdgeInsets.all(4),
+            child: AyaGlassContainer(
+              borderRadius: 16,
+              blurRadius: 10,
+              padding: const EdgeInsets.all(16),
+              child: IndexedStack(
+                index: _selectedIndex,
+                children: const [
+                  HomeTabWidget(),
+                  LibraryTabWidget(),
+                  CommunityTabWidget(),
+                  ChatTabWidget(),
+                ],
+              ),
+            ),
           ),
-        ),
-      ],
+          Positioned(
+            left: 0,
+            right: 0,
+            bottom: 0,
+            child: AyaGlassContainer(
+              borderRadius: 0,
+              blurRadius: 15,
+              padding: EdgeInsets.zero,
+              child: BottomNavigationBar(
+                currentIndex: _selectedIndex,
+                onTap: (index) {
+                  setState(() {
+                    _selectedIndex = index;
+                  });
+                },
+                backgroundColor: Colors.transparent,
+                elevation: 0,
+                selectedItemColor: AyaColors.turquoise,
+                unselectedItemColor: AyaColors.textPrimary.withOpacity(0.5),
+                items: const [
+                  BottomNavigationBarItem(
+                    icon: Icon(Icons.home_outlined),
+                    activeIcon: Icon(Icons.home),
+                    label: 'Home',
+                  ),
+                  BottomNavigationBarItem(
+                    icon: Icon(Icons.library_books_outlined),
+                    activeIcon: Icon(Icons.library_books),
+                    label: 'Biblioteca',
+                  ),
+                  BottomNavigationBarItem(
+                    icon: Icon(Icons.people_outline),
+                    activeIcon: Icon(Icons.people),
+                    label: 'Comunidade',
+                  ),
+                  BottomNavigationBarItem(
+                    icon: Icon(Icons.smart_toy_outlined),
+                    activeIcon: Icon(Icons.smart_toy),
+                    label: 'Aya Chat',
+                  ),
+                ],
+              ),
+            ),
+          ),
+        ],
+      ),
     );
   }
 
-  Widget _buildLibraryTab() {
-    return Navigator(
-      onGenerateRoute: (settings) {
-        if (settings.name == '/') {
-          return MaterialPageRoute(
-            builder: (_) => const LessonsListScreen(),
-          );
-        }
-        return null;
-      },
-    );
+  List<Widget> _buildHomeTab() {
+    return [
+      SizedBox(
+        height: MediaQuery.of(context).padding.top + kToolbarHeight + 12,
+      ),
+      _buildHeroSection(),
+      const SizedBox(height: 24),
+      Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 16),
+        child: _buildContinueLearningSection(),
+      ),
+      const SizedBox(height: 24),
+      Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 16),
+        child: _buildRecommendedSection(),
+      ),
+      const SizedBox(height: 24),
+    ];
   }
 
-  Widget _buildCommunityTab() {
-    return const Center(child: Text('Comunidade'));
+  List<Widget> _buildLibraryTab() {
+    return [
+      Navigator(
+        onGenerateRoute: (settings) {
+          if (settings.name == '/') {
+            return MaterialPageRoute(
+              builder: (_) => const LessonsListScreen(),
+            );
+          }
+          return null;
+        },
+      ),
+    ];
   }
 
-  Widget _buildChatTab() {
-    return const Center(child: Text('Chat IA'));
+  List<Widget> _buildCommunityTab() {
+    return [
+      const Center(child: Text('Comunidade')),
+    ];
   }
 
-  Widget _buildProfileTab() {
-    return CustomScrollView(
-      slivers: [
-        const SliverAppBar(
-          title: Text('Meu Perfil'),
-          floating: true,
-          snap: true,
-          backgroundColor: AyaColors.surface,
-          foregroundColor: AyaColors.textPrimary,
-        ),
-        SliverPadding(
-          padding: const EdgeInsets.all(16),
-          sliver: SliverList(
-            delegate: SliverChildListDelegate([
-              _buildProfileCard(),
-              const SizedBox(height: 24),
-              _buildDownloadsSection(),
-              const SizedBox(height: 24),
-              _buildSettingsSection(),
-            ]),
-          ),
-        ),
-      ],
-    );
+  List<Widget> _buildChatTab() {
+    return [
+      const Center(child: Text('Aya Chat')),
+    ];
   }
 
-  Widget _buildWelcomeCard() {
-    return Container(
-      padding: const EdgeInsets.all(24),
-      decoration: BoxDecoration(
-        color: AyaColors.lavenderSoft,
-        borderRadius: BorderRadius.circular(16),
-      ),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          Text(
-            'Bem-vindo(a) ao AYA',
-            style: Theme.of(context).textTheme.headlineSmall?.copyWith(
-                  color: AyaColors.textPrimary,
-                  fontWeight: FontWeight.bold,
-                ),
-          ),
-          const SizedBox(height: 8),
-          Text(
-            'Explore nosso conteúdo e comece sua jornada de autoconhecimento.',
-            style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-                  color: AyaColors.textPrimary60,
+  Widget _buildHeroSection() {
+    final height = MediaQuery.of(context).size.height * 0.28;
+    return Column(
+      children: [
+        SizedBox(
+          height: height,
+          child: PageView.builder(
+            itemCount: _heroSlides.length,
+            onPageChanged: (i) => setState(() => _heroPage = i),
+            itemBuilder: (context, i) {
+              final slide = _heroSlides[i];
+              return Padding(
+                padding: const EdgeInsets.symmetric(horizontal: 16),
+                child: Stack(
+                  children: [
+                    // Background Image with Blur
+                    ClipRRect(
+                      borderRadius:
+                          BorderRadius.circular(AppConstants.radius32),
+                      child: ImageFiltered(
+                        imageFilter: ImageFilter.blur(sigmaX: 2, sigmaY: 2),
+                        child: CachedNetworkImage(
+                          imageUrl: slide['img']!,
+                          width: double.infinity,
+                          height: double.infinity,
+                          fit: BoxFit.cover,
+                          placeholder: (context, url) => Shimmer.fromColors(
+                            baseColor: Colors.grey[300]!,
+                            highlightColor: Colors.grey[100]!,
+                            child: Container(
+                              color: Colors.white,
+                            ),
+                          ),
+                          errorWidget: (context, url, error) => Container(
+                            color: Colors.grey[300],
+                            child: const Icon(Icons.error),
+                          ),
+                        ),
+                      ),
+                    ),
+                    // Glassy Overlay
+                    Container(
+                      decoration: BoxDecoration(
+                        borderRadius:
+                            BorderRadius.circular(AppConstants.radius32),
+                        gradient: LinearGradient(
+                          begin: Alignment.topCenter,
+                          end: Alignment.bottomCenter,
+                          colors: [
+                            Colors.black.withValues(alpha: 0.4),
+                            Colors.black.withValues(alpha: 0.8),
+                          ],
+                          stops: const [0.3, 1.0],
+                        ),
+                      ),
+                    ),
+                    // Content
+                    Padding(
+                      padding: const EdgeInsets.all(24),
+                      child: Column(
+                        mainAxisAlignment: MainAxisAlignment.end,
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: [
+                          Flexible(
+                            child: Text(
+                              slide['title']!,
+                              style: AyaTypography.getTextTheme(context)
+                                  .displaySmall
+                                  ?.copyWith(
+                                color: AyaColors.textPrimary,
+                                shadows: [
+                                  Shadow(
+                                    color: AyaColors.black60,
+                                    blurRadius: 4,
+                                    offset: Offset(0, 2),
+                                  ),
+                                ],
+                              ),
+                              maxLines: 2,
+                              overflow: TextOverflow.ellipsis,
+                            ),
+                          ),
+                          const SizedBox(height: 12),
+                          Flexible(
+                            child: Text(
+                              slide['desc']!,
+                              style: AyaTypography.getTextTheme(context)
+                                  .bodyLarge
+                                  ?.copyWith(
+                                color: AyaColors.white85,
+                                shadows: [
+                                  Shadow(
+                                    color: AyaColors.black60,
+                                    offset: const Offset(0, 1),
+                                    blurRadius: 2,
+                                  ),
+                                ],
+                              ),
+                              maxLines: 2,
+                              overflow: TextOverflow.ellipsis,
+                            ),
+                          ),
+                          const SizedBox(height: 24),
+                          // Modern Glassy Button
+                          Container(
+                            decoration: BoxDecoration(
+                              borderRadius: BorderRadius.circular(16),
+                              gradient: LinearGradient(
+                                begin: Alignment.topLeft,
+                                end: Alignment.bottomRight,
+                                colors: [
+                                  AyaColors.lavenderVibrant.withOpacity(0.8),
+                                  AyaColors.lavenderSoft.withOpacity(0.9),
+                                ],
+                              ),
+                              boxShadow: [
+                                BoxShadow(
+                                  color: AyaColors.lavenderVibrant
+                                      .withOpacity(0.3),
+                                  blurRadius: 8,
+                                  offset: const Offset(0, 4),
+                                ),
+                              ],
+                            ),
+                            child: Material(
+                              color: Colors.transparent,
+                              child: InkWell(
+                                onTap: () {},
+                                borderRadius: BorderRadius.circular(16),
+                                child: Container(
+                                  padding: const EdgeInsets.symmetric(
+                                    horizontal: 24,
+                                    vertical: 12,
+                                  ),
+                                  child: Row(
+                                    mainAxisSize: MainAxisSize.min,
+                                    children: [
+                                      Text(
+                                        slide['cta']!,
+                                        style:
+                                            AyaTypography.getTextTheme(context)
+                                                .labelLarge
+                                                ?.copyWith(
+                                                  color: AyaColors.textPrimary,
+                                                  fontWeight: FontWeight.w600,
+                                                ),
+                                      ),
+                                      const SizedBox(width: 8),
+                                      Icon(
+                                        Icons.arrow_forward,
+                                        color: AyaColors.textPrimary,
+                                        size: 20,
+                                      ),
+                                    ],
+                                  ),
+                                ),
+                              ),
+                            ),
+                          ),
+                        ],
+                      ),
+                    ),
+                  ],
                 ),
+              );
+            },
           ),
-        ],
-      ),
+        ),
+        const SizedBox(height: 16),
+        // Modern Page Indicators
+        Row(
+          mainAxisAlignment: MainAxisAlignment.center,
+          children: List.generate(_heroSlides.length, (i) {
+            final selected = i == _heroPage;
+            return AnimatedContainer(
+              duration: const Duration(milliseconds: 300),
+              margin: const EdgeInsets.symmetric(horizontal: 4),
+              width: selected ? 24 : 8,
+              height: 8,
+              decoration: BoxDecoration(
+                gradient: selected
+                    ? LinearGradient(
+                        begin: Alignment.topLeft,
+                        end: Alignment.bottomRight,
+                        colors: [
+                          AyaColors.lavenderVibrant,
+                          AyaColors.turquoise,
+                        ],
+                      )
+                    : null,
+                color: selected ? null : AyaColors.textPrimary40,
+                borderRadius: BorderRadius.circular(8),
+                boxShadow: selected
+                    ? [
+                        BoxShadow(
+                          color: AyaColors.lavenderVibrant.withOpacity(0.3),
+                          blurRadius: 8,
+                          offset: const Offset(0, 2),
+                        ),
+                      ]
+                    : null,
+              ),
+            );
+          }),
+        ),
+      ],
     );
   }
 
   Widget _buildContinueLearningSection() {
+    final List<Map<String, dynamic>> lessons = [
+      {
+        'title': 'Meditação Guiada',
+        'subtitle': 'Continue de onde parou',
+        'img': 'https://picsum.photos/seed/aya1/300/200',
+        'plan': 'premium',
+      },
+      {
+        'title': 'Respiração Consciente',
+        'subtitle': 'Aula 2 de 5',
+        'img': 'https://picsum.photos/seed/aya2/300/200',
+        'plan': 'free',
+      },
+      {
+        'title': 'Mindfulness para Ansiedade',
+        'subtitle': 'Aula 1 de 4',
+        'img': 'https://picsum.photos/seed/aya3/300/200',
+        'plan': 'premium',
+      },
+    ];
+
     return Column(
       crossAxisAlignment: CrossAxisAlignment.start,
       children: [
         Text(
           'Continue Aprendendo',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
+          style: AyaTypography.getTextTheme(context).headlineMedium?.copyWith(
                 color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
               ),
         ),
         const SizedBox(height: 16),
-        // TODO: Implementar lista de aulas em progresso
-        Container(
-          height: 200,
-          decoration: BoxDecoration(
-            color: AyaColors.lavenderSoft,
-            borderRadius: BorderRadius.circular(16),
-          ),
-          child: const Center(
-            child: Text('Nenhuma aula em progresso'),
+        SizedBox(
+          height: 180,
+          child: ListView.separated(
+            scrollDirection: Axis.horizontal,
+            itemCount: lessons.length,
+            separatorBuilder: (_, __) => const SizedBox(width: 16),
+            itemBuilder: (context, i) {
+              final lesson = lessons[i];
+              return Container(
+                width: 160,
+                decoration: BoxDecoration(
+                  borderRadius: BorderRadius.circular(24),
+                  boxShadow: [
+                    BoxShadow(
+                      color: AyaColors.overlayDark,
+                      blurRadius: 12,
+                      offset: const Offset(0, 6),
+                    ),
+                  ],
+                ),
+                child: Stack(
+                  children: [
+                    ClipRRect(
+                      borderRadius: BorderRadius.circular(24),
+                      child: CachedNetworkImage(
+                        imageUrl: lesson['img']!,
+                        width: double.infinity,
+                        height: double.infinity,
+                        fit: BoxFit.cover,
+                        placeholder: (context, url) => Shimmer.fromColors(
+                          baseColor: Colors.grey[300]!,
+                          highlightColor: Colors.grey[100]!,
+                          child: Container(
+                            color: Colors.white,
+                          ),
+                        ),
+                        errorWidget: (context, url, error) => Container(
+                          color: Colors.grey[300],
+                          child: const Icon(Icons.error),
+                        ),
+                      ),
+                    ),
+                    Container(
+                      decoration: BoxDecoration(
+                        borderRadius: BorderRadius.circular(24),
+                        gradient: LinearGradient(
+                          begin: Alignment.topCenter,
+                          end: Alignment.bottomCenter,
+                          colors: [
+                            Colors.black.withValues(alpha: 0.4),
+                            Colors.black.withValues(alpha: 0.8),
+                          ],
+                          stops: const [0.4, 1.0],
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(16),
+                      child: Column(
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: [
+                          Align(
+                            alignment: Alignment.topRight,
+                            child: _buildPlanTag(lesson['plan']!),
+                          ),
+                          const Spacer(),
+                          Text(
+                            lesson['title']!,
+                            style: AyaTypography.getTextTheme(context)
+                                .titleSmall
+                                ?.copyWith(
+                                  color: AyaColors.textPrimary,
+                                  fontWeight: FontWeight.w600,
+                                ),
+                            maxLines: 2,
+                            overflow: TextOverflow.ellipsis,
+                          ),
+                          const SizedBox(height: 4),
+                          Text(
+                            lesson['subtitle']!,
+                            style: AyaTypography.getTextTheme(context)
+                                .bodySmall
+                                ?.copyWith(
+                                  color: AyaColors.textPrimary80,
+                                ),
+                            maxLines: 1,
+                            overflow: TextOverflow.ellipsis,
+                          ),
+                        ],
+                      ),
+                    ),
+                  ],
+                ),
+              );
+            },
           ),
         ),
       ],
@@ -180,145 +608,259 @@ class _DashboardScreenState extends State<DashboardScreen> {
   }
 
   Widget _buildRecommendedSection() {
+    final List<Map<String, dynamic>> lessons = [
+      {
+        'title': 'Yoga para Iniciantes',
+        'subtitle': 'Aula 1 de 6',
+        'img': 'https://picsum.photos/seed/aya4/300/200',
+        'plan': 'free',
+      },
+      {
+        'title': 'Sono Profundo',
+        'subtitle': 'Meditação Noturna',
+        'img': 'https://picsum.photos/seed/aya5/300/200',
+        'plan': 'premium',
+      },
+      {
+        'title': 'Autocompaixão',
+        'subtitle': 'Aula 3 de 5',
+        'img': 'https://picsum.photos/seed/aya6/300/200',
+        'plan': 'premium',
+      },
+    ];
+
     return Column(
       crossAxisAlignment: CrossAxisAlignment.start,
       children: [
         Text(
           'Recomendados para Você',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
+          style: AyaTypography.getTextTheme(context).headlineMedium?.copyWith(
                 color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
               ),
         ),
         const SizedBox(height: 16),
-        // TODO: Implementar lista de aulas recomendadas
-        Container(
-          height: 200,
-          decoration: BoxDecoration(
-            color: AyaColors.lavenderSoft,
-            borderRadius: BorderRadius.circular(16),
-          ),
-          child: const Center(
-            child: Text('Nenhuma recomendação disponível'),
+        SizedBox(
+          height: 180,
+          child: ListView.separated(
+            scrollDirection: Axis.horizontal,
+            itemCount: lessons.length,
+            separatorBuilder: (_, __) => const SizedBox(width: 16),
+            itemBuilder: (context, i) {
+              final lesson = lessons[i];
+              return Container(
+                width: 160,
+                decoration: BoxDecoration(
+                  borderRadius: BorderRadius.circular(24),
+                  boxShadow: [
+                    BoxShadow(
+                      color: AyaColors.overlayDark,
+                      blurRadius: 12,
+                      offset: const Offset(0, 6),
+                    ),
+                  ],
+                ),
+                child: Stack(
+                  children: [
+                    ClipRRect(
+                      borderRadius: BorderRadius.circular(24),
+                      child: CachedNetworkImage(
+                        imageUrl: lesson['img']!,
+                        width: double.infinity,
+                        height: double.infinity,
+                        fit: BoxFit.cover,
+                        placeholder: (context, url) => Shimmer.fromColors(
+                          baseColor: Colors.grey[300]!,
+                          highlightColor: Colors.grey[100]!,
+                          child: Container(
+                            color: Colors.white,
+                          ),
+                        ),
+                        errorWidget: (context, url, error) => Container(
+                          color: Colors.grey[300],
+                          child: const Icon(Icons.error),
+                        ),
+                      ),
+                    ),
+                    Container(
+                      decoration: BoxDecoration(
+                        borderRadius: BorderRadius.circular(24),
+                        gradient: LinearGradient(
+                          begin: Alignment.topCenter,
+                          end: Alignment.bottomCenter,
+                          colors: [
+                            Colors.black.withValues(alpha: 0.4),
+                            Colors.black.withValues(alpha: 0.8),
+                          ],
+                          stops: const [0.4, 1.0],
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(16),
+                      child: Column(
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: [
+                          Align(
+                            alignment: Alignment.topRight,
+                            child: _buildPlanTag(lesson['plan']!),
+                          ),
+                          const Spacer(),
+                          Text(
+                            lesson['title']!,
+                            style: AyaTypography.getTextTheme(context)
+                                .titleSmall
+                                ?.copyWith(
+                                  color: AyaColors.textPrimary,
+                                  fontWeight: FontWeight.w600,
+                                ),
+                            maxLines: 2,
+                            overflow: TextOverflow.ellipsis,
+                          ),
+                          const SizedBox(height: 4),
+                          Text(
+                            lesson['subtitle']!,
+                            style: AyaTypography.getTextTheme(context)
+                                .bodySmall
+                                ?.copyWith(
+                                  color: AyaColors.textPrimary80,
+                                ),
+                            maxLines: 1,
+                            overflow: TextOverflow.ellipsis,
+                          ),
+                        ],
+                      ),
+                    ),
+                  ],
+                ),
+              );
+            },
           ),
         ),
       ],
     );
   }
 
-  Widget _buildProfileCard() {
-    return Container(
-      padding: const EdgeInsets.all(24),
-      decoration: BoxDecoration(
-        color: AyaColors.lavenderSoft,
-        borderRadius: BorderRadius.circular(16),
-      ),
-      child: Column(
-        children: [
-          const CircleAvatar(
-            radius: 48,
-            backgroundColor: AyaColors.turquoise,
-            child: Icon(
-              Icons.person,
-              size: 48,
-              color: AyaColors.surface,
-            ),
-          ),
-          const SizedBox(height: 16),
-          Text(
-            'Usuário AYA',
-            style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                  color: AyaColors.textPrimary,
-                  fontWeight: FontWeight.bold,
-                ),
+  Widget _buildPlanTag(String plan) {
+    if (plan == 'premium') {
+      return Container(
+        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
+        decoration: BoxDecoration(
+          color: AyaColors.lavenderVibrant30,
+          borderRadius: BorderRadius.circular(12),
+          border: Border.all(
+            color: AyaColors.lavenderVibrant.withOpacity(0.3),
+            width: 1,
           ),
-          const SizedBox(height: 8),
-          Text(
-            'usuario@aya.com',
-            style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-                  color: AyaColors.textPrimary60,
-                ),
+        ),
+        child: Row(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            Icon(
+              Icons.lock,
+              size: 12,
+              color: AyaColors.turquoise,
+            ),
+            const SizedBox(width: 4),
+            Text(
+              'Premium',
+              style: AyaTypography.getTextTheme(context).labelSmall?.copyWith(
+                    color: AyaColors.textPrimary,
+                  ),
+            ),
+          ],
+        ),
+      );
+    } else {
+      return Container(
+        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
+        decoration: BoxDecoration(
+          color: AyaColors.turquoise30,
+          borderRadius: BorderRadius.circular(12),
+          border: Border.all(
+            color: AyaColors.turquoise.withOpacity(0.3),
+            width: 1,
           ),
-        ],
-      ),
-    );
-  }
-
-  Widget _buildDownloadsSection() {
-    return Column(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: [
-        Text(
-          'Downloads',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
+        ),
+        child: Text(
+          'Gratuito',
+          style: AyaTypography.getTextTheme(context).labelSmall?.copyWith(
                 color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
               ),
         ),
-        const SizedBox(height: 16),
-        // TODO: Implementar lista de downloads
-        Container(
-          height: 200,
-          decoration: BoxDecoration(
-            color: AyaColors.lavenderSoft,
-            borderRadius: BorderRadius.circular(16),
-          ),
-          child: const Center(
-            child: Text('Nenhum download disponível'),
-          ),
+      );
+    }
+  }
+}
+
+class HomeTabWidget extends StatelessWidget {
+  const HomeTabWidget({super.key});
+  @override
+  Widget build(BuildContext context) {
+    return ListView(
+      padding: EdgeInsets.zero,
+      children: [
+        SizedBox(
+          height: MediaQuery.of(context).padding.top + kToolbarHeight + 12,
         ),
+        _HomeTabSections(),
       ],
     );
   }
+}
 
-  Widget _buildSettingsSection() {
+class _HomeTabSections extends StatelessWidget {
+  @override
+  Widget build(BuildContext context) {
+    final dashboard = context.findAncestorStateOfType<_DashboardScreenState>();
     return Column(
-      crossAxisAlignment: CrossAxisAlignment.start,
+      crossAxisAlignment: CrossAxisAlignment.stretch,
       children: [
-        Text(
-          'Configurações',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
-              ),
+        dashboard!._buildHeroSection(),
+        const SizedBox(height: 24),
+        Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 16),
+          child: dashboard._buildContinueLearningSection(),
         ),
-        const SizedBox(height: 16),
-        Container(
-          decoration: BoxDecoration(
-            color: AyaColors.lavenderSoft,
-            borderRadius: BorderRadius.circular(16),
-          ),
-          child: Column(
-            children: [
-              ListTile(
-                leading: const Icon(Icons.notifications_outlined),
-                title: const Text('Notificações'),
-                trailing: const Icon(Icons.chevron_right),
-                onTap: () {
-                  // TODO: Implementar configurações de notificações
-                },
-              ),
-              const Divider(height: 1),
-              ListTile(
-                leading: const Icon(Icons.dark_mode_outlined),
-                title: const Text('Tema'),
-                trailing: const Icon(Icons.chevron_right),
-                onTap: () {
-                  // TODO: Implementar configurações de tema
-                },
-              ),
-              const Divider(height: 1),
-              ListTile(
-                leading: const Icon(Icons.logout),
-                title: const Text('Sair'),
-                onTap: () {
-                  // TODO: Implementar logout
-                },
-              ),
-            ],
-          ),
+        const SizedBox(height: 24),
+        Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 16),
+          child: dashboard._buildRecommendedSection(),
         ),
+        const SizedBox(height: 24),
       ],
     );
   }
 }
+
+class LibraryTabWidget extends StatelessWidget {
+  const LibraryTabWidget({super.key});
+  @override
+  Widget build(BuildContext context) {
+    return Navigator(
+      onGenerateRoute: (settings) {
+        if (settings.name == '/') {
+          return MaterialPageRoute(
+            builder: (_) => const LessonsListScreen(),
+          );
+        }
+        return null;
+      },
+    );
+  }
+}
+
+class CommunityTabWidget extends StatelessWidget {
+  const CommunityTabWidget({super.key});
+  @override
+  Widget build(BuildContext context) {
+    return const Center(child: Text('Comunidade'));
+  }
+}
+
+class ChatTabWidget extends StatelessWidget {
+  const ChatTabWidget({super.key});
+  @override
+  Widget build(BuildContext context) {
+    return const Center(child: Text('Aya Chat'));
+  }
+}
diff --git a/lib/features/dashboard/services/dashboard_service.dart b/lib/features/dashboard/services/dashboard_service.dart
index 73f343a..92a44c5 100644
--- a/lib/features/dashboard/services/dashboard_service.dart
+++ b/lib/features/dashboard/services/dashboard_service.dart
@@ -5,27 +5,84 @@ class DashboardService {
   final _supabase = Supabase.instance.client;
 
   Future<DashboardData> getDashboardData() async {
-    final user = _supabase.auth.currentUser;
-    if (user == null) {
-      throw Exception('Usuário não autenticado');
-    }
-
-    final userName = user.email?.split('@').first ?? 'Amigo(a)';
-    final tipOfTheDay = await _getDailyTip();
-    final lastLesson = await _getLastAccessedLesson();
-    final recommendedLessons = await _getRecommendedLessons();
-    final exploreModules = await _getModules();
-    final favoriteLessons = await _getFavoriteLessons();
-    final activeChallenge = await _getCurrentChallenge();
-
+    // Simulando dados mockados
     return DashboardData(
-      userName: userName,
-      tipOfTheDay: tipOfTheDay,
-      lastLesson: lastLesson,
-      recommendedLessons: recommendedLessons,
-      exploreModules: exploreModules,
-      favoriteLessons: favoriteLessons,
-      activeChallenge: activeChallenge,
+      continueLearning: [
+        Lesson(
+          id: '1',
+          title: 'Introdução à Meditação',
+          description: 'Aprenda os fundamentos da meditação',
+          thumbnailUrl: 'https://picsum.photos/seed/meditation1/400/300',
+          durationMinutes: 15,
+          isPremium: false,
+          progress: 0.3,
+        ),
+        Lesson(
+          id: '2',
+          title: 'Técnicas de Respiração',
+          description: 'Exercícios para melhorar sua respiração',
+          thumbnailUrl: 'https://picsum.photos/seed/meditation2/400/300',
+          durationMinutes: 20,
+          isPremium: false,
+          progress: 0.0,
+        ),
+      ],
+      recommendedLessons: [
+        Lesson(
+          id: '3',
+          title: 'Meditação para Ansiedade',
+          description: 'Técnicas específicas para reduzir a ansiedade',
+          thumbnailUrl: 'https://picsum.photos/seed/meditation3/400/300',
+          durationMinutes: 25,
+          isPremium: true,
+          progress: 0.0,
+        ),
+        Lesson(
+          id: '4',
+          title: 'Mindfulness no Trabalho',
+          description: 'Pratique mindfulness durante sua jornada',
+          thumbnailUrl: 'https://picsum.photos/seed/meditation4/400/300',
+          durationMinutes: 30,
+          isPremium: false,
+          progress: 0.0,
+        ),
+      ],
+      modules: [
+        Module(
+          id: '1',
+          title: 'Meditação para Iniciantes',
+          description: 'Aprenda técnicas básicas de meditação',
+          coverUrl: 'https://picsum.photos/seed/module1/800/400',
+          isPremium: false,
+          progress: 0.4,
+          totalLessons: 10,
+          completedLessons: 4,
+        ),
+      ],
+      challenges: [
+        Challenge(
+          id: '1',
+          title: 'Desafio da Meditação Diária',
+          description: 'Medite por 7 dias consecutivos',
+          points: 100,
+          startDate: DateTime.now(),
+          endDate: DateTime.now().add(const Duration(days: 7)),
+          progress: 0.3,
+          totalParticipants: 100,
+          completedParticipants: 30,
+        ),
+      ],
+      dailyTip: DailyTip(
+        message:
+            'A meditação regular pode reduzir o estresse e melhorar o foco.',
+        author: 'Aya',
+      ),
+      userProgress: UserProgress(
+        level: 'Iniciante',
+        currentPoints: 250,
+        nextLevelPoints: 500,
+        progressPercentage: 0.5,
+      ),
     );
   }
 
@@ -97,36 +154,6 @@ class DashboardService {
     ];
   }
 
-  Future<List<Lesson>> _getFavoriteLessons() async {
-    // TODO: Implementar busca real no Supabase
-    return [
-      Lesson(
-        id: '1',
-        title: 'Meditação Guiada',
-        description: 'Uma meditação guiada para iniciantes',
-        thumbnailUrl: 'https://picsum.photos/400/225',
-        durationMinutes: 10,
-        isPremium: false,
-        progress: 0.5,
-      ),
-    ];
-  }
-
-  Future<Challenge?> _getCurrentChallenge() async {
-    // TODO: Implementar busca real no Supabase
-    return Challenge(
-      id: '1',
-      title: '7 Dias de Mindfulness',
-      description: 'Pratique mindfulness por 7 dias consecutivos',
-      points: 100,
-      startDate: DateTime.now(),
-      endDate: DateTime.now().add(const Duration(days: 7)),
-      progress: 0.3,
-      totalParticipants: 50,
-      completedParticipants: 15,
-    );
-  }
-
   Future<bool> isAdmin() async {
     final user = _supabase.auth.currentUser;
     if (user == null) return false;
diff --git a/lib/features/dashboard/user_dashboard_page.dart b/lib/features/dashboard/user_dashboard_page.dart
index f5c3de9..2b369ad 100644
--- a/lib/features/dashboard/user_dashboard_page.dart
+++ b/lib/features/dashboard/user_dashboard_page.dart
@@ -3,6 +3,7 @@ import 'package:app_aya_v2/core/theme/app_theme.dart';
 import 'package:flutter/foundation.dart';
 import 'package:go_router/go_router.dart';
 import 'package:shimmer/shimmer.dart';
+import '../../../core/theme/aya_icons.dart';
 
 class UserDashboardPage extends StatefulWidget {
   const UserDashboardPage({super.key});
@@ -147,15 +148,15 @@ class _UserDashboardPageState extends State<UserDashboardPage> {
   IconData _getIconForType(CardType type) {
     switch (type) {
       case CardType.recommended:
-        return Icons.star;
+        return AyaIcons.star;
       case CardType.category:
-        return Icons.category;
+        return AyaIcons.category;
       case CardType.favorite:
-        return Icons.favorite;
+        return AyaIcons.favorite;
       case CardType.community:
-        return Icons.people;
+        return AyaIcons.community;
       case CardType.ia:
-        return Icons.psychology;
+        return AyaIcons.ai;
     }
   }
 
@@ -201,7 +202,7 @@ class _WebSidebar extends StatelessWidget {
       {'icon': Icons.home, 'label': 'Dashboard'},
       {'icon': Icons.library_books, 'label': 'Biblioteca'},
       {'icon': Icons.forum, 'label': 'Comunidade'},
-      {'icon': Icons.smart_toy, 'label': 'Chat IA'},
+      {'icon': Icons.smart_toy, 'label': 'Aya Chat'},
       {'icon': Icons.person, 'label': 'Perfil'},
     ];
     return Container(
@@ -253,7 +254,7 @@ class _AyaBottomNavBar extends StatelessWidget {
       {'icon': Icons.home, 'label': 'Dashboard'},
       {'icon': Icons.library_books, 'label': 'Biblioteca'},
       {'icon': Icons.forum, 'label': 'Comunidade'},
-      {'icon': Icons.smart_toy, 'label': 'Chat IA'},
+      {'icon': Icons.smart_toy, 'label': 'Aya Chat'},
       {'icon': Icons.person, 'label': 'Perfil'},
     ];
     return BottomNavigationBar(
diff --git a/lib/features/dashboard/widgets/aya_app_bar.dart b/lib/features/dashboard/widgets/aya_app_bar.dart
index 6685c51..85f6729 100644
--- a/lib/features/dashboard/widgets/aya_app_bar.dart
+++ b/lib/features/dashboard/widgets/aya_app_bar.dart
@@ -1,5 +1,8 @@
 import 'package:flutter/material.dart';
+import 'dart:ui';
+import 'package:iconoir_flutter/iconoir_flutter.dart' as iconoir;
 import '../../../core/theme/app_theme.dart';
+import '../../../widgets/aya_premium_icon.dart';
 
 class AyaAppBar extends StatelessWidget implements PreferredSizeWidget {
   final String? title;
@@ -19,78 +22,125 @@ class AyaAppBar extends StatelessWidget implements PreferredSizeWidget {
 
   @override
   Widget build(BuildContext context) {
-    return AppBar(
-      backgroundColor: Colors.transparent,
-      elevation: 0,
-      leading: showMenu
-          ? IconButton(
-              icon: const Icon(
-                Icons.menu,
-                color: AyaColors.textPrimary,
+    return ClipRect(
+      child: BackdropFilter(
+        filter: ImageFilter.blur(sigmaX: 10, sigmaY: 10),
+        child: Container(
+          decoration: BoxDecoration(
+            gradient: LinearGradient(
+              begin: Alignment.topCenter,
+              end: Alignment.bottomCenter,
+              colors: [
+                AyaColors.surface.withValues(alpha: 0.8),
+                AyaColors.surface.withValues(alpha: 0.6),
+              ],
+            ),
+            border: Border(
+              bottom: BorderSide(
+                color: AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+                width: 1,
               ),
-              onPressed: onMenuPressed,
-            )
-          : null,
-      title: title != null
-          ? Text(
-              title!,
-              style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                    color: AyaColors.textPrimary,
-                    fontWeight: FontWeight.w600,
-                  ),
-            )
-          : null,
-      centerTitle: true,
-      actions: [
-        IconButton(
-          icon: const Icon(
-            Icons.search,
-            color: AyaColors.textPrimary,
+            ),
           ),
-          onPressed: () {
-            // TODO: Implement search
-          },
-        ),
-        Stack(
-          children: [
-            IconButton(
-              icon: const Icon(
-                Icons.notifications_outlined,
-                color: AyaColors.textPrimary,
+          child: AppBar(
+            backgroundColor: Colors.transparent,
+            elevation: 0,
+            leading: showMenu
+                ? IconButton(
+                    icon: AyaPremiumIcon(
+                      customIcon: const iconoir.Menu(),
+                      isActive: false,
+                      size: 24,
+                      borderRadius: 12,
+                      padding: const EdgeInsets.all(8),
+                    ),
+                    onPressed: onMenuPressed,
+                  )
+                : null,
+            title: title != null
+                ? Text(
+                    title!,
+                    style: Theme.of(context).textTheme.titleLarge?.copyWith(
+                          color: AyaColors.textPrimary,
+                          fontWeight: FontWeight.w600,
+                        ),
+                  )
+                : null,
+            centerTitle: true,
+            actions: [
+              IconButton(
+                icon: AyaPremiumIcon(
+                  customIcon: const iconoir.Search(),
+                  isActive: false,
+                  size: 24,
+                  borderRadius: 12,
+                  padding: const EdgeInsets.all(8),
+                ),
+                onPressed: () {
+                  // TODO: Implement search
+                },
               ),
-              onPressed: () {
-                // TODO: Implement notifications
-              },
-            ),
-            if (notificationCount > 0)
-              Positioned(
-                right: 8,
-                top: 8,
-                child: Container(
-                  padding: const EdgeInsets.all(4),
-                  decoration: BoxDecoration(
-                    color: Colors.red,
-                    borderRadius: BorderRadius.circular(8),
-                  ),
-                  constraints: const BoxConstraints(
-                    minWidth: 16,
-                    minHeight: 16,
-                  ),
-                  child: Text(
-                    notificationCount.toString(),
-                    style: const TextStyle(
-                      color: Colors.white,
-                      fontSize: 10,
-                      fontWeight: FontWeight.bold,
+              Stack(
+                children: [
+                  IconButton(
+                    icon: AyaPremiumIcon(
+                      customIcon: const iconoir.Bell(),
+                      isActive: false,
+                      size: 24,
+                      borderRadius: 12,
+                      padding: const EdgeInsets.all(8),
                     ),
-                    textAlign: TextAlign.center,
+                    onPressed: () {
+                      // TODO: Implement notifications
+                    },
                   ),
-                ),
+                  if (notificationCount > 0)
+                    Positioned(
+                      right: 8,
+                      top: 8,
+                      child: Container(
+                        padding: const EdgeInsets.all(4),
+                        decoration: BoxDecoration(
+                          gradient: LinearGradient(
+                            begin: Alignment.topLeft,
+                            end: Alignment.bottomRight,
+                            colors: [
+                              AyaColors.lavenderVibrant.withValues(alpha: 0.3),
+                              AyaColors.turquoise,
+                            ],
+                          ),
+                          borderRadius: BorderRadius.circular(8),
+                          boxShadow: [
+                            BoxShadow(
+                              color: AyaColors.lavenderVibrant
+                                  .withValues(alpha: 0.3),
+                              blurRadius: 4,
+                              offset: const Offset(0, 2),
+                            ),
+                          ],
+                        ),
+                        constraints: const BoxConstraints(
+                          minWidth: 16,
+                          minHeight: 16,
+                        ),
+                        child: Text(
+                          notificationCount.toString(),
+                          style: const TextStyle(
+                            color: Colors.white,
+                            fontSize: 10,
+                            fontWeight: FontWeight.bold,
+                          ),
+                          textAlign: TextAlign.center,
+                        ),
+                      ),
+                    ),
+                ],
               ),
-          ],
+              if (actions != null) ...actions!,
+            ],
+          ),
         ),
-        if (actions != null) ...actions!,
-      ],
+      ),
     );
   }
 
diff --git a/lib/features/dashboard/widgets/aya_bottom_nav.dart b/lib/features/dashboard/widgets/aya_bottom_nav.dart
index 828e07c..b4db64f 100644
--- a/lib/features/dashboard/widgets/aya_bottom_nav.dart
+++ b/lib/features/dashboard/widgets/aya_bottom_nav.dart
@@ -1,4 +1,5 @@
 import 'package:flutter/material.dart';
+import 'dart:ui';
 import '../../../core/theme/app_theme.dart';
 
 class AyaBottomNav extends StatelessWidget {
@@ -13,33 +14,51 @@ class AyaBottomNav extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    return Container(
-      decoration: BoxDecoration(
-        color: AyaColors.surface,
-        borderRadius: const BorderRadius.vertical(top: Radius.circular(16)),
-        boxShadow: [
-          BoxShadow(
-            color: AyaColors.overlayLight,
-            blurRadius: 8,
-            offset: const Offset(0, -2),
+    return ClipRect(
+      child: BackdropFilter(
+        filter: ImageFilter.blur(sigmaX: 10, sigmaY: 10),
+        child: Container(
+          decoration: BoxDecoration(
+            gradient: LinearGradient(
+              begin: Alignment.topCenter,
+              end: Alignment.bottomCenter,
+              colors: [
+                AyaColors.surface.withValues(alpha: 0.8),
+                AyaColors.surface.withValues(alpha: 0.6),
+              ],
+            ),
+            border: Border(
+              top: BorderSide(
+                color: AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+                width: 1,
+              ),
+            ),
+            boxShadow: [
+              BoxShadow(
+                color: AyaColors.overlayDark,
+                blurRadius: 8,
+                offset: const Offset(0, -2),
+              ),
+            ],
           ),
-        ],
-      ),
-      child: NavigationBar(
-        selectedIndex: selectedIndex,
-        onDestinationSelected: onDestinationSelected,
-        backgroundColor: Colors.transparent,
-        elevation: 0,
-        height: 64,
-        labelBehavior: NavigationDestinationLabelBehavior.onlyShowSelected,
-        destinations: [
-          _buildNavItem(Icons.home_outlined, Icons.home, 'Home'),
-          _buildNavItem(
-              Icons.library_books_outlined, Icons.library_books, 'Biblioteca'),
-          _buildNavItem(Icons.people_outline, Icons.people, 'Comunidade'),
-          _buildNavItem(Icons.chat_outlined, Icons.chat, 'Chat IA'),
-          _buildNavItem(Icons.person_outline, Icons.person, 'Perfil'),
-        ],
+          child: NavigationBar(
+            selectedIndex: selectedIndex,
+            onDestinationSelected: onDestinationSelected,
+            backgroundColor: Colors.transparent,
+            elevation: 0,
+            height: 64,
+            labelBehavior: NavigationDestinationLabelBehavior.onlyShowSelected,
+            destinations: [
+              _buildNavItem(Icons.home_outlined, Icons.home, 'Home'),
+              _buildNavItem(Icons.library_books_outlined, Icons.library_books,
+                  'Biblioteca'),
+              _buildNavItem(Icons.people_outline, Icons.people, 'Comunidade'),
+              _buildNavItem(
+                  Icons.smart_toy_outlined, Icons.smart_toy, 'Aya Chat'),
+              _buildNavItem(Icons.person_outline, Icons.person, 'Perfil'),
+            ],
+          ),
+        ),
       ),
     );
   }
@@ -50,13 +69,48 @@ class AyaBottomNav extends StatelessWidget {
     String label,
   ) {
     return NavigationDestination(
-      icon: Icon(
-        outlinedIcon,
-        color: AyaColors.textPrimary50,
+      icon: Container(
+        padding: const EdgeInsets.all(8),
+        decoration: BoxDecoration(
+          gradient: LinearGradient(
+            begin: Alignment.topLeft,
+            end: Alignment.bottomRight,
+            colors: [
+              AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+              AyaColors.turquoise.withValues(alpha: 0.1),
+            ],
+          ),
+          borderRadius: BorderRadius.circular(12),
+        ),
+        child: Icon(
+          outlinedIcon,
+          color: AyaColors.textPrimary50,
+        ),
       ),
-      selectedIcon: Icon(
-        filledIcon,
-        color: AyaColors.turquoise,
+      selectedIcon: Container(
+        padding: const EdgeInsets.all(8),
+        decoration: BoxDecoration(
+          gradient: LinearGradient(
+            begin: Alignment.topLeft,
+            end: Alignment.bottomRight,
+            colors: [
+              AyaColors.lavenderVibrant.withValues(alpha: 0.2),
+              AyaColors.turquoise.withValues(alpha: 0.2),
+            ],
+          ),
+          borderRadius: BorderRadius.circular(12),
+          boxShadow: [
+            BoxShadow(
+              color: AyaColors.lavenderVibrant.withValues(alpha: 0.2),
+              blurRadius: 8,
+              offset: const Offset(0, 2),
+            ),
+          ],
+        ),
+        child: Icon(
+          filledIcon,
+          color: AyaColors.turquoise,
+        ),
       ),
       label: label,
     );
diff --git a/lib/features/dashboard/widgets/aya_cards.dart b/lib/features/dashboard/widgets/aya_cards.dart
index 26cc53b..86cd638 100644
--- a/lib/features/dashboard/widgets/aya_cards.dart
+++ b/lib/features/dashboard/widgets/aya_cards.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
-import 'package:cached_network_image/cached_network_image.dart';
 import '../../../core/theme/app_theme.dart';
 import '../../../widgets/aya_card.dart';
+import '../../../widgets/aya_image.dart';
 
 class AyaFeaturedCard extends StatelessWidget {
   final String title;
@@ -28,28 +28,9 @@ class AyaFeaturedCard extends StatelessWidget {
       child: Stack(
         fit: StackFit.expand,
         children: [
-          ClipRRect(
+          AyaImage(
+            imageUrl: imageUrl,
             borderRadius: BorderRadius.circular(16),
-            child: CachedNetworkImage(
-              imageUrl: imageUrl,
-              fit: BoxFit.cover,
-              placeholder: (context, url) => Container(
-                color: AyaColors.lavenderSoft,
-                child: const Center(
-                  child: CircularProgressIndicator(
-                    color: AyaColors.turquoise,
-                  ),
-                ),
-              ),
-              errorWidget: (context, url, error) => Container(
-                color: AyaColors.lavenderSoft,
-                child: const Icon(
-                  Icons.image_not_supported,
-                  color: AyaColors.textPrimary,
-                  size: 48,
-                ),
-              ),
-            ),
           ),
           Container(
             decoration: BoxDecoration(
@@ -135,30 +116,11 @@ class AyaContentCard extends StatelessWidget {
       child: Column(
         crossAxisAlignment: CrossAxisAlignment.start,
         children: [
-          ClipRRect(
+          AyaImage(
+            imageUrl: imageUrl,
+            width: width,
+            height: height * 0.7,
             borderRadius: const BorderRadius.vertical(top: Radius.circular(12)),
-            child: CachedNetworkImage(
-              imageUrl: imageUrl,
-              width: width,
-              height: height * 0.7,
-              fit: BoxFit.cover,
-              placeholder: (context, url) => Container(
-                color: AyaColors.lavenderSoft,
-                child: const Center(
-                  child: CircularProgressIndicator(
-                    color: AyaColors.turquoise,
-                  ),
-                ),
-              ),
-              errorWidget: (context, url, error) => Container(
-                color: AyaColors.lavenderSoft,
-                child: const Icon(
-                  Icons.image_not_supported,
-                  color: AyaColors.textPrimary,
-                  size: 32,
-                ),
-              ),
-            ),
           ),
           Expanded(
             child: Padding(
diff --git a/lib/features/dashboard/widgets/aya_drawer.dart b/lib/features/dashboard/widgets/aya_drawer.dart
index eb718a5..05b5a09 100644
--- a/lib/features/dashboard/widgets/aya_drawer.dart
+++ b/lib/features/dashboard/widgets/aya_drawer.dart
@@ -1,257 +1,200 @@
 import 'package:flutter/material.dart';
-import 'package:cached_network_image/cached_network_image.dart';
-import 'package:supabase_flutter/supabase_flutter.dart';
+import 'package:iconoir_flutter/iconoir_flutter.dart' as iconoir;
 import '../../../core/theme/app_theme.dart';
+import '../../../widgets/aya_premium_icon.dart';
+import '../../../widgets/aya_glass_container.dart';
+import 'package:go_router/go_router.dart';
 import '../../../features/auth/services/auth_service.dart';
 
 class AyaDrawer extends StatelessWidget {
   final AuthService authService;
+  final int selectedIndex;
+  final Function(int) onItemSelected;
 
   const AyaDrawer({
     super.key,
     required this.authService,
+    required this.selectedIndex,
+    required this.onItemSelected,
   });
 
   @override
   Widget build(BuildContext context) {
     final user = authService.getCurrentUser();
-    final isAdmin = user?.userMetadata?['role'] == 'admin';
-
     return Drawer(
-      backgroundColor: AyaColors.surface,
-      child: Column(
-        children: [
-          _buildDrawerHeader(context, user),
-          Expanded(
-            child: ListView(
-              padding: EdgeInsets.zero,
-              children: [
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.person_outline,
-                  title: 'Meu Perfil',
-                  onTap: () {
-                    Navigator.pop(context);
-                    Navigator.pushNamed(context, '/profile');
-                  },
-                ),
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.favorite_border,
-                  title: 'Curtidas',
-                  onTap: () {
-                    Navigator.pop(context);
-                    Navigator.pushNamed(context, '/favorites');
-                  },
-                ),
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.note_alt_outlined,
-                  title: 'Anotações',
-                  onTap: () {
-                    Navigator.pop(context);
-                    Navigator.pushNamed(context, '/notes');
-                  },
-                ),
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.card_membership,
-                  title: 'Planos & Assinaturas',
-                  onTap: () {
-                    Navigator.pop(context);
-                    Navigator.pushNamed(context, '/subscription');
-                  },
-                ),
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.settings_outlined,
-                  title: 'Configurações do App',
-                  onTap: () {
-                    Navigator.pop(context);
-                    Navigator.pushNamed(context, '/settings');
-                  },
-                ),
-                if (isAdmin)
-                  _buildDrawerItem(
-                    context,
-                    icon: Icons.bolt_outlined,
-                    title: 'Painel do Admin',
+      backgroundColor: Colors.transparent,
+      elevation: 0,
+      child: AyaGlassContainer(
+        borderRadius: 0,
+        blurRadius: 15,
+        padding: EdgeInsets.zero,
+        child: Column(
+          children: [
+            _buildHeader(user),
+            Expanded(
+              child: ListView(
+                padding: EdgeInsets.zero,
+                children: [
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.Home(),
+                    label: 'Home',
+                    index: 0,
                     onTap: () {
                       Navigator.pop(context);
-                      Navigator.pushNamed(context, '/admin');
+                      onItemSelected(0);
+                      context.go('/dashboard');
                     },
                   ),
-                const Divider(color: AyaColors.lavenderSoft30),
-                _buildContinueFromWhereYouLeftOff(context),
-                const Divider(color: AyaColors.lavenderSoft30),
-                _buildDrawerItem(
-                  context,
-                  icon: Icons.logout,
-                  title: 'Sair',
-                  onTap: () async {
-                    await authService.signOut();
-                    if (context.mounted) {
-                      Navigator.pushReplacementNamed(context, '/login');
-                    }
-                  },
-                ),
-              ],
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.Book(),
+                    label: 'Biblioteca',
+                    index: 1,
+                    onTap: () {
+                      Navigator.pop(context);
+                      onItemSelected(1);
+                      context.go('/content/modules');
+                    },
+                  ),
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.Group(),
+                    label: 'Comunidade',
+                    index: 2,
+                    onTap: () {
+                      Navigator.pop(context);
+                      onItemSelected(2);
+                      context.go('/community');
+                    },
+                  ),
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.ChatBubble(),
+                    label: 'Aya Chat',
+                    index: 3,
+                    onTap: () {
+                      Navigator.pop(context);
+                      onItemSelected(3);
+                      context.go('/chatbot');
+                    },
+                  ),
+                  const Divider(color: AyaColors.glassBorder),
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.Settings(),
+                    label: 'Configurações',
+                    index: 4,
+                    onTap: () {
+                      Navigator.pop(context);
+                      onItemSelected(4);
+                      context.go('/settings');
+                    },
+                  ),
+                  _buildMenuItem(
+                    iconoirIcon: const iconoir.LogOut(),
+                    label: 'Sair',
+                    index: 5,
+                    onTap: () async {
+                      Navigator.pop(context);
+                      await authService.signOut();
+                      if (context.mounted) {
+                        context.go('/login');
+                      }
+                    },
+                  ),
+                ],
+              ),
             ),
-          ),
-        ],
+          ],
+        ),
       ),
     );
   }
 
-  Widget _buildDrawerHeader(BuildContext context, User? user) {
+  Widget _buildHeader(dynamic user) {
     return Container(
-      padding: const EdgeInsets.fromLTRB(16, 48, 16, 16),
+      padding: const EdgeInsets.all(16),
       decoration: BoxDecoration(
-        gradient: LinearGradient(
-          begin: Alignment.topCenter,
-          end: Alignment.bottomCenter,
-          colors: [
-            AyaColors.background,
-            AyaColors.surface,
-          ],
+        border: Border(
+          bottom: BorderSide(
+            color: AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+            width: 1,
+          ),
         ),
       ),
       child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
         children: [
-          CircleAvatar(
-            radius: 40,
-            backgroundColor: AyaColors.lavenderSoft,
-            child: user?.userMetadata?['avatar_url'] != null
-                ? ClipOval(
-                    child: CachedNetworkImage(
-                      imageUrl: user!.userMetadata!['avatar_url'],
-                      fit: BoxFit.cover,
-                      width: 80,
-                      height: 80,
-                      placeholder: (context, url) => const Icon(
-                        Icons.person,
-                        size: 40,
+          const SizedBox(height: 48),
+          Row(
+            children: [
+              CircleAvatar(
+                radius: 24,
+                backgroundColor:
+                    AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+                child: AyaPremiumIcon(
+                  customIcon: const iconoir.User(),
+                  isActive: true,
+                  size: 24,
+                  borderRadius: 12,
+                  padding: const EdgeInsets.all(8),
+                ),
+              ),
+              const SizedBox(width: 12),
+              Expanded(
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    Text(
+                      user?.userMetadata?['username'] ?? 'Usuário',
+                      style: const TextStyle(
                         color: AyaColors.textPrimary,
+                        fontSize: 16,
+                        fontWeight: FontWeight.w600,
                       ),
-                      errorWidget: (context, url, error) => const Icon(
-                        Icons.person,
-                        size: 40,
-                        color: AyaColors.textPrimary,
+                    ),
+                    Text(
+                      user?.userMetadata?['email'] ?? '',
+                      style: TextStyle(
+                        color: AyaColors.textPrimary.withValues(alpha: 0.6),
+                        fontSize: 14,
                       ),
                     ),
-                  )
-                : const Icon(
-                    Icons.person,
-                    size: 40,
-                    color: AyaColors.textPrimary,
-                  ),
-          ),
-          const SizedBox(height: 16),
-          Text(
-            user?.userMetadata?['name'] ?? 'Usuário',
-            style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                  color: AyaColors.textPrimary,
-                  fontWeight: FontWeight.bold,
-                ),
-          ),
-          const SizedBox(height: 4),
-          Text(
-            user?.userMetadata?['email'] ?? '',
-            style: Theme.of(context).textTheme.bodyMedium?.copyWith(
-                  color: AyaColors.textPrimary60,
+                  ],
                 ),
+              ),
+            ],
           ),
         ],
       ),
     );
   }
 
-  Widget _buildDrawerItem(
-    BuildContext context, {
-    required IconData icon,
-    required String title,
+  Widget _buildMenuItem({
+    required Widget iconoirIcon,
+    required String label,
+    required int index,
     required VoidCallback onTap,
   }) {
+    final isSelected = index == selectedIndex;
     return ListTile(
-      leading: Icon(
-        icon,
-        color: AyaColors.lavenderVibrant,
+      leading: AyaPremiumIcon(
+        customIcon: iconoirIcon,
+        isActive: isSelected,
+        size: 24,
+        borderRadius: 12,
+        padding: const EdgeInsets.all(8),
       ),
       title: Text(
-        title,
-        style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-              color: AyaColors.textPrimary,
-            ),
+        label,
+        style: TextStyle(
+          color: isSelected ? AyaColors.lavenderVibrant : AyaColors.textPrimary,
+          fontSize: 16,
+          fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,
+        ),
       ),
       onTap: onTap,
-    );
-  }
-
-  Widget _buildContinueFromWhereYouLeftOff(BuildContext context) {
-    return Padding(
-      padding: const EdgeInsets.all(16),
-      child: Column(
-        crossAxisAlignment: CrossAxisAlignment.start,
-        children: [
-          Text(
-            'Continue de onde parou',
-            style: Theme.of(context).textTheme.titleMedium?.copyWith(
-                  color: AyaColors.textPrimary,
-                  fontWeight: FontWeight.w500,
-                ),
-          ),
-          const SizedBox(height: 12),
-          Container(
-            decoration: BoxDecoration(
-              color: AyaColors.lavenderSoft,
-              borderRadius: BorderRadius.circular(12),
-            ),
-            child: ListTile(
-              contentPadding: const EdgeInsets.all(12),
-              leading: ClipRRect(
-                borderRadius: BorderRadius.circular(8),
-                child: CachedNetworkImage(
-                  imageUrl: 'https://picsum.photos/200',
-                  width: 48,
-                  height: 48,
-                  fit: BoxFit.cover,
-                  placeholder: (context, url) => Container(
-                    color: AyaColors.lavenderSoft,
-                    child: const Icon(
-                      Icons.play_circle_outline,
-                      color: AyaColors.textPrimary,
-                    ),
-                  ),
-                  errorWidget: (context, url, error) => Container(
-                    color: AyaColors.lavenderSoft,
-                    child: const Icon(
-                      Icons.play_circle_outline,
-                      color: AyaColors.textPrimary,
-                    ),
-                  ),
-                ),
-              ),
-              title: Text(
-                'Introdução à Meditação',
-                style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-                      color: AyaColors.textPrimary,
-                      fontWeight: FontWeight.w500,
-                    ),
-              ),
-              subtitle: Text(
-                'Módulo: Mindfulness • Aula 1',
-                style: Theme.of(context).textTheme.bodyMedium?.copyWith(
-                      color: AyaColors.textPrimary60,
-                    ),
-              ),
-              onTap: () {
-                Navigator.pop(context);
-                Navigator.pushNamed(context, '/lesson/1');
-              },
-            ),
-          ),
-        ],
+      shape: RoundedRectangleBorder(
+        borderRadius: BorderRadius.circular(12),
       ),
+      selectedTileColor: AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+      hoverColor: AyaColors.lavenderVibrant.withValues(alpha: 0.05),
     );
   }
 }
diff --git a/lib/features/landing/landing_page.dart b/lib/features/landing/landing_page.dart
index 2f9bc1a..3d6fb0e 100644
--- a/lib/features/landing/landing_page.dart
+++ b/lib/features/landing/landing_page.dart
@@ -50,6 +50,48 @@ class _LandingPageState extends State<LandingPage> {
     }
   }
 
+  Future<void> _handleGoogleSignIn() async {
+    setState(() => _isLoading = true);
+    try {
+      final navigator = Navigator.of(context);
+      await AuthService().signInWithGoogle();
+      if (mounted) {
+        navigator.pushReplacementNamed('/dashboard');
+      }
+    } catch (e) {
+      if (mounted) {
+        setState(() {
+          _errorMessage = e.toString().replaceFirst('Exception: ', '');
+        });
+      }
+    } finally {
+      if (mounted) {
+        setState(() => _isLoading = false);
+      }
+    }
+  }
+
+  Future<void> _handleAppleSignIn() async {
+    setState(() => _isLoading = true);
+    try {
+      final navigator = Navigator.of(context);
+      await AuthService().signInWithApple();
+      if (mounted) {
+        navigator.pushReplacementNamed('/dashboard');
+      }
+    } catch (e) {
+      if (mounted) {
+        setState(() {
+          _errorMessage = e.toString().replaceFirst('Exception: ', '');
+        });
+      }
+    } finally {
+      if (mounted) {
+        setState(() => _isLoading = false);
+      }
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     final isWide = MediaQuery.of(context).size.width > 900;
@@ -247,30 +289,7 @@ class _LandingPageState extends State<LandingPage> {
                                     child: OutlinedButton.icon(
                                       onPressed: _isLoading
                                           ? null
-                                          : () async {
-                                              try {
-                                                setState(
-                                                    () => _isLoading = true);
-                                                await AuthService()
-                                                    .signInWithGoogle();
-                                                if (!mounted) return;
-                                                Navigator.of(context)
-                                                    .pushReplacementNamed(
-                                                        '/dashboard');
-                                              } catch (e) {
-                                                if (!mounted) return;
-                                                setState(() {
-                                                  _errorMessage = e
-                                                      .toString()
-                                                      .replaceFirst(
-                                                          'Exception: ', '');
-                                                });
-                                              } finally {
-                                                if (mounted)
-                                                  setState(
-                                                      () => _isLoading = false);
-                                              }
-                                            },
+                                          : _handleGoogleSignIn,
                                       icon: const Icon(Icons.g_mobiledata,
                                           color: Color(0xFF78C7B4)),
                                       label: const Text('Entrar com Google',
@@ -293,30 +312,7 @@ class _LandingPageState extends State<LandingPage> {
                                     child: OutlinedButton.icon(
                                       onPressed: _isLoading
                                           ? null
-                                          : () async {
-                                              try {
-                                                setState(
-                                                    () => _isLoading = true);
-                                                await AuthService()
-                                                    .signInWithApple();
-                                                if (!mounted) return;
-                                                Navigator.of(context)
-                                                    .pushReplacementNamed(
-                                                        '/dashboard');
-                                              } catch (e) {
-                                                if (!mounted) return;
-                                                setState(() {
-                                                  _errorMessage = e
-                                                      .toString()
-                                                      .replaceFirst(
-                                                          'Exception: ', '');
-                                                });
-                                              } finally {
-                                                if (mounted)
-                                                  setState(
-                                                      () => _isLoading = false);
-                                              }
-                                            },
+                                          : _handleAppleSignIn,
                                       icon: const Icon(Icons.apple,
                                           color: Colors.white),
                                       label: const Text('Apple',
@@ -519,31 +515,8 @@ class _LandingPageState extends State<LandingPage> {
                             children: [
                               Expanded(
                                 child: OutlinedButton.icon(
-                                  onPressed: _isLoading
-                                      ? null
-                                      : () async {
-                                          try {
-                                            setState(() => _isLoading = true);
-                                            await AuthService()
-                                                .signInWithGoogle();
-                                            if (!mounted) return;
-                                            Navigator.of(context)
-                                                .pushReplacementNamed(
-                                                    '/dashboard');
-                                          } catch (e) {
-                                            if (!mounted) return;
-                                            setState(() {
-                                              _errorMessage = e
-                                                  .toString()
-                                                  .replaceFirst(
-                                                      'Exception: ', '');
-                                            });
-                                          } finally {
-                                            if (mounted)
-                                              setState(
-                                                  () => _isLoading = false);
-                                          }
-                                        },
+                                  onPressed:
+                                      _isLoading ? null : _handleGoogleSignIn,
                                   icon: const Icon(Icons.g_mobiledata,
                                       color: Color(0xFF78C7B4)),
                                   label: const Text('Entrar com Google',
@@ -563,31 +536,8 @@ class _LandingPageState extends State<LandingPage> {
                               const SizedBox(width: 12),
                               Expanded(
                                 child: OutlinedButton.icon(
-                                  onPressed: _isLoading
-                                      ? null
-                                      : () async {
-                                          try {
-                                            setState(() => _isLoading = true);
-                                            await AuthService()
-                                                .signInWithApple();
-                                            if (!mounted) return;
-                                            Navigator.of(context)
-                                                .pushReplacementNamed(
-                                                    '/dashboard');
-                                          } catch (e) {
-                                            if (!mounted) return;
-                                            setState(() {
-                                              _errorMessage = e
-                                                  .toString()
-                                                  .replaceFirst(
-                                                      'Exception: ', '');
-                                            });
-                                          } finally {
-                                            if (mounted)
-                                              setState(
-                                                  () => _isLoading = false);
-                                          }
-                                        },
+                                  onPressed:
+                                      _isLoading ? null : _handleAppleSignIn,
                                   icon: const Icon(Icons.apple,
                                       color: Colors.white),
                                   label: const Text('Apple',
diff --git a/lib/features/lessons/models/lesson.dart b/lib/features/lessons/models/lesson.dart
index b03f712..22aa3ad 100644
--- a/lib/features/lessons/models/lesson.dart
+++ b/lib/features/lessons/models/lesson.dart
@@ -1,3 +1,5 @@
+import 'package:flutter/material.dart';
+
 enum ContentType {
   video,
   audio,
@@ -28,6 +30,8 @@ class Lesson {
   final String duration;
   final ContentType contentType;
   final String? difficulty;
+  final bool isPremium;
+  final int studentsCount;
   final List<ComplementaryMaterial> complementaryMaterials;
   final Lesson? nextLesson;
 
@@ -40,6 +44,8 @@ class Lesson {
     required this.duration,
     required this.contentType,
     this.difficulty,
+    this.isPremium = false,
+    this.studentsCount = 0,
     this.complementaryMaterials = const [],
     this.nextLesson,
   });
@@ -50,15 +56,16 @@ class Lesson {
       // Vídeos
       Lesson(
         id: '1',
-        title: 'Introdução à Astrologia',
+        title: 'Introdução ao Flutter',
         description:
-            'Nesta aula introdutória, você aprenderá os conceitos fundamentais da astrologia e como ela pode ser uma ferramenta poderosa para autoconhecimento e desenvolvimento pessoal.',
-        contentUrl:
-            'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',
-        thumbnailUrl: 'https://picsum.photos/800/450',
-        duration: '25 min',
+            'Aprenda os conceitos básicos do Flutter e como criar seu primeiro aplicativo.',
+        contentUrl: 'https://example.com/video1.mp4',
+        thumbnailUrl: 'https://picsum.photos/800/400',
         contentType: ContentType.video,
+        duration: '45 min',
         difficulty: 'Iniciante',
+        isPremium: false,
+        studentsCount: 1234,
         complementaryMaterials: [
           ComplementaryMaterial(
             name: 'Guia de Estudo - Introdução',
@@ -74,25 +81,28 @@ class Lesson {
               'Explore as características e significados dos 12 signos do zodíaco, entendendo como eles influenciam nossa personalidade e comportamento.',
           contentUrl:
               'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',
-          thumbnailUrl: 'https://picsum.photos/800/451',
+          thumbnailUrl: 'https://picsum.photos/seed/lesson2/800/450',
           duration: '30 min',
           contentType: ContentType.video,
           difficulty: 'Iniciante',
+          isPremium: false,
+          studentsCount: 0,
         ),
       ),
 
       // Áudios
       Lesson(
         id: '3',
-        title: 'Meditação Guiada para Iniciantes',
+        title: 'Gerenciamento de Estado',
         description:
-            'Uma meditação guiada suave e relaxante, perfeita para quem está começando sua jornada de mindfulness.',
-        contentUrl:
-            'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3',
-        thumbnailUrl: 'https://picsum.photos/800/452',
-        duration: '15 min',
+            'Entenda diferentes abordagens para gerenciar o estado em aplicativos Flutter.',
+        contentUrl: 'https://example.com/audio1.mp3',
+        thumbnailUrl: 'https://picsum.photos/800/402',
         contentType: ContentType.audio,
-        difficulty: 'Iniciante',
+        duration: '30 min',
+        difficulty: 'Avançado',
+        isPremium: true,
+        studentsCount: 567,
         complementaryMaterials: [
           ComplementaryMaterial(
             name: 'Transcrição da Meditação',
@@ -109,78 +119,27 @@ class Lesson {
             'Uma coleção de sons naturais para ajudar na concentração e relaxamento durante suas práticas de meditação.',
         contentUrl:
             'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3',
-        thumbnailUrl: 'https://picsum.photos/800/453',
+        thumbnailUrl: 'https://picsum.photos/seed/lesson4/800/450',
         duration: '20 min',
         contentType: ContentType.audio,
         difficulty: 'Iniciante',
+        isPremium: false,
+        studentsCount: 0,
       ),
 
       // Textos Ricos
       Lesson(
         id: '5',
-        title: 'Entendendo seu Mapa Astral',
+        title: 'Arquitetura de Aplicativos',
         description:
-            'Um guia detalhado sobre como interpretar seu mapa astral natal, incluindo a posição dos planetas, casas e aspectos.',
-        contentUrl: '''
-# Entendendo seu Mapa Astral
-
-O mapa astral é um retrato do céu no momento exato do seu nascimento. Ele revela informações importantes sobre sua personalidade, talentos, desafios e propósito de vida.
-
-## Elementos do Mapa Astral
-
-### Planetas
-- **Sol**: Representa sua essência e propósito de vida
-- **Lua**: Rege suas emoções e necessidades internas
-- **Mercúrio**: Controla sua comunicação e forma de pensar
-- **Vênus**: Influencia seus relacionamentos e valores
-- **Marte**: Representa sua energia e forma de agir
-
-### Signos
-Os 12 signos do zodíaco representam diferentes qualidades e características:
-
-1. Áries: Iniciativa e coragem
-2. Touro: Estabilidade e sensualidade
-3. Gêmeos: Comunicação e adaptabilidade
-4. Câncer: Emoção e proteção
-5. Leão: Criatividade e liderança
-6. Virgem: Análise e serviço
-
-### Casas
-As 12 casas astrológicas representam diferentes áreas da vida:
-
-> A primeira casa representa sua personalidade e aparência física
-> A sétima casa representa seus relacionamentos e parcerias
-> A décima casa representa sua carreira e propósito profissional
-
-### Aspectos
-Os aspectos são os ângulos formados entre os planetas:
-
-| Aspecto | Ângulo | Influência |
-|---------|--------|------------|
-| Conjunção | 0° | Fusão de energias |
-| Oposição | 180° | Tensão e polaridade |
-| Trígono | 120° | Harmonia e fluidez |
-| Quadratura | 90° | Desafio e crescimento |
-
-## Como Interpretar seu Mapa
-
-1. Identifique os planetas em seus signos
-2. Observe as casas onde os planetas estão
-3. Analise os aspectos entre os planetas
-4. Considere o contexto geral do mapa
-
-> **Dica**: Mantenha um diário astrológico para registrar suas observações e insights.
-
-## Recursos Adicionais
-
-- [Calculadora de Mapa Astral](https://example.com/calculator)
-- [Glossário Astrológico](https://example.com/glossary)
-- [Biblioteca de Aspectos](https://example.com/aspects)
-''',
-        thumbnailUrl: 'https://picsum.photos/800/454',
-        duration: '45 min',
+            'Aprenda sobre padrões de arquitetura e boas práticas em Flutter.',
+        contentUrl: 'https://example.com/article1.html',
+        thumbnailUrl: 'https://picsum.photos/800/403',
         contentType: ContentType.richText,
+        duration: '20 min',
         difficulty: 'Intermediário',
+        isPremium: false,
+        studentsCount: 432,
         complementaryMaterials: [
           ComplementaryMaterial(
             name: 'Planilha de Análise',
@@ -194,15 +153,16 @@ Os aspectos são os ângulos formados entre os planetas:
       // PDFs
       Lesson(
         id: '6',
-        title: 'Guia Completo de Meditação',
+        title: 'Testes em Flutter',
         description:
-            'Um guia abrangente sobre diferentes técnicas de meditação e como incorporá-las em sua rotina diária.',
-        contentUrl:
-            'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf',
-        thumbnailUrl: 'https://picsum.photos/800/455',
-        duration: '60 min',
+            'Aprenda a escrever testes unitários, de widget e de integração.',
+        contentUrl: 'https://example.com/pdf1.pdf',
+        thumbnailUrl: 'https://picsum.photos/800/404',
         contentType: ContentType.pdf,
-        difficulty: 'Intermediário',
+        duration: '40 min',
+        difficulty: 'Avançado',
+        isPremium: true,
+        studentsCount: 321,
         complementaryMaterials: [
           ComplementaryMaterial(
             name: 'Áudio de Meditação',
@@ -219,10 +179,12 @@ Os aspectos são os ângulos formados entre os planetas:
             'Um manual detalhado com práticas espirituais para diferentes níveis de experiência.',
         contentUrl:
             'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf',
-        thumbnailUrl: 'https://picsum.photos/800/456',
+        thumbnailUrl: 'https://picsum.photos/seed/lesson7/800/450',
         duration: '90 min',
         contentType: ContentType.pdf,
         difficulty: 'Avançado',
+        isPremium: false,
+        studentsCount: 0,
         complementaryMaterials: [
           ComplementaryMaterial(
             name: 'Guia de Mantras',
diff --git a/lib/features/lessons/screens/lesson_page.dart b/lib/features/lessons/screens/lesson_page.dart
index 3b48e61..1e907b3 100644
--- a/lib/features/lessons/screens/lesson_page.dart
+++ b/lib/features/lessons/screens/lesson_page.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
-import 'package:cached_network_image/cached_network_image.dart';
 import '../../../core/theme/app_theme.dart';
+import '../../../core/theme/aya_icons.dart';
+import '../../../widgets/aya_premium_icon.dart';
 import '../widgets/aya_video_player.dart';
 import '../widgets/aya_audio_player.dart';
 import '../widgets/aya_rich_text_viewer.dart';
@@ -23,138 +24,403 @@ class _LessonPageState extends State<LessonPage> {
   bool _isDescriptionExpanded = false;
   bool _isLiked = false;
   bool _isCompleted = false;
+  bool _isSaved = false;
 
   @override
   Widget build(BuildContext context) {
     return Scaffold(
       backgroundColor: AyaColors.background,
-      appBar: AppBar(
-        backgroundColor: Colors.transparent,
-        elevation: 0,
-        leading: IconButton(
-          icon: const Icon(
-            Icons.arrow_back_ios_new_rounded,
-            color: AyaColors.textPrimary,
-          ),
-          onPressed: () => Navigator.pop(context),
-        ),
-        title: Text(
-          widget.lesson.title,
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
+      body: CustomScrollView(
+        slivers: [
+          // App Bar
+          SliverAppBar(
+            backgroundColor: AyaColors.surface.withAlpha(217), // 85% opacity
+            elevation: 0,
+            pinned: true,
+            title: Text(
+              widget.lesson.title,
+              style: Theme.of(context).textTheme.titleLarge?.copyWith(
+                    color: AyaColors.textPrimary,
+                    fontWeight: FontWeight.bold,
+                  ),
+              maxLines: 1,
+              overflow: TextOverflow.ellipsis,
+            ),
+            leading: IconButton(
+              icon: const Icon(
+                Icons.arrow_back,
                 color: AyaColors.textPrimary,
-                fontWeight: FontWeight.w600,
               ),
-          maxLines: 1,
-          overflow: TextOverflow.ellipsis,
-        ),
-        actions: [
-          IconButton(
-            icon: Icon(
-              _isLiked ? Icons.favorite : Icons.favorite_border,
-              color: _isLiked ? AyaColors.turquoise : AyaColors.textPrimary,
-            ),
-            onPressed: () {
-              setState(() => _isLiked = !_isLiked);
-            },
-          ),
-          IconButton(
-            icon: const Icon(
-              Icons.more_vert,
-              color: AyaColors.textPrimary,
+              onPressed: () => Navigator.pop(context),
             ),
-            onPressed: () {
-              _showMoreOptions(context);
-            },
+            actions: [
+              IconButton(
+                icon: Icon(
+                  _isLiked ? Icons.favorite : Icons.favorite_border,
+                  color: _isLiked ? AyaColors.turquoise : AyaColors.textPrimary,
+                ),
+                onPressed: () {
+                  setState(() {
+                    _isLiked = !_isLiked;
+                  });
+                },
+              ),
+              IconButton(
+                icon: const Icon(
+                  Icons.more_vert,
+                  color: AyaColors.textPrimary,
+                ),
+                onPressed: _showOptions,
+              ),
+            ],
           ),
-        ],
-      ),
-      body: ListView(
-        children: [
-          // Content Player/Viewer
-          _buildContentPlayer(),
 
-          // Lesson Info
-          Padding(
-            padding: const EdgeInsets.all(16),
+          // Content
+          SliverToBoxAdapter(
             child: Column(
               crossAxisAlignment: CrossAxisAlignment.start,
               children: [
-                // Title
-                Text(
-                  widget.lesson.title,
-                  style: Theme.of(context).textTheme.headlineSmall?.copyWith(
-                        color: AyaColors.textPrimary,
-                        fontWeight: FontWeight.bold,
+                // Content Player
+                _buildContentPlayer(),
+                const SizedBox(height: 24),
+
+                // Title and Metadata Section
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 16),
+                  child: Column(
+                    crossAxisAlignment: CrossAxisAlignment.start,
+                    children: [
+                      // Title
+                      Text(
+                        widget.lesson.title,
+                        style: Theme.of(context)
+                            .textTheme
+                            .headlineMedium
+                            ?.copyWith(
+                              color: AyaColors.textPrimary,
+                              fontWeight: FontWeight.bold,
+                            ),
                       ),
-                ),
-                const SizedBox(height: 16),
+                      const SizedBox(height: 16),
 
-                // Metadata
-                Row(
-                  children: [
-                    _buildMetadataItem(
-                      icon: _getContentTypeIcon(),
-                      text: _getContentTypeText(),
-                    ),
-                    const SizedBox(width: 16),
-                    _buildMetadataItem(
-                      icon: Icons.timer_outlined,
-                      text: widget.lesson.duration,
-                    ),
-                    if (widget.lesson.difficulty != null) ...[
-                      const SizedBox(width: 16),
-                      _buildMetadataItem(
-                        icon: Icons.signal_cellular_alt_outlined,
-                        text: widget.lesson.difficulty!,
+                      // Metadata
+                      Row(
+                        children: [
+                          _buildMetadataItem(
+                            icon: _getContentTypeIcon(),
+                            text: _getContentTypeText(),
+                          ),
+                          const SizedBox(width: 16),
+                          _buildMetadataItem(
+                            icon: Icons.timer_outlined,
+                            text: widget.lesson.duration,
+                          ),
+                          if (widget.lesson.difficulty != null) ...[
+                            const SizedBox(width: 16),
+                            _buildMetadataItem(
+                              icon: Icons.signal_cellular_alt_outlined,
+                              text: widget.lesson.difficulty!,
+                            ),
+                          ],
+                        ],
                       ),
-                    ],
-                  ],
-                ),
-                const SizedBox(height: 16),
+                      const SizedBox(height: 24),
 
-                // Description
-                Text(
-                  widget.lesson.description,
-                  style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-                        color: AyaColors.textPrimary,
-                        height: 1.5,
+                      // Description with "Read More" functionality
+                      Column(
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: [
+                          Text(
+                            widget.lesson.description,
+                            style:
+                                Theme.of(context).textTheme.bodyLarge?.copyWith(
+                                      color: AyaColors.textPrimary80,
+                                    ),
+                            maxLines: _isDescriptionExpanded ? null : 3,
+                            overflow: _isDescriptionExpanded
+                                ? null
+                                : TextOverflow.ellipsis,
+                          ),
+                          if (widget.lesson.description.length > 150)
+                            TextButton(
+                              onPressed: () {
+                                setState(() {
+                                  _isDescriptionExpanded =
+                                      !_isDescriptionExpanded;
+                                });
+                              },
+                              child: Text(
+                                _isDescriptionExpanded
+                                    ? 'Mostrar menos'
+                                    : 'Ler mais',
+                                style:
+                                    const TextStyle(color: AyaColors.turquoise),
+                              ),
+                            ),
+                        ],
                       ),
-                  maxLines: _isDescriptionExpanded ? null : 3,
-                  overflow: _isDescriptionExpanded
-                      ? TextOverflow.visible
-                      : TextOverflow.ellipsis,
-                ),
-                if (widget.lesson.description.length > 150)
-                  TextButton(
-                    onPressed: () {
-                      setState(() {
-                        _isDescriptionExpanded = !_isDescriptionExpanded;
-                      });
-                    },
-                    style: TextButton.styleFrom(
-                      foregroundColor: AyaColors.turquoise,
-                      padding: EdgeInsets.zero,
-                    ),
-                    child:
-                        Text(_isDescriptionExpanded ? 'Ler menos' : 'Ler mais'),
-                  ),
-                const SizedBox(height: 24),
+                      const SizedBox(height: 24),
 
-                // Quick Actions
-                _buildQuickActions(),
-                const SizedBox(height: 24),
+                      // Action Bar
+                      Container(
+                        padding: const EdgeInsets.symmetric(vertical: 12),
+                        decoration: BoxDecoration(
+                          color: AyaColors.lavenderSoft30,
+                          borderRadius: BorderRadius.circular(12),
+                          border: Border.all(
+                            color: AyaColors.textPrimary40,
+                          ),
+                        ),
+                        child: Row(
+                          mainAxisAlignment: MainAxisAlignment.spaceAround,
+                          children: [
+                            _buildActionButton(
+                              icon: _isLiked
+                                  ? Icons.favorite
+                                  : Icons.favorite_border,
+                              label: 'Curtir',
+                              isActive: _isLiked,
+                              onTap: () {
+                                setState(() {
+                                  _isLiked = !_isLiked;
+                                });
+                              },
+                            ),
+                            _buildActionButton(
+                              icon: _isSaved
+                                  ? Icons.bookmark
+                                  : Icons.bookmark_border,
+                              label: 'Salvar',
+                              isActive: _isSaved,
+                              onTap: () {
+                                setState(() {
+                                  _isSaved = !_isSaved;
+                                });
+                              },
+                            ),
+                            _buildActionButton(
+                              icon: Icons.note_alt_outlined,
+                              label: 'Anotações',
+                              onTap: () {
+                                // TODO: Implement notes
+                              },
+                            ),
+                            _buildActionButton(
+                              icon: _isCompleted
+                                  ? Icons.check_circle
+                                  : Icons.check_circle_outline,
+                              label: 'Concluir',
+                              isActive: _isCompleted,
+                              onTap: () {
+                                setState(() {
+                                  _isCompleted = !_isCompleted;
+                                });
+                              },
+                            ),
+                          ],
+                        ),
+                      ),
+                      const SizedBox(height: 24),
 
-                // Complementary Materials
-                if (widget.lesson.complementaryMaterials.isNotEmpty)
-                  _buildComplementaryMaterials(),
-                const SizedBox(height: 24),
+                      // Comments Section Placeholder
+                      Container(
+                        padding: const EdgeInsets.all(16),
+                        decoration: BoxDecoration(
+                          color: AyaColors.lavenderSoft30,
+                          borderRadius: BorderRadius.circular(12),
+                          border: Border.all(
+                            color: AyaColors.textPrimary40,
+                          ),
+                        ),
+                        child: Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            Row(
+                              children: [
+                                const Icon(
+                                  Icons.chat_bubble_outline,
+                                  color: AyaColors.textPrimary,
+                                ),
+                                const SizedBox(width: 8),
+                                Text(
+                                  'Comentários',
+                                  style: Theme.of(context)
+                                      .textTheme
+                                      .titleLarge
+                                      ?.copyWith(
+                                        color: AyaColors.textPrimary,
+                                        fontWeight: FontWeight.bold,
+                                      ),
+                                ),
+                              ],
+                            ),
+                            const SizedBox(height: 16),
+                            const Center(
+                              child: Text(
+                                'Comentários em desenvolvimento',
+                                style: TextStyle(
+                                  color: AyaColors.textPrimary60,
+                                  fontStyle: FontStyle.italic,
+                                ),
+                              ),
+                            ),
+                          ],
+                        ),
+                      ),
+                      const SizedBox(height: 24),
 
-                // Next Lesson
-                if (widget.lesson.nextLesson != null) _buildNextLesson(),
-                const SizedBox(height: 24),
+                      // Complementary Materials
+                      if (widget.lesson.complementaryMaterials.isNotEmpty) ...[
+                        Text(
+                          'Materiais Complementares',
+                          style:
+                              Theme.of(context).textTheme.titleLarge?.copyWith(
+                                    color: AyaColors.textPrimary,
+                                    fontWeight: FontWeight.bold,
+                                  ),
+                        ),
+                        const SizedBox(height: 16),
+                        ...widget.lesson.complementaryMaterials.map((material) {
+                          return Card(
+                            margin: const EdgeInsets.only(bottom: 12),
+                            color: AyaColors.lavenderSoft30,
+                            shape: RoundedRectangleBorder(
+                              borderRadius: BorderRadius.circular(12),
+                              side: BorderSide(
+                                color: AyaColors.textPrimary40,
+                              ),
+                            ),
+                            child: ListTile(
+                              leading: Icon(
+                                _getFileTypeIcon(material.fileType),
+                                color: AyaColors.textPrimary,
+                              ),
+                              title: Text(
+                                material.name,
+                                style: Theme.of(context)
+                                    .textTheme
+                                    .bodyLarge
+                                    ?.copyWith(
+                                      color: AyaColors.textPrimary,
+                                      fontWeight: FontWeight.w500,
+                                    ),
+                              ),
+                              subtitle: material.size != null
+                                  ? Text(
+                                      material.size!,
+                                      style: Theme.of(context)
+                                          .textTheme
+                                          .bodySmall
+                                          ?.copyWith(
+                                            color: AyaColors.textPrimary60,
+                                          ),
+                                    )
+                                  : null,
+                              trailing: IconButton(
+                                icon: const Icon(
+                                  Icons.download_outlined,
+                                  color: AyaColors.turquoise,
+                                ),
+                                onPressed: () {
+                                  // TODO: Implement download
+                                },
+                              ),
+                            ),
+                          );
+                        }),
+                      ],
 
-                // Comments Section
-                _buildCommentsSection(),
+                      // Next Lesson
+                      if (widget.lesson.nextLesson != null) ...[
+                        const SizedBox(height: 24),
+                        Text(
+                          'Próxima Aula',
+                          style:
+                              Theme.of(context).textTheme.titleLarge?.copyWith(
+                                    color: AyaColors.textPrimary,
+                                    fontWeight: FontWeight.bold,
+                                  ),
+                        ),
+                        const SizedBox(height: 16),
+                        Card(
+                          color: AyaColors.lavenderSoft30,
+                          shape: RoundedRectangleBorder(
+                            borderRadius: BorderRadius.circular(12),
+                            side: BorderSide(
+                              color: AyaColors.textPrimary40,
+                            ),
+                          ),
+                          child: InkWell(
+                            onTap: () {
+                              Navigator.push(
+                                context,
+                                MaterialPageRoute(
+                                  builder: (context) => LessonPage(
+                                      lesson: widget.lesson.nextLesson!),
+                                ),
+                              );
+                            },
+                            borderRadius: BorderRadius.circular(12),
+                            child: Padding(
+                              padding: const EdgeInsets.all(16),
+                              child: Row(
+                                children: [
+                                  Icon(
+                                    _getContentTypeIcon(),
+                                    color: AyaColors.turquoise,
+                                  ),
+                                  const SizedBox(width: 16),
+                                  Expanded(
+                                    child: Column(
+                                      crossAxisAlignment:
+                                          CrossAxisAlignment.start,
+                                      children: [
+                                        Text(
+                                          widget.lesson.nextLesson!.title,
+                                          style: Theme.of(context)
+                                              .textTheme
+                                              .titleMedium
+                                              ?.copyWith(
+                                                color: AyaColors.textPrimary,
+                                                fontWeight: FontWeight.w500,
+                                              ),
+                                          maxLines: 2,
+                                          overflow: TextOverflow.ellipsis,
+                                        ),
+                                        const SizedBox(height: 4),
+                                        Row(
+                                          children: [
+                                            Icon(
+                                              _getContentTypeIcon(),
+                                              size: 16,
+                                              color: AyaColors.textPrimary60,
+                                            ),
+                                            const SizedBox(width: 4),
+                                            Text(
+                                              widget
+                                                  .lesson.nextLesson!.duration,
+                                              style: Theme.of(context)
+                                                  .textTheme
+                                                  .bodySmall
+                                                  ?.copyWith(
+                                                    color:
+                                                        AyaColors.textPrimary60,
+                                                  ),
+                                            ),
+                                          ],
+                                        ),
+                                      ],
+                                    ),
+                                  ),
+                                ],
+                              ),
+                            ),
+                          ),
+                        ),
+                      ],
+                    ],
+                  ),
+                ),
               ],
             ),
           ),
@@ -193,10 +459,11 @@ class _LessonPageState extends State<LessonPage> {
     return Row(
       mainAxisSize: MainAxisSize.min,
       children: [
-        Icon(
-          icon,
+        AyaPremiumIcon(
+          icon: icon,
           size: 16,
-          color: AyaColors.textPrimary60,
+          borderRadius: 8,
+          padding: const EdgeInsets.all(4),
         ),
         const SizedBox(width: 4),
         Text(
@@ -209,269 +476,10 @@ class _LessonPageState extends State<LessonPage> {
     );
   }
 
-  Widget _buildQuickActions() {
-    return Row(
-      mainAxisAlignment: MainAxisAlignment.spaceAround,
-      children: [
-        _buildQuickActionButton(
-          icon: Icons.favorite_border,
-          label: 'Curtir',
-          onTap: () {
-            setState(() => _isLiked = !_isLiked);
-          },
-        ),
-        _buildQuickActionButton(
-          icon: Icons.playlist_add_outlined,
-          label: 'Salvar',
-          onTap: () {
-            // TODO: Implement save to playlist
-          },
-        ),
-        _buildQuickActionButton(
-          icon: Icons.edit_note_outlined,
-          label: 'Anotações',
-          onTap: () {
-            // TODO: Show notes bottom sheet
-          },
-        ),
-        _buildQuickActionButton(
-          icon: _isCompleted ? Icons.check_circle : Icons.check_circle_outline,
-          label: 'Concluir',
-          onTap: () {
-            setState(() => _isCompleted = !_isCompleted);
-          },
-        ),
-      ],
-    );
-  }
-
-  Widget _buildQuickActionButton({
-    required IconData icon,
-    required String label,
-    required VoidCallback onTap,
-  }) {
-    return InkWell(
-      onTap: onTap,
-      borderRadius: BorderRadius.circular(8),
-      child: Padding(
-        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          children: [
-            Icon(
-              icon,
-              color: AyaColors.textPrimary,
-            ),
-            const SizedBox(height: 4),
-            Text(
-              label,
-              style: Theme.of(context).textTheme.bodySmall?.copyWith(
-                    color: AyaColors.textPrimary60,
-                  ),
-            ),
-          ],
-        ),
-      ),
-    );
-  }
-
-  Widget _buildComplementaryMaterials() {
-    return Column(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: [
-        Text(
-          'Materiais para Download',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
-              ),
-        ),
-        const SizedBox(height: 16),
-        ...widget.lesson.complementaryMaterials.map((material) {
-          return Container(
-            margin: const EdgeInsets.only(bottom: 12),
-            padding: const EdgeInsets.all(12),
-            decoration: BoxDecoration(
-              color: AyaColors.lavenderSoft,
-              borderRadius: BorderRadius.circular(12),
-            ),
-            child: Row(
-              children: [
-                Icon(
-                  _getFileTypeIcon(material.fileType),
-                  color: AyaColors.textPrimary,
-                ),
-                const SizedBox(width: 12),
-                Expanded(
-                  child: Column(
-                    crossAxisAlignment: CrossAxisAlignment.start,
-                    children: [
-                      Text(
-                        material.name,
-                        style: Theme.of(context).textTheme.bodyLarge?.copyWith(
-                              color: AyaColors.textPrimary,
-                              fontWeight: FontWeight.w500,
-                            ),
-                      ),
-                      if (material.size != null)
-                        Text(
-                          material.size!,
-                          style:
-                              Theme.of(context).textTheme.bodySmall?.copyWith(
-                                    color: AyaColors.textPrimary60,
-                                  ),
-                        ),
-                    ],
-                  ),
-                ),
-                IconButton(
-                  icon: const Icon(
-                    Icons.download_outlined,
-                    color: AyaColors.turquoise,
-                  ),
-                  onPressed: () {
-                    // TODO: Implement download
-                  },
-                ),
-              ],
-            ),
-          );
-        }).toList(),
-      ],
-    );
-  }
-
-  Widget _buildNextLesson() {
-    final nextLesson = widget.lesson.nextLesson!;
-    return Column(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: [
-        Text(
-          'Próxima Aula',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
-              ),
-        ),
-        const SizedBox(height: 16),
-        GestureDetector(
-          onTap: () {
-            Navigator.push(
-              context,
-              MaterialPageRoute(
-                builder: (context) => LessonPage(lesson: nextLesson),
-              ),
-            );
-          },
-          child: Container(
-            decoration: BoxDecoration(
-              color: AyaColors.lavenderSoft,
-              borderRadius: BorderRadius.circular(12),
-            ),
-            child: Row(
-              children: [
-                ClipRRect(
-                  borderRadius: const BorderRadius.horizontal(
-                    left: Radius.circular(12),
-                  ),
-                  child: CachedNetworkImage(
-                    imageUrl: nextLesson.thumbnailUrl,
-                    width: 120,
-                    height: 80,
-                    fit: BoxFit.cover,
-                    placeholder: (context, url) => Container(
-                      color: AyaColors.lavenderSoft,
-                      child: const Center(
-                        child: CircularProgressIndicator(
-                          color: AyaColors.turquoise,
-                        ),
-                      ),
-                    ),
-                    errorWidget: (context, url, error) => Container(
-                      color: AyaColors.lavenderSoft,
-                      child: const Icon(
-                        Icons.image_not_supported,
-                        color: AyaColors.textPrimary,
-                      ),
-                    ),
-                  ),
-                ),
-                const SizedBox(width: 16),
-                Expanded(
-                  child: Column(
-                    crossAxisAlignment: CrossAxisAlignment.start,
-                    children: [
-                      Text(
-                        nextLesson.title,
-                        style:
-                            Theme.of(context).textTheme.titleMedium?.copyWith(
-                                  color: AyaColors.textPrimary,
-                                  fontWeight: FontWeight.w500,
-                                ),
-                        maxLines: 2,
-                        overflow: TextOverflow.ellipsis,
-                      ),
-                      const SizedBox(height: 4),
-                      Row(
-                        children: [
-                          Icon(
-                            _getContentTypeIcon(),
-                            size: 16,
-                            color: AyaColors.textPrimary60,
-                          ),
-                          const SizedBox(width: 4),
-                          Text(
-                            nextLesson.duration,
-                            style:
-                                Theme.of(context).textTheme.bodySmall?.copyWith(
-                                      color: AyaColors.textPrimary60,
-                                    ),
-                          ),
-                        ],
-                      ),
-                    ],
-                  ),
-                ),
-                const Icon(
-                  Icons.arrow_forward_ios,
-                  color: AyaColors.textPrimary60,
-                  size: 16,
-                ),
-              ],
-            ),
-          ),
-        ),
-      ],
-    );
-  }
-
-  Widget _buildCommentsSection() {
-    return Column(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: [
-        Text(
-          'Comentários',
-          style: Theme.of(context).textTheme.titleLarge?.copyWith(
-                color: AyaColors.textPrimary,
-                fontWeight: FontWeight.bold,
-              ),
-        ),
-        const SizedBox(height: 16),
-        // TODO: Implement comments list
-        const Center(
-          child: Text('Comentários em desenvolvimento'),
-        ),
-      ],
-    );
-  }
-
-  void _showMoreOptions(BuildContext context) {
+  void _showOptions() {
     showModalBottomSheet(
       context: context,
-      backgroundColor: AyaColors.surface,
-      shape: const RoundedRectangleBorder(
-        borderRadius: BorderRadius.vertical(top: Radius.circular(16)),
-      ),
+      backgroundColor: Colors.transparent,
       builder: (context) {
         return SafeArea(
           child: Column(
@@ -517,15 +525,17 @@ class _LessonPageState extends State<LessonPage> {
   }
 
   IconData _getContentTypeIcon() {
-    switch (widget.lesson.contentType) {
+    switch (widget.lesson.nextLesson!.contentType) {
       case ContentType.video:
-        return Icons.play_circle_outline;
+        return AyaIcons.video;
       case ContentType.audio:
-        return Icons.headphones_outlined;
+        return AyaIcons.audio;
       case ContentType.richText:
-        return Icons.article_outlined;
+        return AyaIcons.article;
       case ContentType.pdf:
-        return Icons.picture_as_pdf_outlined;
+        return AyaIcons.article;
+      default:
+        return AyaIcons.article;
     }
   }
 
@@ -559,4 +569,41 @@ class _LessonPageState extends State<LessonPage> {
         return Icons.insert_drive_file_outlined;
     }
   }
+
+  Widget _buildActionButton({
+    required IconData icon,
+    required String label,
+    required VoidCallback onTap,
+    bool isActive = false,
+  }) {
+    return InkWell(
+      onTap: onTap,
+      borderRadius: BorderRadius.circular(8),
+      child: Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            AyaPremiumIcon(
+              icon: icon,
+              isActive: isActive,
+              size: 22,
+              borderRadius: 8,
+              padding: const EdgeInsets.all(4),
+            ),
+            const SizedBox(height: 4),
+            Text(
+              label,
+              style: TextStyle(
+                color: isActive
+                    ? AyaColors.lavenderVibrant
+                    : AyaColors.textPrimary,
+                fontSize: 12,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
 }
diff --git a/lib/features/lessons/screens/lessons_list_screen.dart b/lib/features/lessons/screens/lessons_list_screen.dart
index 21b29be..1cac332 100644
--- a/lib/features/lessons/screens/lessons_list_screen.dart
+++ b/lib/features/lessons/screens/lessons_list_screen.dart
@@ -1,8 +1,12 @@
 import 'package:flutter/material.dart';
 import 'package:cached_network_image/cached_network_image.dart';
 import '../../../core/theme/app_theme.dart';
+import '../../../core/theme/glassmorphism.dart';
 import '../models/lesson.dart';
 import 'lesson_page.dart';
+import '../../../core/theme/aya_icons.dart';
+import '../../../widgets/aya_premium_icon.dart';
+import 'package:iconoir_flutter/iconoir_flutter.dart' as iconoir;
 
 class LessonsListScreen extends StatefulWidget {
   const LessonsListScreen({super.key});
@@ -51,18 +55,23 @@ class _LessonsListScreenState extends State<LessonsListScreen> {
       body: Column(
         children: [
           // Filtros
-          Container(
-            height: 60,
-            padding: const EdgeInsets.symmetric(horizontal: 16),
-            child: ListView(
-              scrollDirection: Axis.horizontal,
-              children: [
-                _buildFilterChip(null, 'Todos'),
-                _buildFilterChip(ContentType.video, 'Vídeos'),
-                _buildFilterChip(ContentType.audio, 'Áudios'),
-                _buildFilterChip(ContentType.richText, 'Artigos'),
-                _buildFilterChip(ContentType.pdf, 'PDFs'),
-              ],
+          Glassmorphism(
+            borderRadius: 0,
+            blurRadius: 10,
+            padding: const EdgeInsets.symmetric(vertical: 8),
+            child: Container(
+              height: 60,
+              padding: const EdgeInsets.symmetric(horizontal: 16),
+              child: ListView(
+                scrollDirection: Axis.horizontal,
+                children: [
+                  _buildFilterChip(null, 'Todos'),
+                  _buildFilterChip(ContentType.video, 'Vídeos'),
+                  _buildFilterChip(ContentType.audio, 'Áudios'),
+                  _buildFilterChip(ContentType.richText, 'Artigos'),
+                  _buildFilterChip(ContentType.pdf, 'PDFs'),
+                ],
+              ),
             ),
           ),
 
@@ -84,46 +93,102 @@ class _LessonsListScreenState extends State<LessonsListScreen> {
 
   Widget _buildFilterChip(ContentType? type, String label) {
     final isSelected = _selectedFilter == type;
+    Widget iconoirIcon;
+    switch (type) {
+      case ContentType.video:
+        iconoirIcon = const iconoir.VideoCamera();
+        break;
+      case ContentType.audio:
+        iconoirIcon = const iconoir.MusicDoubleNote();
+        break;
+      case ContentType.richText:
+        iconoirIcon = const iconoir.Book();
+        break;
+      case ContentType.pdf:
+        iconoirIcon = const iconoir.PageSearch();
+        break;
+      default:
+        iconoirIcon = const iconoir.Filter();
+    }
     return Padding(
       padding: const EdgeInsets.only(right: 8),
-      child: FilterChip(
-        selected: isSelected,
-        label: Text(
-          label,
-          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
-                color: isSelected ? AyaColors.surface : AyaColors.textPrimary,
-                fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,
-              ),
-        ),
-        backgroundColor: AyaColors.lavenderSoft,
-        selectedColor: AyaColors.turquoise,
-        checkmarkColor: AyaColors.surface,
-        onSelected: (selected) {
+      child: GestureDetector(
+        onTap: () {
           setState(() {
-            _selectedFilter = selected ? type : null;
+            _selectedFilter = type;
           });
         },
+        child: Glassmorphism(
+          child: Container(
+            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+            decoration: BoxDecoration(
+              color: isSelected
+                  ? AyaColors.lavenderVibrant.withOpacity(0.12)
+                  : Colors.transparent,
+              borderRadius: BorderRadius.circular(24),
+              border: Border.all(
+                color: isSelected
+                    ? AyaColors.lavenderVibrant
+                    : AyaColors.textPrimary40,
+                width: 1.5,
+              ),
+            ),
+            child: Row(
+              mainAxisSize: MainAxisSize.min,
+              children: [
+                AyaPremiumIcon(
+                  customIcon: iconoirIcon,
+                  isActive: isSelected,
+                  size: 18,
+                  borderRadius: 12,
+                  padding: const EdgeInsets.all(2),
+                ),
+                const SizedBox(width: 8),
+                Text(
+                  label,
+                  style: Theme.of(context).textTheme.bodyMedium?.copyWith(
+                        color: isSelected
+                            ? AyaColors.lavenderVibrant
+                            : AyaColors.textPrimary,
+                        fontWeight:
+                            isSelected ? FontWeight.w600 : FontWeight.normal,
+                      ),
+                ),
+              ],
+            ),
+          ),
+        ),
       ),
     );
   }
 
   Widget _buildLessonCard(Lesson lesson) {
-    return Card(
-      margin: const EdgeInsets.only(bottom: 16),
-      shape: RoundedRectangleBorder(
-        borderRadius: BorderRadius.circular(16),
-      ),
-      color: AyaColors.surface,
-      child: InkWell(
-        onTap: () {
-          Navigator.push(
-            context,
-            MaterialPageRoute(
-              builder: (context) => LessonPage(lesson: lesson),
-            ),
-          );
-        },
-        borderRadius: BorderRadius.circular(16),
+    Widget iconoirIcon;
+    switch (lesson.contentType) {
+      case ContentType.video:
+        iconoirIcon = const iconoir.VideoCamera();
+        break;
+      case ContentType.audio:
+        iconoirIcon = const iconoir.MusicDoubleNote();
+        break;
+      case ContentType.richText:
+        iconoirIcon = const iconoir.Book();
+        break;
+      case ContentType.pdf:
+        iconoirIcon = const iconoir.PageSearch();
+        break;
+      default:
+        iconoirIcon = const iconoir.Book();
+    }
+    return GestureDetector(
+      onTap: () {
+        Navigator.of(context).push(
+          MaterialPageRoute(
+            builder: (context) => LessonPage(lesson: lesson),
+          ),
+        );
+      },
+      child: Glassmorphism(
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: [
@@ -141,51 +206,86 @@ class _LessonsListScreenState extends State<LessonsListScreen> {
                   color: AyaColors.lavenderSoft,
                   child: const Center(
                     child: CircularProgressIndicator(
-                      color: AyaColors.turquoise,
+                      color: AyaColors.lavenderVibrant,
                     ),
                   ),
                 ),
                 errorWidget: (context, url, error) => Container(
                   height: 200,
                   color: AyaColors.lavenderSoft,
-                  child: const Icon(
-                    Icons.image_not_supported,
-                    color: AyaColors.textPrimary,
+                  child: AyaPremiumIcon(
+                    customIcon: iconoir.Book(),
                     size: 48,
+                    borderRadius: 16,
+                    padding: const EdgeInsets.all(8),
                   ),
                 ),
               ),
             ),
-
             // Content
             Padding(
               padding: const EdgeInsets.all(16),
               child: Column(
                 crossAxisAlignment: CrossAxisAlignment.start,
                 children: [
-                  // Title and Type
                   Row(
                     children: [
-                      Icon(
-                        _getContentTypeIcon(lesson.contentType),
-                        size: 20,
-                        color: AyaColors.turquoise,
+                      AyaPremiumIcon(
+                        customIcon: iconoirIcon,
+                        isActive: lesson.isPremium,
+                        size: 18,
+                        borderRadius: 12,
+                        padding: const EdgeInsets.all(2),
                       ),
                       const SizedBox(width: 8),
                       Text(
-                        _getContentTypeText(lesson.contentType),
+                        _getContentTypeLabel(lesson.contentType),
                         style: Theme.of(context).textTheme.bodySmall?.copyWith(
                               color: AyaColors.textPrimary60,
                             ),
                       ),
+                      const Spacer(),
+                      if (lesson.isPremium)
+                        Container(
+                          padding: const EdgeInsets.symmetric(
+                            horizontal: 8,
+                            vertical: 4,
+                          ),
+                          decoration: BoxDecoration(
+                            color: AyaColors.lavenderVibrant.withOpacity(0.15),
+                            borderRadius: BorderRadius.circular(12),
+                          ),
+                          child: Row(
+                            children: [
+                              AyaPremiumIcon(
+                                customIcon: const iconoir.Crown(),
+                                isActive: true,
+                                size: 16,
+                                borderRadius: 8,
+                                padding: EdgeInsets.all(2),
+                              ),
+                              const SizedBox(width: 4),
+                              Text(
+                                'Premium',
+                                style: Theme.of(context)
+                                    .textTheme
+                                    .bodySmall
+                                    ?.copyWith(
+                                      color: AyaColors.lavenderVibrant,
+                                      fontWeight: FontWeight.w600,
+                                    ),
+                              ),
+                            ],
+                          ),
+                        ),
                     ],
                   ),
-                  const SizedBox(height: 8),
+                  const SizedBox(height: 12),
                   Text(
                     lesson.title,
                     style: Theme.of(context).textTheme.titleLarge?.copyWith(
                           color: AyaColors.textPrimary,
-                          fontWeight: FontWeight.bold,
+                          fontWeight: FontWeight.w600,
                         ),
                   ),
                   const SizedBox(height: 8),
@@ -198,38 +298,24 @@ class _LessonsListScreenState extends State<LessonsListScreen> {
                     overflow: TextOverflow.ellipsis,
                   ),
                   const SizedBox(height: 16),
-
-                  // Metadata
                   Row(
                     children: [
-                      Icon(
-                        Icons.timer_outlined,
-                        size: 16,
-                        color: AyaColors.textPrimary60,
+                      _buildMetadataItem(
+                        customIcon: const iconoir.Clock(),
+                        text: lesson.duration,
                       ),
-                      const SizedBox(width: 4),
-                      Text(
-                        lesson.duration,
-                        style: Theme.of(context).textTheme.bodySmall?.copyWith(
-                              color: AyaColors.textPrimary60,
-                            ),
+                      const SizedBox(width: 16),
+                      _buildMetadataItem(
+                        customIcon: const iconoir.User(),
+                        text: '${lesson.studentsCount} alunos',
+                      ),
+                      const Spacer(),
+                      AyaPremiumIcon(
+                        customIcon: const iconoir.ArrowRight(),
+                        size: 16,
+                        borderRadius: 8,
+                        padding: EdgeInsets.all(2),
                       ),
-                      if (lesson.difficulty != null) ...[
-                        const SizedBox(width: 16),
-                        Icon(
-                          Icons.signal_cellular_alt_outlined,
-                          size: 16,
-                          color: AyaColors.textPrimary60,
-                        ),
-                        const SizedBox(width: 4),
-                        Text(
-                          lesson.difficulty!,
-                          style:
-                              Theme.of(context).textTheme.bodySmall?.copyWith(
-                                    color: AyaColors.textPrimary60,
-                                  ),
-                        ),
-                      ],
                     ],
                   ),
                 ],
@@ -241,20 +327,33 @@ class _LessonsListScreenState extends State<LessonsListScreen> {
     );
   }
 
-  IconData _getContentTypeIcon(ContentType type) {
-    switch (type) {
-      case ContentType.video:
-        return Icons.play_circle_outline;
-      case ContentType.audio:
-        return Icons.headphones_outlined;
-      case ContentType.richText:
-        return Icons.article_outlined;
-      case ContentType.pdf:
-        return Icons.picture_as_pdf_outlined;
-    }
+  Widget _buildMetadataItem({
+    IconData? icon,
+    Widget? customIcon,
+    required String text,
+  }) {
+    return Row(
+      mainAxisSize: MainAxisSize.min,
+      children: [
+        AyaPremiumIcon(
+          icon: icon,
+          customIcon: customIcon,
+          size: 16,
+          borderRadius: 8,
+          padding: EdgeInsets.all(2),
+        ),
+        const SizedBox(width: 4),
+        Text(
+          text,
+          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
+                color: AyaColors.textPrimary60,
+              ),
+        ),
+      ],
+    );
   }
 
-  String _getContentTypeText(ContentType type) {
+  String _getContentTypeLabel(ContentType type) {
     switch (type) {
       case ContentType.video:
         return 'Vídeo';
diff --git a/lib/features/lessons/widgets/aya_pdf_viewer.dart b/lib/features/lessons/widgets/aya_pdf_viewer.dart
index 43a41d2..206ad43 100644
--- a/lib/features/lessons/widgets/aya_pdf_viewer.dart
+++ b/lib/features/lessons/widgets/aya_pdf_viewer.dart
@@ -14,6 +14,8 @@ class _AyaPdfViewerState extends State<AyaPdfViewer> {
   late PdfViewerController _pdfViewController;
   bool _isReady = false;
   String? _errorMessage;
+  int _retryCount = 0;
+  static const int maxRetries = 3;
 
   @override
   void initState() {
@@ -27,6 +29,16 @@ class _AyaPdfViewerState extends State<AyaPdfViewer> {
     super.dispose();
   }
 
+  void _retryLoading() {
+    if (_retryCount < maxRetries) {
+      setState(() {
+        _errorMessage = null;
+        _isReady = false;
+        _retryCount++;
+      });
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     return Container(
@@ -37,29 +49,32 @@ class _AyaPdfViewerState extends State<AyaPdfViewer> {
       ),
       child: Stack(
         children: [
-          ClipRRect(
-            borderRadius: BorderRadius.circular(16),
-            child: SfPdfViewer.network(
-              widget.pdfUrl,
-              controller: _pdfViewController,
-              enableDoubleTapZooming: true,
-              enableTextSelection: true,
-              pageLayoutMode: PdfPageLayoutMode.continuous,
-              scrollDirection: PdfScrollDirection.vertical,
-              onDocumentLoaded: (PdfDocumentLoadedDetails details) {
-                setState(() {
-                  _isReady = true;
-                  _errorMessage = null;
-                });
-              },
-              onDocumentLoadFailed: (PdfDocumentLoadFailedDetails details) {
-                setState(() {
-                  _errorMessage = 'Erro ao carregar o PDF: ${details.error}';
-                  _isReady = false;
-                });
-              },
+          if (_errorMessage == null)
+            ClipRRect(
+              borderRadius: BorderRadius.circular(16),
+              child: SfPdfViewer.network(
+                widget.pdfUrl,
+                controller: _pdfViewController,
+                enableDoubleTapZooming: true,
+                enableTextSelection: true,
+                pageLayoutMode: PdfPageLayoutMode.continuous,
+                scrollDirection: PdfScrollDirection.vertical,
+                onDocumentLoaded: (PdfDocumentLoadedDetails details) {
+                  setState(() {
+                    _isReady = true;
+                    _errorMessage = null;
+                    _retryCount = 0;
+                  });
+                },
+                onDocumentLoadFailed: (PdfDocumentLoadFailedDetails details) {
+                  setState(() {
+                    _errorMessage =
+                        'Não foi possível carregar o PDF. ${_retryCount < maxRetries ? 'Tentativa ${_retryCount + 1} de $maxRetries.' : ''}';
+                    _isReady = false;
+                  });
+                },
+              ),
             ),
-          ),
           if (!_isReady && _errorMessage == null)
             const Center(
               child: CircularProgressIndicator(color: AyaColors.turquoise),
@@ -84,6 +99,18 @@ class _AyaPdfViewerState extends State<AyaPdfViewer> {
                           ),
                       textAlign: TextAlign.center,
                     ),
+                    if (_retryCount < maxRetries) ...[
+                      const SizedBox(height: 16),
+                      ElevatedButton.icon(
+                        onPressed: _retryLoading,
+                        icon: const Icon(Icons.refresh),
+                        label: const Text('Tentar Novamente'),
+                        style: ElevatedButton.styleFrom(
+                          backgroundColor: AyaColors.turquoise,
+                          foregroundColor: AyaColors.textPrimary,
+                        ),
+                      ),
+                    ],
                   ],
                 ),
               ),
diff --git a/lib/features/lessons/widgets/aya_rich_text_viewer.dart b/lib/features/lessons/widgets/aya_rich_text_viewer.dart
index 3f6bc97..5e09e4a 100644
--- a/lib/features/lessons/widgets/aya_rich_text_viewer.dart
+++ b/lib/features/lessons/widgets/aya_rich_text_viewer.dart
@@ -55,88 +55,97 @@ class AyaRichTextViewer extends StatelessWidget {
           Expanded(
             child: SingleChildScrollView(
               padding: const EdgeInsets.all(16),
-              child: Html(
-                data: content.isNotEmpty ? content : 'Conteúdo não disponível',
-                style: {
-                  'body': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(16),
-                    fontFamily: 'Roboto',
-                  ),
-                  'h1': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(32),
-                    fontWeight: FontWeight.bold,
-                    fontFamily: 'Playfair Display',
-                  ),
-                  'h2': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(28),
-                    fontWeight: FontWeight.bold,
-                    fontFamily: 'Playfair Display',
-                  ),
-                  'h3': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(24),
-                    fontWeight: FontWeight.bold,
-                    fontFamily: 'Roboto',
-                  ),
-                  'p': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(16),
-                    fontFamily: 'Roboto',
-                  ),
-                  'blockquote': Style(
-                    color: AyaColors.textPrimary40,
-                    fontStyle: FontStyle.italic,
-                    fontSize: FontSize(16),
-                    fontFamily: 'Roboto',
-                  ),
-                  'code': Style(
-                    color: AyaColors.turquoise,
-                    backgroundColor: AyaColors.surface,
-                    fontFamily: 'monospace',
-                    fontSize: FontSize(14),
-                  ),
-                  'pre': Style(
-                    backgroundColor: AyaColors.surface,
-                    padding: HtmlPaddings.all(8),
-                  ),
-                  'ul': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(16),
-                    fontFamily: 'Roboto',
-                  ),
-                  'ol': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(16),
-                    fontFamily: 'Roboto',
-                  ),
-                  'table': Style(
-                    border: Border.all(color: AyaColors.textPrimary40),
-                    padding: HtmlPaddings.all(8),
-                  ),
-                  'th': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(18),
-                    fontWeight: FontWeight.bold,
-                    fontFamily: 'Roboto',
-                  ),
-                  'td': Style(
-                    color: AyaColors.textPrimary,
-                    fontSize: FontSize(14),
-                    fontFamily: 'Roboto',
-                  ),
-                  'hr': Style(
-                    border: Border(
-                      top: BorderSide(
-                        color: AyaColors.textPrimary40,
-                        width: 1,
+              child: content.isEmpty
+                  ? Center(
+                      child: Text(
+                        'Conteúdo não disponível.',
+                        style: Theme.of(context).textTheme.bodyMedium?.copyWith(
+                              color: AyaColors.textPrimary,
+                            ),
                       ),
+                    )
+                  : Html(
+                      data: content,
+                      style: {
+                        'body': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(16),
+                          fontFamily: 'Roboto',
+                        ),
+                        'h1': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(32),
+                          fontWeight: FontWeight.bold,
+                          fontFamily: 'Playfair Display',
+                        ),
+                        'h2': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(28),
+                          fontWeight: FontWeight.bold,
+                          fontFamily: 'Playfair Display',
+                        ),
+                        'h3': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(24),
+                          fontWeight: FontWeight.bold,
+                          fontFamily: 'Roboto',
+                        ),
+                        'p': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(16),
+                          fontFamily: 'Roboto',
+                        ),
+                        'blockquote': Style(
+                          color: AyaColors.textPrimary40,
+                          fontStyle: FontStyle.italic,
+                          fontSize: FontSize(16),
+                          fontFamily: 'Roboto',
+                        ),
+                        'code': Style(
+                          color: AyaColors.turquoise,
+                          backgroundColor: AyaColors.surface,
+                          fontFamily: 'monospace',
+                          fontSize: FontSize(14),
+                        ),
+                        'pre': Style(
+                          backgroundColor: AyaColors.surface,
+                          padding: HtmlPaddings.all(8),
+                        ),
+                        'ul': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(16),
+                          fontFamily: 'Roboto',
+                        ),
+                        'ol': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(16),
+                          fontFamily: 'Roboto',
+                        ),
+                        'table': Style(
+                          border: Border.all(color: AyaColors.textPrimary40),
+                          padding: HtmlPaddings.all(8),
+                        ),
+                        'th': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(18),
+                          fontWeight: FontWeight.bold,
+                          fontFamily: 'Roboto',
+                        ),
+                        'td': Style(
+                          color: AyaColors.textPrimary,
+                          fontSize: FontSize(14),
+                          fontFamily: 'Roboto',
+                        ),
+                        'hr': Style(
+                          border: Border(
+                            top: BorderSide(
+                              color: AyaColors.textPrimary40,
+                              width: 1,
+                            ),
+                          ),
+                        ),
+                      },
                     ),
-                  ),
-                },
-              ),
             ),
           ),
         ],
diff --git a/lib/main.dart b/lib/main.dart
index 8c689e7..3e400c1 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,7 +1,13 @@
 import 'package:flutter/material.dart';
 import 'package:supabase_flutter/supabase_flutter.dart';
+import 'package:go_router/go_router.dart';
 import 'core/routes/app_router.dart';
 import 'core/theme/app_theme.dart';
+import 'features/auth/services/auth_service.dart';
+import 'features/dashboard/screens/dashboard_screen.dart';
+import 'features/lessons/screens/lessons_list_screen.dart';
+import 'features/lessons/screens/lesson_page.dart';
+import 'features/lessons/models/lesson.dart';
 
 void main() async {
   WidgetsFlutterBinding.ensureInitialized();
@@ -19,11 +25,71 @@ class MyApp extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    return MaterialApp(
+    final authService = AuthService();
+
+    final router = GoRouter(
+      initialLocation: '/dashboard',
+      routes: [
+        GoRoute(
+          path: '/dashboard',
+          builder: (context, state) => DashboardScreen(
+            authService: authService,
+          ),
+        ),
+        GoRoute(
+          path: '/content/modules',
+          builder: (context, state) => const LessonsListScreen(),
+        ),
+        GoRoute(
+          path: '/lesson/:id',
+          builder: (context, state) {
+            final lesson = state.extra as Lesson;
+            return LessonPage(lesson: lesson);
+          },
+        ),
+        GoRoute(
+          path: '/community',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Comunidade')),
+          ),
+        ),
+        GoRoute(
+          path: '/chatbot',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Aya Chat')),
+          ),
+        ),
+        GoRoute(
+          path: '/admin',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Admin')),
+          ),
+        ),
+        GoRoute(
+          path: '/settings',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Configurações')),
+          ),
+        ),
+        GoRoute(
+          path: '/help',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Ajuda')),
+          ),
+        ),
+        GoRoute(
+          path: '/login',
+          builder: (context, state) => const Scaffold(
+            body: Center(child: Text('Login')),
+          ),
+        ),
+      ],
+    );
+
+    return MaterialApp.router(
       title: 'AYA',
       theme: AyaTheme.theme,
-      onGenerateRoute: AppRouter.generateRoute,
-      initialRoute: AppRouter.dashboard,
+      routerConfig: router,
     );
   }
 }
diff --git a/lib/routes.dart b/lib/routes.dart
index 8cf4be1..7ed6f38 100644
--- a/lib/routes.dart
+++ b/lib/routes.dart
@@ -1,14 +1,16 @@
 import 'package:flutter/material.dart';
+import 'package:go_router/go_router.dart';
 import 'features/auth/screens/login_screen.dart';
 import 'features/auth/screens/register_screen.dart';
 import 'features/auth/screens/forgot_password_page.dart';
 import 'features/dashboard/screens/dashboard_screen.dart';
+import 'features/lessons/screens/lessons_list_screen.dart';
+import 'features/lessons/screens/lesson_page.dart';
 import 'features/admin/screens/admin_dashboard_screen.dart';
-import 'features/admin/screens/admin_users_screen.dart';
-import 'features/admin/screens/admin_content_screen.dart';
-import 'features/admin/screens/admin_gamification_screen.dart';
 import 'features/admin/screens/admin_analytics_screen.dart';
 import 'features/admin/screens/admin_settings_screen.dart';
+import 'features/dashboard/widgets/aya_drawer.dart';
+import 'features/auth/services/auth_service.dart';
 
 class Routes {
   static const String login = '/login';
@@ -22,18 +24,60 @@ class Routes {
   static const String adminAnalytics = '/admin/analytics';
   static const String adminSettings = '/admin/settings';
 
-  static Map<String, WidgetBuilder> getRoutes() {
-    return {
-      login: (context) => const LoginScreen(),
-      register: (context) => const RegisterScreen(),
-      forgotPassword: (context) => const ForgotPasswordPage(),
-      dashboard: (context) => const DashboardScreen(),
-      adminDashboard: (context) => const AdminDashboardScreen(),
-      adminUsers: (context) => const AdminUsersScreen(),
-      adminContent: (context) => const AdminContentScreen(),
-      adminGamification: (context) => const AdminGamificationScreen(),
-      adminAnalytics: (context) => const AdminAnalyticsScreen(),
-      adminSettings: (context) => const AdminSettingsScreen(),
-    };
-  }
+  static final router = GoRouter(
+    initialLocation: '/login',
+    routes: [
+      GoRoute(
+        path: '/login',
+        builder: (context, state) => const LoginScreen(),
+      ),
+      GoRoute(
+        path: '/register',
+        builder: (context, state) => const RegisterScreen(),
+      ),
+      GoRoute(
+        path: '/forgot-password',
+        builder: (context, state) => const ForgotPasswordPage(),
+      ),
+      GoRoute(
+        path: '/dashboard',
+        builder: (context, state) {
+          final authService = AuthService();
+          return DashboardScreen(
+            authService: authService,
+          );
+        },
+      ),
+      GoRoute(
+        path: '/admin/dashboard',
+        builder: (context, state) => const AdminDashboardScreen(),
+      ),
+      GoRoute(
+        path: '/admin/users',
+        builder: (context, state) => const Scaffold(
+          body: Center(child: Text('Admin Users Screen - TODO')),
+        ),
+      ),
+      GoRoute(
+        path: '/admin/content',
+        builder: (context, state) => const Scaffold(
+          body: Center(child: Text('Admin Content Screen - TODO')),
+        ),
+      ),
+      GoRoute(
+        path: '/admin/gamification',
+        builder: (context, state) => const Scaffold(
+          body: Center(child: Text('Admin Gamification Screen - TODO')),
+        ),
+      ),
+      GoRoute(
+        path: '/admin/analytics',
+        builder: (context, state) => const AdminAnalyticsScreen(),
+      ),
+      GoRoute(
+        path: '/admin/settings',
+        builder: (context, state) => const AdminSettingsScreen(),
+      ),
+    ],
+  );
 }
diff --git a/lib/shared/widgets/gradient_button.dart b/lib/shared/widgets/gradient_button.dart
index 0ccf6fe..aed807a 100644
--- a/lib/shared/widgets/gradient_button.dart
+++ b/lib/shared/widgets/gradient_button.dart
@@ -13,7 +13,7 @@ class GradientButton extends StatelessWidget {
   final EdgeInsetsGeometry padding;
 
   const GradientButton({
-    Key? key,
+    super.key,
     required this.text,
     required this.onPressed,
     this.isLoading = false,
@@ -22,7 +22,7 @@ class GradientButton extends StatelessWidget {
     this.height = 48,
     this.borderRadius = 12,
     this.padding = const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/aya_app_bar.dart b/lib/widgets/aya_app_bar.dart
index bacae96..5f875c5 100644
--- a/lib/widgets/aya_app_bar.dart
+++ b/lib/widgets/aya_app_bar.dart
@@ -18,7 +18,7 @@ class AyaAppBar extends StatelessWidget implements PreferredSizeWidget {
   final PreferredSizeWidget? bottom;
 
   const AyaAppBar({
-    Key? key,
+    super.key,
     required this.title,
     this.actions,
     this.leading,
@@ -26,7 +26,7 @@ class AyaAppBar extends StatelessWidget implements PreferredSizeWidget {
     this.variant = AyaAppBarVariant.primary,
     this.elevation = 0,
     this.bottom,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/aya_avatar.dart b/lib/widgets/aya_avatar.dart
index 7610eaa..48d4f4d 100644
--- a/lib/widgets/aya_avatar.dart
+++ b/lib/widgets/aya_avatar.dart
@@ -23,7 +23,7 @@ class AyaAvatar extends StatelessWidget {
   final Widget? badge;
 
   const AyaAvatar({
-    Key? key,
+    super.key,
     this.imageUrl,
     this.initials,
     this.icon,
@@ -37,11 +37,10 @@ class AyaAvatar extends StatelessWidget {
     this.showBadge = false,
     this.badgeColor,
     this.badge,
-  })  : assert(
+  }) : assert(
           imageUrl != null || initials != null || icon != null,
           'Either imageUrl, initials, or icon must be provided',
-        ),
-        super(key: key);
+        );
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/aya_bottom_nav.dart b/lib/widgets/aya_bottom_nav.dart
index afaf985..699c2e7 100644
--- a/lib/widgets/aya_bottom_nav.dart
+++ b/lib/widgets/aya_bottom_nav.dart
@@ -1,141 +1,103 @@
 import 'package:flutter/material.dart';
-import 'package:app_aya_v2/core/theme/app_theme.dart';
+import 'package:iconoir_flutter/iconoir_flutter.dart' as iconoir;
+import '../core/theme/app_theme.dart';
+import 'aya_premium_icon.dart';
+
+class AyaBottomNavItem {
+  final String label;
+  final Widget iconoirIcon;
+  final Widget selectedIconoirIcon;
+
+  const AyaBottomNavItem({
+    required this.label,
+    required this.iconoirIcon,
+    required this.selectedIconoirIcon,
+  });
+}
 
 class AyaBottomNav extends StatelessWidget {
   final int currentIndex;
   final List<AyaBottomNavItem> items;
-  final ValueChanged<int> onTap;
-  final bool showLabels;
+  final Function(int) onTap;
 
   const AyaBottomNav({
-    Key? key,
+    super.key,
     required this.currentIndex,
     required this.items,
     required this.onTap,
-    this.showLabels = true,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
     return Container(
       decoration: BoxDecoration(
-        gradient: LinearGradient(
-          colors: [
-            AyaColors.background,
-            AyaColors.backgroundGradientEnd,
-          ],
-          begin: Alignment.topCenter,
-          end: Alignment.bottomCenter,
-        ),
-        boxShadow: [
-          BoxShadow(
-            color: AyaColors.overlayDark,
-            blurRadius: 8,
-            offset: const Offset(0, -2),
-          ),
-        ],
-      ),
-      child: SafeArea(
-        child: Padding(
-          padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 8),
-          child: Row(
-            mainAxisAlignment: MainAxisAlignment.spaceAround,
-            children: List.generate(
-              items.length,
-              (index) => _buildNavItem(index),
-            ),
+        color: AyaColors.surface.withValues(alpha: 0.8),
+        border: Border(
+          top: BorderSide(
+            color: AyaColors.lavenderVibrant.withValues(alpha: 0.1),
+            width: 1,
           ),
         ),
       ),
-    );
-  }
-
-  Widget _buildNavItem(int index) {
-    final item = items[index];
-    final isSelected = index == currentIndex;
-
-    return GestureDetector(
-      onTap: () => onTap(index),
-      child: Container(
-        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
-        decoration: BoxDecoration(
-          gradient: isSelected
-              ? LinearGradient(
-                  colors: [
-                    Color.fromRGBO(
-                        AyaColors.lavenderVibrant.r.round(),
-                        AyaColors.lavenderVibrant.g.round(),
-                        AyaColors.lavenderVibrant.b.round(),
-                        0.2),
-                    Color.fromRGBO(
-                        AyaColors.softBlue.r.round(),
-                        AyaColors.softBlue.g.round(),
-                        AyaColors.softBlue.b.round(),
-                        0.2),
-                  ],
-                  begin: Alignment.topLeft,
-                  end: Alignment.bottomRight,
-                )
-              : null,
-          borderRadius: BorderRadius.circular(12),
+      child: BottomNavigationBar(
+        currentIndex: currentIndex,
+        onTap: onTap,
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        type: BottomNavigationBarType.fixed,
+        selectedItemColor: AyaColors.lavenderVibrant,
+        unselectedItemColor: AyaColors.textPrimary,
+        selectedLabelStyle: const TextStyle(
+          fontWeight: FontWeight.w600,
+          fontSize: 12,
+        ),
+        unselectedLabelStyle: const TextStyle(
+          fontWeight: FontWeight.normal,
+          fontSize: 12,
         ),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          children: [
-            Icon(
-              isSelected ? item.selectedIcon : item.icon,
-              color: isSelected ? AyaColors.turquoise : AyaColors.textPrimary50,
+        items: items.asMap().entries.map((entry) {
+          final i = entry.key;
+          final item = entry.value;
+          final isSelected = i == currentIndex;
+          return BottomNavigationBarItem(
+            icon: AyaPremiumIcon(
+              customIcon:
+                  isSelected ? item.selectedIconoirIcon : item.iconoirIcon,
+              isActive: isSelected,
               size: 24,
+              borderRadius: 12,
+              padding: const EdgeInsets.all(8),
             ),
-            if (showLabels) ...[
-              const SizedBox(height: 4),
-              Text(
-                item.label,
-                style: TextStyle(
-                  color: isSelected
-                      ? AyaColors.turquoise
-                      : AyaColors.textPrimary50,
-                  fontSize: 12,
-                  fontWeight: isSelected ? FontWeight.w500 : FontWeight.normal,
-                ),
-              ),
-            ],
-          ],
-        ),
+            label: item.label,
+          );
+        }).toList(),
       ),
     );
   }
 }
 
-class AyaBottomNavItem {
-  final String label;
-  final IconData icon;
-  final IconData selectedIcon;
-
-  const AyaBottomNavItem({
-    required this.label,
-    required this.icon,
-    required this.selectedIcon,
-  });
-}
-
 // Extension to make it easier to create common bottom nav layouts
 extension AyaBottomNavBuilder on AyaBottomNav {
   static List<AyaBottomNavItem> get defaultItems => [
-        const AyaBottomNavItem(
+        AyaBottomNavItem(
           label: 'Home',
-          icon: Icons.home_outlined,
-          selectedIcon: Icons.home,
+          iconoirIcon: const iconoir.Home(),
+          selectedIconoirIcon: const iconoir.Home(),
+        ),
+        AyaBottomNavItem(
+          label: 'Biblioteca',
+          iconoirIcon: const iconoir.Book(),
+          selectedIconoirIcon: const iconoir.Book(),
         ),
-        const AyaBottomNavItem(
-          label: 'Explore',
-          icon: Icons.explore_outlined,
-          selectedIcon: Icons.explore,
+        AyaBottomNavItem(
+          label: 'Comunidade',
+          iconoirIcon: const iconoir.Group(),
+          selectedIconoirIcon: const iconoir.Group(),
         ),
-        const AyaBottomNavItem(
-          label: 'Profile',
-          icon: Icons.person_outline,
-          selectedIcon: Icons.person,
+        AyaBottomNavItem(
+          label: 'Aya Chat',
+          iconoirIcon: const iconoir.ChatBubble(),
+          selectedIconoirIcon: const iconoir.ChatBubble(),
         ),
       ];
 }
diff --git a/lib/widgets/aya_bottom_sheet.dart b/lib/widgets/aya_bottom_sheet.dart
index f9a3968..1a28707 100644
--- a/lib/widgets/aya_bottom_sheet.dart
+++ b/lib/widgets/aya_bottom_sheet.dart
@@ -4,127 +4,42 @@ import 'package:app_aya_v2/core/theme/app_theme.dart';
 enum AyaBottomSheetVariant {
   standard,
   modal,
-  persistent,
 }
 
 class AyaBottomSheet extends StatelessWidget {
   final Widget child;
   final String? title;
   final List<Widget>? actions;
-  final AyaBottomSheetVariant variant;
   final bool showDragHandle;
-  final bool isDismissible;
-  final bool enableDrag;
   final Color? backgroundColor;
   final double? maxHeight;
   final EdgeInsets? padding;
+  final AyaBottomSheetVariant variant;
 
   const AyaBottomSheet({
-    Key? key,
+    super.key,
     required this.child,
     this.title,
     this.actions,
-    this.variant = AyaBottomSheetVariant.standard,
     this.showDragHandle = true,
-    this.isDismissible = true,
-    this.enableDrag = true,
     this.backgroundColor,
     this.maxHeight,
     this.padding,
-  }) : super(key: key);
-
-  @override
-  Widget build(BuildContext context) {
-    final bgColor = backgroundColor ?? AyaColors.backgroundGradientEnd;
-    return Container(
-      constraints: BoxConstraints(
-        maxHeight: maxHeight ?? MediaQuery.of(context).size.height * 0.9,
-      ),
-      decoration: BoxDecoration(
-        gradient: LinearGradient(
-          colors: [
-            bgColor,
-            Color.fromRGBO(
-                bgColor.r.round(), bgColor.g.round(), bgColor.b.round(), 0.95),
-          ],
-          begin: Alignment.topCenter,
-          end: Alignment.bottomCenter,
-        ),
-        borderRadius: const BorderRadius.vertical(
-          top: Radius.circular(16),
-        ),
-        boxShadow: [
-          BoxShadow(
-            color: AyaColors.overlayDark,
-            blurRadius: 10,
-            offset: const Offset(0, -2),
-          ),
-        ],
-      ),
-      child: Column(
-        mainAxisSize: MainAxisSize.min,
-        children: [
-          if (showDragHandle) ...[
-            const SizedBox(height: 8),
-            Center(
-              child: Container(
-                width: 32,
-                height: 4,
-                decoration: BoxDecoration(
-                  color: AyaColors.textPrimary40,
-                  borderRadius: BorderRadius.circular(2),
-                ),
-              ),
-            ),
-          ],
-          if (title != null || actions != null) ...[
-            Padding(
-              padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),
-              child: Row(
-                children: [
-                  if (title != null)
-                    Expanded(
-                      child: Text(
-                        title!,
-                        style: const TextStyle(
-                          color: AyaColors.textPrimary,
-                          fontSize: 20,
-                          fontWeight: FontWeight.w600,
-                        ),
-                      ),
-                    ),
-                  if (actions != null) ...actions!,
-                ],
-              ),
-            ),
-            const Divider(
-              color: AyaColors.lavenderSoft,
-              height: 1,
-            ),
-          ],
-          Flexible(
-            child: SingleChildScrollView(
-              padding: padding ?? const EdgeInsets.all(16),
-              child: child,
-            ),
-          ),
-        ],
-      ),
-    );
-  }
+    this.variant = AyaBottomSheetVariant.standard,
+  });
 
   static Future<T?> show<T>({
     required BuildContext context,
     required Widget child,
     String? title,
     List<Widget>? actions,
-    AyaBottomSheetVariant variant = AyaBottomSheetVariant.standard,
     bool showDragHandle = true,
     bool isDismissible = true,
     bool enableDrag = true,
     Color? backgroundColor,
     double? maxHeight,
     EdgeInsets? padding,
+    AyaBottomSheetVariant variant = AyaBottomSheetVariant.standard,
   }) {
     switch (variant) {
       case AyaBottomSheetVariant.modal:
@@ -133,33 +48,18 @@ class AyaBottomSheet extends StatelessWidget {
           isDismissible: isDismissible,
           enableDrag: enableDrag,
           backgroundColor: Colors.transparent,
+          isScrollControlled: true,
           builder: (context) => AyaBottomSheet(
-            child: child,
             title: title,
             actions: actions,
             showDragHandle: showDragHandle,
             backgroundColor: backgroundColor,
             maxHeight: maxHeight,
             padding: padding,
-          ),
-        );
-
-      case AyaBottomSheetVariant.persistent:
-        showBottomSheet(
-          context: context,
-          enableDrag: enableDrag,
-          backgroundColor: Colors.transparent,
-          builder: (context) => AyaBottomSheet(
+            variant: variant,
             child: child,
-            title: title,
-            actions: actions,
-            showDragHandle: showDragHandle,
-            backgroundColor: backgroundColor,
-            maxHeight: maxHeight,
-            padding: padding,
           ),
         );
-        return Future.value(null);
 
       case AyaBottomSheetVariant.standard:
         return showModalBottomSheet<T>(
@@ -168,17 +68,102 @@ class AyaBottomSheet extends StatelessWidget {
           enableDrag: enableDrag,
           backgroundColor: Colors.transparent,
           builder: (context) => AyaBottomSheet(
-            child: child,
             title: title,
             actions: actions,
             showDragHandle: showDragHandle,
             backgroundColor: backgroundColor,
             maxHeight: maxHeight,
             padding: padding,
+            child: child,
           ),
         );
     }
   }
+
+  @override
+  Widget build(BuildContext context) {
+    final bgColor = backgroundColor ?? AyaColors.backgroundGradientEnd;
+    final screenHeight = MediaQuery.of(context).size.height;
+    final maxSheetHeight = maxHeight ?? screenHeight * 0.9;
+
+    return Container(
+      constraints: BoxConstraints(
+        maxHeight: maxSheetHeight,
+      ),
+      decoration: BoxDecoration(
+        gradient: LinearGradient(
+          colors: [
+            bgColor,
+            Color.fromRGBO(
+                bgColor.r.round(), bgColor.g.round(), bgColor.b.round(), 0.95),
+          ],
+          begin: Alignment.topCenter,
+          end: Alignment.bottomCenter,
+        ),
+        borderRadius: const BorderRadius.vertical(
+          top: Radius.circular(16),
+        ),
+        boxShadow: [
+          BoxShadow(
+            color: AyaColors.overlayDark,
+            blurRadius: 10,
+            offset: const Offset(0, -2),
+          ),
+        ],
+      ),
+      child: SafeArea(
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            if (showDragHandle) ...[
+              const SizedBox(height: 8),
+              Center(
+                child: Container(
+                  width: 32,
+                  height: 4,
+                  decoration: BoxDecoration(
+                    color: AyaColors.textPrimary40,
+                    borderRadius: BorderRadius.circular(2),
+                  ),
+                ),
+              ),
+            ],
+            if (title != null || actions != null) ...[
+              Padding(
+                padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),
+                child: Row(
+                  children: [
+                    if (title != null)
+                      Expanded(
+                        child: Text(
+                          title!,
+                          style: const TextStyle(
+                            color: AyaColors.textPrimary,
+                            fontSize: 20,
+                            fontWeight: FontWeight.w600,
+                          ),
+                        ),
+                      ),
+                    if (actions != null) ...actions!,
+                  ],
+                ),
+              ),
+              const Divider(
+                color: AyaColors.lavenderSoft,
+                height: 1,
+              ),
+            ],
+            Flexible(
+              child: SingleChildScrollView(
+                padding: padding ?? const EdgeInsets.all(16),
+                child: child,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
 }
 
 // Extension to make it easier to create common bottom sheet layouts
diff --git a/lib/widgets/aya_button.dart b/lib/widgets/aya_button.dart
index 10ab174..cb251a4 100644
--- a/lib/widgets/aya_button.dart
+++ b/lib/widgets/aya_button.dart
@@ -21,7 +21,7 @@ class AyaButton extends StatefulWidget {
   final EdgeInsetsGeometry? padding;
 
   const AyaButton({
-    Key? key,
+    super.key,
     required this.text,
     this.onPressed,
     this.variant = AyaButtonVariant.primary,
@@ -31,7 +31,7 @@ class AyaButton extends StatefulWidget {
     this.width,
     this.height = 48,
     this.padding,
-  }) : super(key: key);
+  });
 
   @override
   State<AyaButton> createState() => _AyaButtonState();
diff --git a/lib/widgets/aya_card.dart b/lib/widgets/aya_card.dart
index 92ccf30..5a07c9e 100644
--- a/lib/widgets/aya_card.dart
+++ b/lib/widgets/aya_card.dart
@@ -22,7 +22,7 @@ class AyaCard extends StatelessWidget {
   final List<BoxShadow>? boxShadow;
 
   const AyaCard({
-    Key? key,
+    super.key,
     required this.child,
     this.variant = AyaCardVariant.ui,
     this.padding,
@@ -34,7 +34,7 @@ class AyaCard extends StatelessWidget {
     this.borderOpacity = 0.20,
     this.borderRadius = 16.0,
     this.boxShadow,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/aya_dialog.dart b/lib/widgets/aya_dialog.dart
index 16c3407..906935a 100644
--- a/lib/widgets/aya_dialog.dart
+++ b/lib/widgets/aya_dialog.dart
@@ -2,6 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:app_aya_v2/core/theme/app_theme.dart';
 import '../core/services/animations_service.dart';
 import 'aya_button.dart';
+import 'aya_premium_icon.dart';
 
 enum AyaDialogVariant {
   info,
@@ -19,14 +20,14 @@ class AyaDialog extends StatelessWidget {
   final double? maxWidth;
 
   const AyaDialog({
-    Key? key,
+    super.key,
     required this.title,
     required this.content,
     this.actions,
     this.showCloseButton = true,
     this.width,
     this.maxWidth,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
@@ -66,10 +67,12 @@ class AyaDialog extends StatelessWidget {
                   alignment: Alignment.topRight,
                   child: AnimationsService.fadeIn(
                     IconButton(
-                      icon: const Icon(
-                        Icons.close,
-                        color: AyaColors.textPrimary,
-                        size: 20,
+                      icon: AyaPremiumIcon(
+                        icon: Icons.close,
+                        isActive: true,
+                        size: 22,
+                        borderRadius: 8,
+                        padding: const EdgeInsets.all(4),
                       ),
                       onPressed: () => Navigator.of(context).pop(),
                     ),
diff --git a/lib/widgets/aya_glass_card.dart b/lib/widgets/aya_glass_card.dart
new file mode 100644
index 0000000..f9999de
--- /dev/null
+++ b/lib/widgets/aya_glass_card.dart
@@ -0,0 +1,65 @@
+import 'package:flutter/material.dart';
+import 'dart:ui';
+import '../core/theme/app_theme.dart';
+
+class AyaGlassCard extends StatelessWidget {
+  final Widget child;
+  final VoidCallback? onTap;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry? padding;
+  final Color? backgroundColor;
+  final Color? borderColor;
+
+  const AyaGlassCard({
+    super.key,
+    required this.child,
+    this.onTap,
+    this.borderRadius = 16,
+    this.blurRadius = 10,
+    this.padding,
+    this.backgroundColor,
+    this.borderColor,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 16),
+      child: ClipRRect(
+        borderRadius: BorderRadius.circular(borderRadius),
+        child: BackdropFilter(
+          filter: ImageFilter.blur(sigmaX: blurRadius, sigmaY: blurRadius),
+          child: Container(
+            decoration: BoxDecoration(
+              color: backgroundColor ?? AyaColors.glassBackground,
+              borderRadius: BorderRadius.circular(borderRadius),
+              border: Border.all(
+                color: borderColor ?? AyaColors.glassBorder,
+              ),
+              boxShadow: [
+                BoxShadow(
+                  color: AyaColors.glassShadow,
+                  blurRadius: 10,
+                  offset: const Offset(0, 4),
+                ),
+              ],
+            ),
+            child: Material(
+              color: Colors.transparent,
+              child: InkWell(
+                onTap: onTap,
+                child: padding != null
+                    ? Padding(
+                        padding: padding!,
+                        child: child,
+                      )
+                    : child,
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/widgets/aya_glass_container.dart b/lib/widgets/aya_glass_container.dart
new file mode 100644
index 0000000..e95d142
--- /dev/null
+++ b/lib/widgets/aya_glass_container.dart
@@ -0,0 +1,207 @@
+import 'package:flutter/material.dart';
+import 'package:app_aya_v2/core/theme/glassmorphism.dart';
+import 'package:app_aya_v2/core/theme/app_theme.dart';
+import 'dart:ui';
+
+class AyaGlassContainer extends StatelessWidget {
+  final Widget child;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry? padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final BoxConstraints? constraints;
+  final Alignment alignment;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+  final Color? borderColor;
+
+  const AyaGlassContainer({
+    super.key,
+    required this.child,
+    this.borderRadius = 16,
+    this.blurRadius = 10,
+    this.padding,
+    this.margin = EdgeInsets.zero,
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.constraints,
+    this.alignment = Alignment.center,
+    this.animate = true,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+    this.borderColor,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final container = ClipRRect(
+      borderRadius: BorderRadius.circular(borderRadius),
+      child: BackdropFilter(
+        filter: ImageFilter.blur(sigmaX: blurRadius, sigmaY: blurRadius),
+        child: Container(
+          decoration: BoxDecoration(
+            color: backgroundColor ?? AyaColors.glassBackground,
+            borderRadius: BorderRadius.circular(borderRadius),
+            border: Border.all(
+              color: borderColor ?? AyaColors.glassBorder,
+            ),
+            boxShadow: [
+              BoxShadow(
+                color: AyaColors.glassShadow,
+                blurRadius: 10,
+                offset: const Offset(0, 4),
+              ),
+            ],
+          ),
+          child: padding != null
+              ? Padding(
+                  padding: padding!,
+                  child: child,
+                )
+              : child,
+        ),
+      ),
+    );
+
+    if (!animate) {
+      return Container(
+        margin: margin,
+        constraints: constraints,
+        alignment: alignment,
+        child: container,
+      );
+    }
+
+    return TweenAnimationBuilder<double>(
+      tween: Tween(begin: 0.0, end: 1.0),
+      duration: animationDuration,
+      curve: animationCurve,
+      builder: (context, value, child) {
+        return Transform.scale(
+          scale: 0.95 + (value * 0.05),
+          child: Opacity(
+            opacity: value,
+            child: Container(
+              margin: margin,
+              constraints: constraints,
+              alignment: alignment,
+              child: container,
+            ),
+          ),
+        );
+      },
+    );
+  }
+}
+
+class AyaGlassButton extends StatelessWidget {
+  final VoidCallback onPressed;
+  final Widget child;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+
+  const AyaGlassButton({
+    super.key,
+    required this.onPressed,
+    required this.child,
+    this.borderRadius = 12.0,
+    this.blurRadius = 10.0,
+    this.padding = const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
+    this.margin = EdgeInsets.zero,
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.animate = true,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return AyaGlassContainer(
+      borderRadius: borderRadius,
+      blurRadius: blurRadius,
+      padding: padding,
+      margin: margin,
+      backgroundColor: backgroundColor,
+      showInnerBorder: showInnerBorder,
+      showTopHighlight: showTopHighlight,
+      animate: animate,
+      animationDuration: animationDuration,
+      animationCurve: animationCurve,
+      child: Material(
+        color: Colors.transparent,
+        child: InkWell(
+          onTap: onPressed,
+          borderRadius: BorderRadius.circular(borderRadius),
+          child: child,
+        ),
+      ),
+    );
+  }
+}
+
+class AyaGlassCard extends StatelessWidget {
+  final Widget child;
+  final double borderRadius;
+  final double blurRadius;
+  final EdgeInsetsGeometry padding;
+  final EdgeInsetsGeometry margin;
+  final Color? backgroundColor;
+  final bool showInnerBorder;
+  final bool showTopHighlight;
+  final BoxConstraints? constraints;
+  final Alignment alignment;
+  final bool animate;
+  final Duration animationDuration;
+  final Curve animationCurve;
+
+  const AyaGlassCard({
+    super.key,
+    required this.child,
+    this.borderRadius = 16.0,
+    this.blurRadius = 10.0,
+    this.padding = const EdgeInsets.all(16.0),
+    this.margin = const EdgeInsets.all(8.0),
+    this.backgroundColor,
+    this.showInnerBorder = true,
+    this.showTopHighlight = true,
+    this.constraints,
+    this.alignment = Alignment.center,
+    this.animate = true,
+    this.animationDuration = const Duration(milliseconds: 300),
+    this.animationCurve = Curves.easeInOut,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return AyaGlassContainer(
+      borderRadius: borderRadius,
+      blurRadius: blurRadius,
+      padding: padding,
+      margin: margin,
+      backgroundColor: backgroundColor,
+      showInnerBorder: showInnerBorder,
+      showTopHighlight: showTopHighlight,
+      constraints: constraints,
+      alignment: alignment,
+      animate: animate,
+      animationDuration: animationDuration,
+      animationCurve: animationCurve,
+      child: child,
+    );
+  }
+}
diff --git a/lib/widgets/aya_image.dart b/lib/widgets/aya_image.dart
new file mode 100644
index 0000000..2b0fcff
--- /dev/null
+++ b/lib/widgets/aya_image.dart
@@ -0,0 +1,67 @@
+import 'package:flutter/material.dart';
+import 'package:cached_network_image/cached_network_image.dart';
+import '../core/theme/app_theme.dart';
+
+class AyaImage extends StatelessWidget {
+  final String imageUrl;
+  final double? width;
+  final double? height;
+  final BoxFit fit;
+  final BorderRadius? borderRadius;
+  final bool showLoadingIndicator;
+  final Widget? placeholder;
+  final Widget? errorWidget;
+
+  const AyaImage({
+    super.key,
+    required this.imageUrl,
+    this.width,
+    this.height,
+    this.fit = BoxFit.cover,
+    this.borderRadius,
+    this.showLoadingIndicator = true,
+    this.placeholder,
+    this.errorWidget,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    Widget image = CachedNetworkImage(
+      imageUrl: imageUrl,
+      width: width,
+      height: height,
+      fit: fit,
+      placeholder: (context, url) =>
+          placeholder ??
+          (showLoadingIndicator
+              ? Container(
+                  color: AyaColors.lavenderSoft,
+                  child: const Center(
+                    child: CircularProgressIndicator(
+                      color: AyaColors.turquoise,
+                    ),
+                  ),
+                )
+              : Container(color: AyaColors.lavenderSoft)),
+      errorWidget: (context, url, error) =>
+          errorWidget ??
+          Container(
+            color: AyaColors.lavenderSoft,
+            child: const Icon(
+              Icons.image_not_supported,
+              color: AyaColors.textPrimary,
+              size: 48,
+            ),
+          ),
+    );
+
+    if (borderRadius != null) {
+      image = ClipRRect(
+        borderRadius: borderRadius!,
+        child: image,
+      );
+    }
+
+    return image;
+  }
+}
diff --git a/lib/widgets/aya_input.dart b/lib/widgets/aya_input.dart
index 0934292..e344103 100644
--- a/lib/widgets/aya_input.dart
+++ b/lib/widgets/aya_input.dart
@@ -2,6 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:app_aya_v2/core/theme/app_theme.dart';
 import '../core/services/animations_service.dart';
+import 'aya_premium_icon.dart';
 
 enum AyaInputVariant {
   text,
@@ -34,7 +35,7 @@ class AyaInput extends StatefulWidget {
   final EdgeInsetsGeometry? contentPadding;
 
   const AyaInput({
-    Key? key,
+    super.key,
     this.label,
     this.hint,
     this.error,
@@ -55,7 +56,7 @@ class AyaInput extends StatefulWidget {
     this.textAlign = TextAlign.start,
     this.focusNode,
     this.contentPadding,
-  }) : super(key: key);
+  });
 
   @override
   State<AyaInput> createState() => _AyaInputState();
diff --git a/lib/widgets/aya_loading.dart b/lib/widgets/aya_loading.dart
index d61fed3..84ea13c 100644
--- a/lib/widgets/aya_loading.dart
+++ b/lib/widgets/aya_loading.dart
@@ -15,12 +15,12 @@ class AyaLoading extends StatelessWidget {
   final String? message;
 
   const AyaLoading({
-    Key? key,
+    super.key,
     this.variant = AyaLoadingVariant.spinner,
     this.size = 24,
     this.color,
     this.message,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
diff --git a/lib/widgets/aya_snackbar.dart b/lib/widgets/aya_snackbar.dart
index 2d88f6b..1838ea1 100644
--- a/lib/widgets/aya_snackbar.dart
+++ b/lib/widgets/aya_snackbar.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:app_aya_v2/core/theme/app_theme.dart';
 import '../core/services/animations_service.dart';
+import 'aya_premium_icon.dart';
 
 enum AyaSnackbarVariant {
   info,
@@ -18,14 +19,14 @@ class AyaSnackbar extends StatelessWidget {
   final bool showCloseIcon;
 
   const AyaSnackbar({
-    Key? key,
+    super.key,
     required this.message,
     this.variant = AyaSnackbarVariant.info,
     this.actionLabel,
     this.onAction,
     this.duration = const Duration(seconds: 4),
     this.showCloseIcon = true,
-  }) : super(key: key);
+  });
 
   @override
   Widget build(BuildContext context) {
@@ -80,10 +81,12 @@ class AyaSnackbar extends StatelessWidget {
                 if (showCloseIcon)
                   AnimationsService.fadeIn(
                     IconButton(
-                      icon: const Icon(
-                        Icons.close,
-                        color: AyaColors.textPrimary,
-                        size: 20,
+                      icon: AyaPremiumIcon(
+                        icon: Icons.close,
+                        isActive: true,
+                        size: 22,
+                        borderRadius: 8,
+                        padding: const EdgeInsets.all(4),
                       ),
                       onPressed: () {
                         ScaffoldMessenger.of(context).hideCurrentSnackBar();
diff --git a/pubspec.lock b/pubspec.lock
index 7760122..6d590e4 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -53,26 +53,26 @@ packages:
     dependency: transitive
     description:
       name: async
-      sha256: "947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c"
+      sha256: "758e6d74e971c3e5aceb4110bfd6698efc7f501675bcfe0c775459a8140750eb"
       url: "https://pub.dev"
     source: hosted
-    version: "2.11.0"
+    version: "2.13.0"
   audio_session:
     dependency: "direct main"
     description:
       name: audio_session
-      sha256: "2b7fff16a552486d078bfc09a8cde19f426dc6d6329262b684182597bec5b1ac"
+      sha256: "8f96a7fecbb718cb093070f868b4cdcb8a9b1053dce342ff8ab2fde10eb9afb7"
       url: "https://pub.dev"
     source: hosted
-    version: "0.1.25"
+    version: "0.2.2"
   boolean_selector:
     dependency: transitive
     description:
       name: boolean_selector
-      sha256: "6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66"
+      sha256: "8aab1771e1243a5063b8b0ff68042d67334e3feab9e95b9490f9a6ebf73b42ea"
       url: "https://pub.dev"
     source: hosted
-    version: "2.1.1"
+    version: "2.1.2"
   cached_network_image:
     dependency: "direct main"
     description:
@@ -101,26 +101,26 @@ packages:
     dependency: transitive
     description:
       name: characters
-      sha256: "04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605"
+      sha256: f71061c654a3380576a52b451dd5532377954cf9dbd272a78fc8479606670803
       url: "https://pub.dev"
     source: hosted
-    version: "1.3.0"
+    version: "1.4.0"
   clock:
     dependency: transitive
     description:
       name: clock
-      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf
+      sha256: fddb70d9b5277016c77a80201021d40a2247104d9f4aa7bab7157b7e3f05b84b
       url: "https://pub.dev"
     source: hosted
-    version: "1.1.1"
+    version: "1.1.2"
   collection:
     dependency: transitive
     description:
       name: collection
-      sha256: a1ace0a119f20aabc852d165077c036cd864315bd99b7eaa10a60100341941bf
+      sha256: "2f5709ae4d3d59dd8f7cd309b4e023046b57d8a6c82130785d2b0e5868084e76"
       url: "https://pub.dev"
     source: hosted
-    version: "1.19.0"
+    version: "1.19.1"
   convert:
     dependency: transitive
     description:
@@ -165,10 +165,10 @@ packages:
     dependency: transitive
     description:
       name: device_info_plus
-      sha256: "77f757b789ff68e4eaf9c56d1752309bd9f7ad557cb105b938a7f8eb89e59110"
+      sha256: "72d146c6d7098689ff5c5f66bcf593ac11efc530095385356e131070333e64da"
       url: "https://pub.dev"
     source: hosted
-    version: "9.1.2"
+    version: "11.3.0"
   device_info_plus_platform_interface:
     dependency: transitive
     description:
@@ -177,6 +177,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "7.0.2"
+  dio:
+    dependency: "direct main"
+    description:
+      name: dio
+      sha256: "253a18bbd4851fecba42f7343a1df3a9a4c1d31a2c1b37e221086b4fa8c8dbc9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.8.0+1"
+  dio_web_adapter:
+    dependency: transitive
+    description:
+      name: dio_web_adapter
+      sha256: "7586e476d70caecaf1686d21eee7247ea43ef5c345eab9e0cc3583ff13378d78"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.1"
   encrypt:
     dependency: "direct main"
     description:
@@ -197,10 +213,10 @@ packages:
     dependency: transitive
     description:
       name: fake_async
-      sha256: "511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78"
+      sha256: "5368f224a74523e8d2e7399ea1638b37aecfca824a3cc4dfdf77bf1fa905ac44"
       url: "https://pub.dev"
     source: hosted
-    version: "1.3.1"
+    version: "1.3.3"
   ffi:
     dependency: transitive
     description:
@@ -261,10 +277,10 @@ packages:
     dependency: "direct main"
     description:
       name: fl_chart
-      sha256: "5a74434cc83bf64346efb562f1a06eefaf1bcb530dc3d96a104f631a1eff8d79"
+      sha256: "577aeac8ca414c25333334d7c4bb246775234c0e44b38b10a82b559dd4d764e7"
       url: "https://pub.dev"
     source: hosted
-    version: "0.65.0"
+    version: "1.0.0"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -372,10 +388,10 @@ packages:
     dependency: "direct main"
     description:
       name: go_router
-      sha256: b465e99ce64ba75e61c8c0ce3d87b66d8ac07f0b35d0a7e0263fcfc10f99e836
+      sha256: "0b1e06223bee260dee31a171fb1153e306907563a0b0225e8c1733211911429a"
       url: "https://pub.dev"
     source: hosted
-    version: "13.2.5"
+    version: "15.1.2"
   google_fonts:
     dependency: "direct main"
     description:
@@ -472,6 +488,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "4.1.2"
+  iconoir_flutter:
+    dependency: "direct main"
+    description:
+      name: iconoir_flutter
+      sha256: "1d8d076d5dec9faf4e1ed6c10cf802957ca557477473937f82d8076b9077b085"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.11.0"
   image_picker:
     dependency: "direct main"
     description:
@@ -540,10 +564,10 @@ packages:
     dependency: "direct main"
     description:
       name: intl
-      sha256: d6f56758b7d3014a48af9701c085700aac781a92a87a62b1333b46d8879661cf
+      sha256: "3df61194eb431efc39c4ceba583b95633a403f46c9fd341e550ce0bfa50e9aa5"
       url: "https://pub.dev"
     source: hosted
-    version: "0.19.0"
+    version: "0.20.2"
   js:
     dependency: transitive
     description:
@@ -588,18 +612,18 @@ packages:
     dependency: transitive
     description:
       name: leak_tracker
-      sha256: "7bb2830ebd849694d1ec25bf1f44582d6ac531a57a365a803a6034ff751d2d06"
+      sha256: "6bb818ecbdffe216e81182c2f0714a2e62b593f4a4f13098713ff1685dfb6ab0"
       url: "https://pub.dev"
     source: hosted
-    version: "10.0.7"
+    version: "10.0.9"
   leak_tracker_flutter_testing:
     dependency: transitive
     description:
       name: leak_tracker_flutter_testing
-      sha256: "9491a714cca3667b60b5c420da8217e6de0d1ba7a5ec322fab01758f6998f379"
+      sha256: f8b613e7e6a13ec79cfdc0e97638fddb3ab848452eff057653abd3edba760573
       url: "https://pub.dev"
     source: hosted
-    version: "3.0.8"
+    version: "3.0.9"
   leak_tracker_testing:
     dependency: transitive
     description:
@@ -636,10 +660,10 @@ packages:
     dependency: transitive
     description:
       name: matcher
-      sha256: d2323aa2060500f906aa31a895b4030b6da3ebdcc5619d14ce1aada65cd161cb
+      sha256: dc58c723c3c24bf8d3e2d3ad3f2f9d7bd9cf43ec6feaa64181775e60190153f2
       url: "https://pub.dev"
     source: hosted
-    version: "0.12.16+1"
+    version: "0.12.17"
   material_color_utilities:
     dependency: transitive
     description:
@@ -652,10 +676,10 @@ packages:
     dependency: transitive
     description:
       name: meta
-      sha256: bdb68674043280c3428e9ec998512fb681678676b3c54e773629ffe74419f8c7
+      sha256: e3641ec5d63ebf0d9b41bd43201a66e3fc79a65db5f61fc181f04cd27aab950c
       url: "https://pub.dev"
     source: hosted
-    version: "1.15.0"
+    version: "1.16.0"
   mime:
     dependency: transitive
     description:
@@ -676,10 +700,10 @@ packages:
     dependency: "direct main"
     description:
       name: path
-      sha256: "087ce49c3f0dc39180befefc60fdb4acd8f8620e5682fe2476afd0b3688bb4af"
+      sha256: "75cca69d1490965be98c73ceaea117e8a04dd21217b37b292c9ddbec0d955bc5"
       url: "https://pub.dev"
     source: hosted
-    version: "1.9.0"
+    version: "1.9.1"
   path_parsing:
     dependency: transitive
     description:
@@ -905,10 +929,10 @@ packages:
     dependency: transitive
     description:
       name: source_span
-      sha256: "53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c"
+      sha256: "254ee5351d6cb365c859e20ee823c3bb479bf4a293c22d17a9f1bf144ce86f7c"
       url: "https://pub.dev"
     source: hosted
-    version: "1.10.0"
+    version: "1.10.1"
   sprintf:
     dependency: transitive
     description:
@@ -961,10 +985,10 @@ packages:
     dependency: transitive
     description:
       name: stack_trace
-      sha256: "9f47fd3630d76be3ab26f0ee06d213679aa425996925ff3feffdec504931c377"
+      sha256: "8b27215b45d22309b5cddda1aa2b19bdfec9df0e765f2de506401c071d38d1b1"
       url: "https://pub.dev"
     source: hosted
-    version: "1.12.0"
+    version: "1.12.1"
   state_notifier:
     dependency: transitive
     description:
@@ -985,18 +1009,18 @@ packages:
     dependency: transitive
     description:
       name: stream_channel
-      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7
+      sha256: "969e04c80b8bcdf826f8f16579c7b14d780458bd97f56d107d3950fdbeef059d"
       url: "https://pub.dev"
     source: hosted
-    version: "2.1.2"
+    version: "2.1.4"
   string_scanner:
     dependency: transitive
     description:
       name: string_scanner
-      sha256: "688af5ed3402a4bde5b3a6c15fd768dbf2621a614950b17f04626c431ab3c4c3"
+      sha256: "921cd31725b72fe181906c6a94d987c78e3b98c2e205b397ea399d4054872b43"
       url: "https://pub.dev"
     source: hosted
-    version: "1.3.0"
+    version: "1.4.1"
   supabase:
     dependency: transitive
     description:
@@ -1017,66 +1041,66 @@ packages:
     dependency: transitive
     description:
       name: syncfusion_flutter_core
-      sha256: "7666506885ebc8f62bb928ad4588a73e20caaff2b2cf2b2b56f67d98f4113525"
+      sha256: "69fa2cccda6013770273fb726d03528c35d6ced00a28a7b21fae8c7d5c756a73"
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_flutter_pdf:
     dependency: transitive
     description:
       name: syncfusion_flutter_pdf
-      sha256: a9e85bbfd574bb262733b33494240fda38bfeb58553537560ba4b3f54a31418b
+      sha256: d6035c31119ae608aa12f367bff60f5b7a84e573daebff1dee26a064c7e56384
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_flutter_pdfviewer:
     dependency: "direct main"
     description:
       name: syncfusion_flutter_pdfviewer
-      sha256: "2acc70e8f4bf23e4bdef1810d92ccbc5011d596a89d91fd35c0199617ca43980"
+      sha256: d4702be3e6d1b4ebed85924eb1ea4fd4fc7e22127aecf5bac697416e85ae1f0a
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_flutter_signaturepad:
     dependency: transitive
     description:
       name: syncfusion_flutter_signaturepad
-      sha256: "2ab2c81176ed6779a0e5f7724645c9af2a1656eec3f53ef6b10d67d9d65f0b4a"
+      sha256: b7f56757d2eb3d97d9f1d97afbb0b486a21f8c4e7e264bb182bd7904cae2e4b0
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_pdfviewer_macos:
     dependency: transitive
     description:
       name: syncfusion_pdfviewer_macos
-      sha256: "6dad65d36d32e679e7666be438a5a75d870e0b1b9cd010ddcfc7475b9063a89d"
+      sha256: "3a063fbdc5770e3a4ea1be3fa4e0aea94521fc2119a661999640fced899633e6"
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_pdfviewer_platform_interface:
     dependency: transitive
     description:
       name: syncfusion_pdfviewer_platform_interface
-      sha256: "6a1bf9fe0648daa77e3c76052f7d02b50f1208ae1d751f648100e46100bf8711"
+      sha256: ac9322a84b399bb551e9876d47cea766ddb4677e34e9a4edc6b6d7cfffc056d4
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_pdfviewer_web:
     dependency: transitive
     description:
       name: syncfusion_pdfviewer_web
-      sha256: e16aa5569770e9a08e3b1a110d4812532546ab4932f86e8b16e2008c592b5651
+      sha256: ff3d9c65a5ffa15b0930c5ebbe80a097d36532ea8729c41204ba18dea50b5781
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   syncfusion_pdfviewer_windows:
     dependency: transitive
     description:
       name: syncfusion_pdfviewer_windows
-      sha256: "6e33562967828feeebc1b5cb0e5f1ec23abb86007dce37773501f9f18bfe3a36"
+      sha256: bc5d6667cc249a4788d154d06539ea151089fc80ca893a0aa031723f97271042
       url: "https://pub.dev"
     source: hosted
-    version: "24.2.9"
+    version: "29.2.5"
   synchronized:
     dependency: transitive
     description:
@@ -1089,18 +1113,18 @@ packages:
     dependency: transitive
     description:
       name: term_glyph
-      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84
+      sha256: "7f554798625ea768a7518313e58f83891c7f5024f88e46e7182a4558850a4b8e"
       url: "https://pub.dev"
     source: hosted
-    version: "1.2.1"
+    version: "1.2.2"
   test_api:
     dependency: transitive
     description:
       name: test_api
-      sha256: "664d3a9a64782fcdeb83ce9c6b39e78fd2971d4e37827b9b06c3aa1edc5e760c"
+      sha256: fb31f383e2ee25fbbfe06b40fe21e1e458d14080e3c67e7ba0acfde4df4e0bbd
       url: "https://pub.dev"
     source: hosted
-    version: "0.7.3"
+    version: "0.7.4"
   typed_data:
     dependency: transitive
     description:
@@ -1281,10 +1305,10 @@ packages:
     dependency: transitive
     description:
       name: vm_service
-      sha256: f6be3ed8bd01289b34d679c2b62226f63c0e69f9fd2e50a6b3c1c729a961041b
+      sha256: ddfa8d30d89985b96407efce8acbdd124701f96741f2d981ca860662f1c0dc02
       url: "https://pub.dev"
     source: hosted
-    version: "14.3.0"
+    version: "15.0.0"
   web:
     dependency: transitive
     description:
@@ -1350,5 +1374,5 @@ packages:
     source: hosted
     version: "2.1.0"
 sdks:
-  dart: ">=3.6.1 <4.0.0"
-  flutter: ">=3.27.0"
+  dart: ">=3.7.0 <4.0.0"
+  flutter: ">=3.27.4"
diff --git a/pubspec.yaml b/pubspec.yaml
index 9c4ddc1..a3d7291 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -43,7 +43,7 @@ dependencies:
   flutter_riverpod: ^2.4.9
   
   # Navegação
-  go_router: ^13.2.0
+  go_router: ^15.1.2
   
   # UI e Widgets
   flutter_svg: ^2.0.9
@@ -52,14 +52,15 @@ dependencies:
   cached_network_image: ^3.3.1
   
   # Utilitários
-  intl: ^0.19.0
+  intl: ^0.20.2
   shared_preferences: ^2.2.2
   url_launcher: ^6.2.4
   path_provider: ^2.1.5
+  dio: ^5.4.1
   
   # Áudio (para meditações)
   just_audio: ^0.10.3
-  audio_session: ^0.1.18
+  audio_session: ^0.2.2
   shimmer: ^3.0.0
   google_sign_in: ^6.3.0
   sign_in_with_apple: ^7.0.1
@@ -70,11 +71,12 @@ dependencies:
   flutter_secure_storage: ^4.2.1
   sqflite: ^2.4.1
   image_picker: ^1.1.2
-  fl_chart: ^0.65.0
+  fl_chart: ^1.0.0
   uni_links: ^0.5.1
   video_player: ^2.9.5
-  syncfusion_flutter_pdfviewer: ^24.2.8
+  syncfusion_flutter_pdfviewer: ^29.2.5
   flutter_html: ^3.0.0-beta.2
+  iconoir_flutter: ^7.11.0
 
 dev_dependencies:
   flutter_test:
